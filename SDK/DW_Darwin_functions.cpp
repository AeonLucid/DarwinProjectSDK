// Darwin Project (0.11974) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "DW_Darwin_parameters.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function Darwin.DarwinActorComponent.ServerSetBool
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 VarName                        (Parm, ZeroConstructor)
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinActorComponent::ServerSetBool(const struct FString& VarName, bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinActorComponent.ServerSetBool");

	UDarwinActorComponent_ServerSetBool_Params params;
	params.VarName = VarName;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinActorComponent.NetMulticastSetBool
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// struct FString                 VarName                        (Parm, ZeroConstructor)
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinActorComponent::NetMulticastSetBool(const struct FString& VarName, bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinActorComponent.NetMulticastSetBool");

	UDarwinActorComponent_NetMulticastSetBool_Params params;
	params.VarName = VarName;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAIDrone.NetMulticastHitByWeapon
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 vel                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinAIDrone::NetMulticastHitByWeapon(const struct FVector& vel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAIDrone.NetMulticastHitByWeapon");

	ADarwinAIDrone_NetMulticastHitByWeapon_Params params;
	params.vel = vel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAIDrone.EventHitByWeapon
// (Event, Public, BlueprintEvent)

void ADarwinAIDrone::EventHitByWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAIDrone.EventHitByWeapon");

	ADarwinAIDrone_EventHitByWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinControllerComponent.OwnerIsShowDirector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinControllerComponent::OwnerIsShowDirector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinControllerComponent.OwnerIsShowDirector");

	UDarwinControllerComponent_OwnerIsShowDirector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinControllerComponent.OwnerIsDronePawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinControllerComponent::OwnerIsDronePawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinControllerComponent.OwnerIsDronePawn");

	UDarwinControllerComponent_OwnerIsDronePawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinControllerComponent.OwnerIsCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinControllerComponent::OwnerIsCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinControllerComponent.OwnerIsCharacter");

	UDarwinControllerComponent_OwnerIsCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinControllerComponent.OwnerIsBeholder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinControllerComponent::OwnerIsBeholder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinControllerComponent.OwnerIsBeholder");

	UDarwinControllerComponent_OwnerIsBeholder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinAkAudioComponent.EventLocalTimeOfDay
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Hours                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Minutes                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventLocalTimeOfDay(class AActor* Pawn, float Hours, float Minutes, float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventLocalTimeOfDay");

	UDarwinAkAudioComponent_EventLocalTimeOfDay_Params params;
	params.Pawn = Pawn;
	params.Hours = Hours;
	params.Minutes = Minutes;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventLocalThunder
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)

void UDarwinAkAudioComponent::EventLocalThunder(class AActor* Pawn, const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventLocalThunder");

	UDarwinAkAudioComponent_EventLocalThunder_Params params;
	params.Pawn = Pawn;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventLocalStormSoundStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventLocalStormSoundStart(class AActor* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventLocalStormSoundStart");

	UDarwinAkAudioComponent_EventLocalStormSoundStart_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventLocalStormIntensity
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventLocalStormIntensity(class AActor* Pawn, float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventLocalStormIntensity");

	UDarwinAkAudioComponent_EventLocalStormIntensity_Params params;
	params.Pawn = Pawn;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventLoadSoundBank
// (Event, Public, BlueprintEvent)

void UDarwinAkAudioComponent::EventLoadSoundBank()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventLoadSoundBank");

	UDarwinAkAudioComponent_EventLoadSoundBank_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventLeaveSuddenDeath
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventLeaveSuddenDeath(class AActor* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventLeaveSuddenDeath");

	UDarwinAkAudioComponent_EventLeaveSuddenDeath_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventLeaveMainMenu
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventLeaveMainMenu(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventLeaveMainMenu");

	UDarwinAkAudioComponent_EventLeaveMainMenu_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventLeaveLobby
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventLeaveLobby(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventLeaveLobby");

	UDarwinAkAudioComponent_EventLeaveLobby_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventLeaveGameWorld
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventLeaveGameWorld(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventLeaveGameWorld");

	UDarwinAkAudioComponent_EventLeaveGameWorld_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventGameIsAboutToStartCountdown
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            secondsLeft                    (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventGameIsAboutToStartCountdown(int secondsLeft, class AActor* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventGameIsAboutToStartCountdown");

	UDarwinAkAudioComponent_EventGameIsAboutToStartCountdown_Params params;
	params.secondsLeft = secondsLeft;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventGameIsAboutToStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventGameIsAboutToStart(class AActor* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventGameIsAboutToStart");

	UDarwinAkAudioComponent_EventGameIsAboutToStart_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventEnterSuddenDeath
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventEnterSuddenDeath(class AActor* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventEnterSuddenDeath");

	UDarwinAkAudioComponent_EventEnterSuddenDeath_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventEnterMainMenu
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventEnterMainMenu(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventEnterMainMenu");

	UDarwinAkAudioComponent_EventEnterMainMenu_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventEnterLobby
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventEnterLobby(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventEnterLobby");

	UDarwinAkAudioComponent_EventEnterLobby_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventEnterGameWorld
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventEnterGameWorld(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventEnterGameWorld");

	UDarwinAkAudioComponent_EventEnterGameWorld_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAkAudioComponent.EventCountDown
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAkAudioComponent::EventCountDown(class AActor* Pawn, int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAkAudioComponent.EventCountDown");

	UDarwinAkAudioComponent_EventCountDown_Params params;
	params.Pawn = Pawn;
	params.Number = Number;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterComponent.GetDarwinCharacterController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADarwinController*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADarwinController* UDarwinCharacterComponent::GetDarwinCharacterController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterComponent.GetDarwinCharacterController");

	UDarwinCharacterComponent_GetDarwinCharacterController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinAllianceComponent.ServerSendMessageToAlly
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 msg                            (Parm, ZeroConstructor)

void UDarwinAllianceComponent::ServerSendMessageToAlly(const struct FString& msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAllianceComponent.ServerSendMessageToAlly");

	UDarwinAllianceComponent_ServerSendMessageToAlly_Params params;
	params.msg = msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAllianceComponent.ServerSendAcceptAllyRequest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ADarwinAllyFlag*         ally_flag                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAllianceComponent::ServerSendAcceptAllyRequest(class ADarwinAllyFlag* ally_flag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAllianceComponent.ServerSendAcceptAllyRequest");

	UDarwinAllianceComponent_ServerSendAcceptAllyRequest_Params params;
	params.ally_flag = ally_flag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAllianceComponent.ServerForceSetAlly
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ADarwinCharacter*        Ally                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAllianceComponent::ServerForceSetAlly(class ADarwinCharacter* Ally)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAllianceComponent.ServerForceSetAlly");

	UDarwinAllianceComponent_ServerForceSetAlly_Params params;
	params.Ally = Ally;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAllianceComponent.ServerBreakAlliance
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinAllianceComponent::ServerBreakAlliance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAllianceComponent.ServerBreakAlliance");

	UDarwinAllianceComponent_ServerBreakAlliance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAllianceComponent.NetMulticastPreviousAlliedCharacter
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        previousAlly                   (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAllianceComponent::NetMulticastPreviousAlliedCharacter(class ADarwinCharacter* previousAlly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAllianceComponent.NetMulticastPreviousAlliedCharacter");

	UDarwinAllianceComponent_NetMulticastPreviousAlliedCharacter_Params params;
	params.previousAlly = previousAlly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAllianceComponent.NetMulticastAlliedCharacter
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        newAlly                        (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAllianceComponent::NetMulticastAlliedCharacter(class ADarwinCharacter* newAlly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAllianceComponent.NetMulticastAlliedCharacter");

	UDarwinAllianceComponent_NetMulticastAlliedCharacter_Params params;
	params.newAlly = newAlly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAllianceComponent.EventSetAlly
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Ally                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAllianceComponent::EventSetAlly(class ADarwinCharacter* Ally)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAllianceComponent.EventSetAlly");

	UDarwinAllianceComponent_EventSetAlly_Params params;
	params.Ally = Ally;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAllianceComponent.ClientSendMessageToAlly
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 msg                            (Parm, ZeroConstructor)

void UDarwinAllianceComponent::ClientSendMessageToAlly(const struct FString& msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAllianceComponent.ClientSendMessageToAlly");

	UDarwinAllianceComponent_ClientSendMessageToAlly_Params params;
	params.msg = msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAllyFlag.NetMulticastAllyFlagDestroy
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinDamageTypeEnum          dmgType                        (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        attacker                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinAllyFlag::NetMulticastAllyFlagDestroy(EDarwinDamageTypeEnum dmgType, class ADarwinCharacter* attacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAllyFlag.NetMulticastAllyFlagDestroy");

	ADarwinAllyFlag_NetMulticastAllyFlagDestroy_Params params;
	params.dmgType = dmgType;
	params.attacker = attacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAllyFlag.EventInitializeAvatarTexture
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*              AvatarTexture                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ADarwinAllyFlag::EventInitializeAvatarTexture(class UTexture2D* AvatarTexture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAllyFlag.EventInitializeAvatarTexture");

	ADarwinAllyFlag_EventInitializeAvatarTexture_Params params;
	params.AvatarTexture = AvatarTexture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAllyFlag.EventAllyFlagDestroyed
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinAllyFlag::EventAllyFlagDestroyed(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAllyFlag.EventAllyFlagDestroyed");

	ADarwinAllyFlag_EventAllyFlagDestroyed_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinArcadeDamageWidget.EventUpdateDistance
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinArcadeDamageWidget::EventUpdateDistance(float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinArcadeDamageWidget.EventUpdateDistance");

	UDarwinArcadeDamageWidget_EventUpdateDistance_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinArcadeDamageWidget.EventInitializeArcadeDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinDamageTypeEnum          Type                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsAttackerLocal               (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bKO                            (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinArcadeDamageWidget::EventInitializeArcadeDamage(EDarwinDamageTypeEnum Type, float Damage, bool bIsAttackerLocal, float Scale, bool bKO)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinArcadeDamageWidget.EventInitializeArcadeDamage");

	UDarwinArcadeDamageWidget_EventInitializeArcadeDamage_Params params;
	params.Type = Type;
	params.Damage = Damage;
	params.bIsAttackerLocal = bIsAttackerLocal;
	params.Scale = Scale;
	params.bKO = bKO;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAutokam.EventUpdateRot
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FRotator                rot                            (Parm, IsPlainOldData)

void ADarwinAutokam::EventUpdateRot(const struct FRotator& rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAutokam.EventUpdateRot");

	ADarwinAutokam_EventUpdateRot_Params params;
	params.rot = rot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.ServerStartWindup
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinAxeComponent::ServerStartWindup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.ServerStartWindup");

	UDarwinAxeComponent_ServerStartWindup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastStartWindup
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinAxeComponent::NetMulticastStartWindup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastStartWindup");

	UDarwinAxeComponent_NetMulticastStartWindup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastSpawnWoodChunks
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCage*             Cage                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAxeComponent::NetMulticastSpawnWoodChunks(class ADarwinCage* Cage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastSpawnWoodChunks");

	UDarwinAxeComponent_NetMulticastSpawnWoodChunks_Params params;
	params.Cage = Cage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastSpawnLightning
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::NetMulticastSpawnLightning(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastSpawnLightning");

	UDarwinAxeComponent_NetMulticastSpawnLightning_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastReflectedByForcefield
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAxeComponent::NetMulticastReflectedByForcefield(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastReflectedByForcefield");

	UDarwinAxeComponent_NetMulticastReflectedByForcefield_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastInteruptSwing
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinAxeComponent::NetMulticastInteruptSwing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastInteruptSwing");

	UDarwinAxeComponent_NetMulticastInteruptSwing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastHitZombie
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinZombie*           zombie                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAxeComponent::NetMulticastHitZombie(class ADarwinZombie* zombie)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastHitZombie");

	UDarwinAxeComponent_NetMulticastHitZombie_Params params;
	params.zombie = zombie;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastHitWall
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::NetMulticastHitWall(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastHitWall");

	UDarwinAxeComponent_NetMulticastHitWall_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastHitEnemy
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bArmorHit                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAxeComponent::NetMulticastHitEnemy(class ADarwinCharacter* Character, bool bArmorHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastHitEnemy");

	UDarwinAxeComponent_NetMulticastHitEnemy_Params params;
	params.Character = Character;
	params.bArmorHit = bArmorHit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastHitArmor
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAxeComponent::NetMulticastHitArmor(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastHitArmor");

	UDarwinAxeComponent_NetMulticastHitArmor_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastDrawTrace
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 axeLoc                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 axeHeadLoc                     (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::NetMulticastDrawTrace(const struct FVector& axeLoc, const struct FVector& axeHeadLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastDrawTrace");

	UDarwinAxeComponent_NetMulticastDrawTrace_Params params;
	params.axeLoc = axeLoc;
	params.axeHeadLoc = axeHeadLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastDragonPunch
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::NetMulticastDragonPunch(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastDragonPunch");

	UDarwinAxeComponent_NetMulticastDragonPunch_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastBlocked
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinAxeComponent::NetMulticastBlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastBlocked");

	UDarwinAxeComponent_NetMulticastBlocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.NetMulticastAxeLocation
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Axe                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 axeHead                        (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::NetMulticastAxeLocation(const struct FVector& Axe, const struct FVector& axeHead)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.NetMulticastAxeLocation");

	UDarwinAxeComponent_NetMulticastAxeLocation_Params params;
	params.Axe = Axe;
	params.axeHead = axeHead;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventStartWindupRadialForce
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::EventStartWindupRadialForce(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventStartWindupRadialForce");

	UDarwinAxeComponent_EventStartWindupRadialForce_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventStartWindup
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::EventStartWindup(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventStartWindup");

	UDarwinAxeComponent_EventStartWindup_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventStartStartSwing
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::EventStartStartSwing(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventStartStartSwing");

	UDarwinAxeComponent_EventStartStartSwing_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventStartDamageWindow
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::EventStartDamageWindow(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventStartDamageWindow");

	UDarwinAxeComponent_EventStartDamageWindow_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventSpawnLightning
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::EventSpawnLightning(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventSpawnLightning");

	UDarwinAxeComponent_EventSpawnLightning_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventReflectedByForcefield
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::EventReflectedByForcefield(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventReflectedByForcefield");

	UDarwinAxeComponent_EventReflectedByForcefield_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventHitZombie
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinZombie*           zombie                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAxeComponent::EventHitZombie(class ADarwinZombie* zombie)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventHitZombie");

	UDarwinAxeComponent_EventHitZombie_Params params;
	params.zombie = zombie;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventHitWall
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::EventHitWall(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventHitWall");

	UDarwinAxeComponent_EventHitWall_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventHitEnemy
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBackHit                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinAxeComponent::EventHitEnemy(class ADarwinCharacter* Character, bool bBackHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventHitEnemy");

	UDarwinAxeComponent_EventHitEnemy_Params params;
	params.Character = Character;
	params.bBackHit = bBackHit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventHitCage
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::EventHitCage(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventHitCage");

	UDarwinAxeComponent_EventHitCage_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventHitArmor
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::EventHitArmor(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventHitArmor");

	UDarwinAxeComponent_EventHitArmor_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventDragonPunch
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::EventDragonPunch(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventDragonPunch");

	UDarwinAxeComponent_EventDragonPunch_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinAxeComponent.EventBlocked
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinAxeComponent::EventBlocked(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinAxeComponent.EventBlocked");

	UDarwinAxeComponent_EventBlocked_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftableTool.OnRepDarwinCharacterOwner
// (Final, Native, Public)

void ADarwinCraftableTool::OnRepDarwinCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftableTool.OnRepDarwinCharacterOwner");

	ADarwinCraftableTool_OnRepDarwinCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftableTool.NetMulticastCraftableToolSprung
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        characterTarget                (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCraftableTool::NetMulticastCraftableToolSprung(class ADarwinCharacter* characterTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftableTool.NetMulticastCraftableToolSprung");

	ADarwinCraftableTool_NetMulticastCraftableToolSprung_Params params;
	params.characterTarget = characterTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftableTool.NetMulticastCraftableToolDestroy
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinDamageTypeEnum          DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        attacker                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCraftableTool::NetMulticastCraftableToolDestroy(EDarwinDamageTypeEnum DamageType, class ADarwinCharacter* attacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftableTool.NetMulticastCraftableToolDestroy");

	ADarwinCraftableTool_NetMulticastCraftableToolDestroy_Params params;
	params.DamageType = DamageType;
	params.attacker = attacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftableTool.EventInitializeMeshArray
// (Event, Public, BlueprintEvent)

void ADarwinCraftableTool::EventInitializeMeshArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftableTool.EventInitializeMeshArray");

	ADarwinCraftableTool_EventInitializeMeshArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftableTool.EventCraftableToolSprungDedicatedServer
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        characterTarget                (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCraftableTool::EventCraftableToolSprungDedicatedServer(class ADarwinCharacter* characterTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftableTool.EventCraftableToolSprungDedicatedServer");

	ADarwinCraftableTool_EventCraftableToolSprungDedicatedServer_Params params;
	params.characterTarget = characterTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftableTool.EventCraftableToolSprung
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        characterTarget                (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCraftableTool::EventCraftableToolSprung(class ADarwinCharacter* characterTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftableTool.EventCraftableToolSprung");

	ADarwinCraftableTool_EventCraftableToolSprung_Params params;
	params.characterTarget = characterTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftableTool.EventCraftableToolDestroyedDedicatedServer
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinCraftableTool::EventCraftableToolDestroyedDedicatedServer(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftableTool.EventCraftableToolDestroyedDedicatedServer");

	ADarwinCraftableTool_EventCraftableToolDestroyedDedicatedServer_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftableTool.EventCraftableToolDestroyed
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinCraftableTool::EventCraftableToolDestroyed(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftableTool.EventCraftableToolDestroyed");

	ADarwinCraftableTool_EventCraftableToolDestroyed_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.Touched
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::Touched(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.Touched");

	ADarwinDronePawn_Touched_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.SetIntroMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::SetIntroMode(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.SetIntroMode");

	ADarwinDronePawn_SetIntroMode_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.ServerUnstuckFollower
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                  Spot                           (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::ServerUnstuckFollower(class AActor* Spot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.ServerUnstuckFollower");

	ADarwinDronePawn_ServerUnstuckFollower_Params params;
	params.Spot = Spot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.ServerSetZoomFactor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::ServerSetZoomFactor(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.ServerSetZoomFactor");

	ADarwinDronePawn_ServerSetZoomFactor_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.ServerSetWantedFollowRotation
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                Value                          (Parm, IsPlainOldData)

void ADarwinDronePawn::ServerSetWantedFollowRotation(const struct FRotator& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.ServerSetWantedFollowRotation");

	ADarwinDronePawn_ServerSetWantedFollowRotation_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.ServerSetTransform
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                rot                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinDronePawn::ServerSetTransform(const struct FVector& Loc, const struct FRotator& rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.ServerSetTransform");

	ADarwinDronePawn_ServerSetTransform_Params params;
	params.Loc = Loc;
	params.rot = rot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.ServerSetRotaCam
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::ServerSetRotaCam(bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.ServerSetRotaCam");

	ADarwinDronePawn_ServerSetRotaCam_Params params;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.ServerSetNetId
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 inNetId                        (Parm, ZeroConstructor)

void ADarwinDronePawn::ServerSetNetId(const struct FString& inNetId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.ServerSetNetId");

	ADarwinDronePawn_ServerSetNetId_Params params;
	params.inNetId = inNetId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.ServerSetCamStateFollowCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::ServerSetCamStateFollowCharacter(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.ServerSetCamStateFollowCharacter");

	ADarwinDronePawn_ServerSetCamStateFollowCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.ServerRestartMap
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ADarwinDronePawn::ServerRestartMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.ServerRestartMap");

	ADarwinDronePawn_ServerRestartMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.ServerLightUpdate
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::ServerLightUpdate(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.ServerLightUpdate");

	ADarwinDronePawn_ServerLightUpdate_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.ServerExecuteSDPower
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            targetIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::ServerExecuteSDPower(EDarwinItemTypeEnum powerType, int targetIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.ServerExecuteSDPower");

	ADarwinDronePawn_ServerExecuteSDPower_Params params;
	params.powerType = powerType;
	params.targetIndex = targetIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.OnRepDarwinUniqueID
// (Final, Native, Public)

void ADarwinDronePawn::OnRepDarwinUniqueID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.OnRepDarwinUniqueID");

	ADarwinDronePawn_OnRepDarwinUniqueID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.NetMulticastSetWantedFollowRotation
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FRotator                Value                          (Parm, IsPlainOldData)

void ADarwinDronePawn::NetMulticastSetWantedFollowRotation(const struct FRotator& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.NetMulticastSetWantedFollowRotation");

	ADarwinDronePawn_NetMulticastSetWantedFollowRotation_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.NetMulticastSetTransform
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                rot                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinDronePawn::NetMulticastSetTransform(const struct FVector& Loc, const struct FRotator& rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.NetMulticastSetTransform");

	ADarwinDronePawn_NetMulticastSetTransform_Params params;
	params.Loc = Loc;
	params.rot = rot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.NetMulticastSetLocAndRotAtGameStart
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                rot                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinDronePawn::NetMulticastSetLocAndRotAtGameStart(const struct FVector& Loc, const struct FRotator& rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.NetMulticastSetLocAndRotAtGameStart");

	ADarwinDronePawn_NetMulticastSetLocAndRotAtGameStart_Params params;
	params.Loc = Loc;
	params.rot = rot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.NetMulticastSetCamStateFollowCharacter
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::NetMulticastSetCamStateFollowCharacter(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.NetMulticastSetCamStateFollowCharacter");

	ADarwinDronePawn_NetMulticastSetCamStateFollowCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.NetMulticastLightUpdate
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::NetMulticastLightUpdate(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.NetMulticastLightUpdate");

	ADarwinDronePawn_NetMulticastLightUpdate_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.NetMulticastExecuteSDPower
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            targetIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::NetMulticastExecuteSDPower(EDarwinItemTypeEnum powerType, int targetIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.NetMulticastExecuteSDPower");

	ADarwinDronePawn_NetMulticastExecuteSDPower_Params params;
	params.powerType = powerType;
	params.targetIndex = targetIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.InitiateBloodPact
// (Final, Exec, Native, Public)

void ADarwinDronePawn::InitiateBloodPact()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.InitiateBloodPact");

	ADarwinDronePawn_InitiateBloodPact_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.GetIsInLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinDronePawn::GetIsInLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.GetIsInLobby");

	ADarwinDronePawn_GetIsInLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDronePawn.GetIsInCamStateCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinDronePawn::GetIsInCamStateCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.GetIsInCamStateCharacter");

	ADarwinDronePawn_GetIsInCamStateCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDronePawn.ExecuteSDPower
// (Final, Exec, Native, Public)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            targetIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::ExecuteSDPower(EDarwinItemTypeEnum powerType, int targetIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.ExecuteSDPower");

	ADarwinDronePawn_ExecuteSDPower_Params params;
	params.powerType = powerType;
	params.targetIndex = targetIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.EventZoneWillBeForbidden
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinDronePawn*        drone                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::EventZoneWillBeForbidden(class ADarwinDronePawn* drone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.EventZoneWillBeForbidden");

	ADarwinDronePawn_EventZoneWillBeForbidden_Params params;
	params.drone = drone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.EventUpdateWaveMovement
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinDronePawn::EventUpdateWaveMovement(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.EventUpdateWaveMovement");

	ADarwinDronePawn_EventUpdateWaveMovement_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.EventUpdateParticlesVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::EventUpdateParticlesVisibility(bool visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.EventUpdateParticlesVisibility");

	ADarwinDronePawn_EventUpdateParticlesVisibility_Params params;
	params.visible = visible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.EventUpdateLightIntensity
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::EventUpdateLightIntensity(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.EventUpdateLightIntensity");

	ADarwinDronePawn_EventUpdateLightIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.EventUpdateGravityStorm
// (Event, Public, BlueprintEvent)

void ADarwinDronePawn::EventUpdateGravityStorm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.EventUpdateGravityStorm");

	ADarwinDronePawn_EventUpdateGravityStorm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.EventGameHasStarted
// (Event, Public, BlueprintEvent)

void ADarwinDronePawn::EventGameHasStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.EventGameHasStarted");

	ADarwinDronePawn_EventGameHasStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.EventEnterSafeZone
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinDronePawn*        drone                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::EventEnterSafeZone(class ADarwinDronePawn* drone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.EventEnterSafeZone");

	ADarwinDronePawn_EventEnterSafeZone_Params params;
	params.drone = drone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDronePawn.EventEnterForbiddenZone
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinDronePawn*        drone                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDronePawn::EventEnterForbiddenZone(class ADarwinDronePawn* drone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDronePawn.EventEnterForbiddenZone");

	ADarwinDronePawn_EventEnterForbiddenZone_Params params;
	params.drone = drone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinBeholder.OnRepBeholderName
// (Final, Native, Public)

void ADarwinBeholder::OnRepBeholderName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinBeholder.OnRepBeholderName");

	ADarwinBeholder_OnRepBeholderName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinBeholder.EventNewBeholderJoined
// (Event, Public, BlueprintEvent)

void ADarwinBeholder::EventNewBeholderJoined()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinBeholder.EventNewBeholderJoined");

	ADarwinBeholder_EventNewBeholderJoined_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHUD.GetScreenWidth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADarwinHUD::GetScreenWidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHUD.GetScreenWidth");

	ADarwinHUD_GetScreenWidth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinHUD.GetScreenHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADarwinHUD::GetScreenHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHUD.GetScreenHeight");

	ADarwinHUD_GetScreenHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.ToMiniMapLoc2D
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UDarwinUserWidget::STATIC_ToMiniMapLoc2D(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.ToMiniMapLoc2D");

	UDarwinUserWidget_ToMiniMapLoc2D_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.ToggleMuteAll
// (Final, Native, Public, BlueprintCallable)

void UDarwinUserWidget::ToggleMuteAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.ToggleMuteAll");

	UDarwinUserWidget_ToggleMuteAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.ToggleMute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::ToggleMute(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.ToggleMute");

	UDarwinUserWidget_ToggleMute_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.SpawnDummyCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  characterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADarwinCharacter* UDarwinUserWidget::SpawnDummyCharacter(class UClass* characterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.SpawnDummyCharacter");

	UDarwinUserWidget_SpawnDummyCharacter_Params params;
	params.characterClass = characterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.ShouldShowTutorial
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::ShouldShowTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.ShouldShowTutorial");

	UDarwinUserWidget_ShouldShowTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.SetMouseVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           setInputModeGameAndUI          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::SetMouseVisible(bool setInputModeGameAndUI)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.SetMouseVisible");

	UDarwinUserWidget_SetMouseVisible_Params params;
	params.setInputModeGameAndUI = setInputModeGameAndUI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.SetMouseInvisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           setInputModeUIOnly             (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::SetMouseInvisible(bool setInputModeUIOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.SetMouseInvisible");

	UDarwinUserWidget_SetMouseInvisible_Params params;
	params.setInputModeUIOnly = setInputModeUIOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.ScaleToMiniMapWidget
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          xScale                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          yScale                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UDarwinUserWidget::STATIC_ScaleToMiniMapWidget(const struct FVector2D& Loc, float xScale, float yScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.ScaleToMiniMapWidget");

	UDarwinUserWidget_ScaleToMiniMapWidget_Params params;
	params.Loc = Loc;
	params.xScale = xScale;
	params.yScale = yScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.ProjectTheFuckingWorldLocToScreenProperly
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 targetLoc                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               outLoc                         (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::ProjectTheFuckingWorldLocToScreenProperly(const struct FVector& targetLoc, struct FVector2D* outLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.ProjectTheFuckingWorldLocToScreenProperly");

	UDarwinUserWidget_ProjectTheFuckingWorldLocToScreenProperly_Params params;
	params.targetLoc = targetLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outLoc != nullptr)
		*outLoc = params.outLoc;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.KickPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::KickPlayer(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.KickPlayer");

	UDarwinUserWidget_KickPlayer_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.IsZoneAllowedForNuking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::IsZoneAllowedForNuking(const struct FString& zoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.IsZoneAllowedForNuking");

	UDarwinUserWidget_IsZoneAllowedForNuking_Params params;
	params.zoneName = zoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.IsZoneAllowedForClosing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::IsZoneAllowedForClosing(const struct FString& zoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.IsZoneAllowedForClosing");

	UDarwinUserWidget_IsZoneAllowedForClosing_Params params;
	params.zoneName = zoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.IsOwnerShowDirector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::IsOwnerShowDirector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.IsOwnerShowDirector");

	UDarwinUserWidget_IsOwnerShowDirector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.IsOwnerCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::IsOwnerCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.IsOwnerCharacter");

	UDarwinUserWidget_IsOwnerCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.IsOwnerBloodPactedTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::IsOwnerBloodPactedTo(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.IsOwnerBloodPactedTo");

	UDarwinUserWidget_IsOwnerBloodPactedTo_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.IsOwnerBeholder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::IsOwnerBeholder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.IsOwnerBeholder");

	UDarwinUserWidget_IsOwnerBeholder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.IsInCamStateForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::IsInCamStateForPlayer(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.IsInCamStateForPlayer");

	UDarwinUserWidget_IsInCamStateForPlayer_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)
// class ADarwinZone*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADarwinZone* UDarwinUserWidget::GetZone(const struct FString& zoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetZone");

	UDarwinUserWidget_GetZone_Params params;
	params.zoneName = zoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetXP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetXP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetXP");

	UDarwinUserWidget_GetXP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetTotalMatchesForShowDirector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetTotalMatchesForShowDirector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetTotalMatchesForShowDirector");

	UDarwinUserWidget_GetTotalMatchesForShowDirector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetTotalMatchesForLeaderboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetTotalMatchesForLeaderboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetTotalMatchesForLeaderboard");

	UDarwinUserWidget_GetTotalMatchesForLeaderboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetTimeSurvived
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UDarwinUserWidget::GetTimeSurvived(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetTimeSurvived");

	UDarwinUserWidget_GetTimeSurvived_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetTheFuckingMouseLocationXY
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UDarwinUserWidget::GetTheFuckingMouseLocationXY()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetTheFuckingMouseLocationXY");

	UDarwinUserWidget_GetTheFuckingMouseLocationXY_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPylon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinPylon*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADarwinPylon* UDarwinUserWidget::GetPylon(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPylon");

	UDarwinUserWidget_GetPylon_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPodiumRank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetPodiumRank(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPodiumRank");

	UDarwinUserWidget_GetPodiumRank_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPodiumIDs
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<int>                    Podium                         (Parm, OutParm, ZeroConstructor)

void UDarwinUserWidget::GetPodiumIDs(TArray<int>* Podium)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPodiumIDs");

	UDarwinUserWidget_GetPodiumIDs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Podium != nullptr)
		*Podium = params.Podium;
}


// Function Darwin.DarwinUserWidget.GetPlayerSuitIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetPlayerSuitIndex(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPlayerSuitIndex");

	UDarwinUserWidget_GetPlayerSuitIndex_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPlayerProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FDarwinProfile          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDarwinProfile UDarwinUserWidget::GetPlayerProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPlayerProfile");

	UDarwinUserWidget_GetPlayerProfile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPlayerOriginalColorGradient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FDarwinColorGradient    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDarwinColorGradient UDarwinUserWidget::GetPlayerOriginalColorGradient(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPlayerOriginalColorGradient");

	UDarwinUserWidget_GetPlayerOriginalColorGradient_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPlayerOriginalColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UDarwinUserWidget::GetPlayerOriginalColor(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPlayerOriginalColor");

	UDarwinUserWidget_GetPlayerOriginalColor_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPlayerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UDarwinUserWidget::GetPlayerName(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPlayerName");

	UDarwinUserWidget_GetPlayerName_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPlayerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetPlayerIndex(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPlayerIndex");

	UDarwinUserWidget_GetPlayerIndex_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPlayerHeadLocProjectedToScreen
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           onScreen                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UDarwinUserWidget::GetPlayerHeadLocProjectedToScreen(int UniqueId, bool* onScreen)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPlayerHeadLocProjectedToScreen");

	UDarwinUserWidget_GetPlayerHeadLocProjectedToScreen_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (onScreen != nullptr)
		*onScreen = params.onScreen;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPlayerHeadLoc
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UDarwinUserWidget::GetPlayerHeadLoc(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPlayerHeadLoc");

	UDarwinUserWidget_GetPlayerHeadLoc_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPlayerCraftedPower
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::GetPlayerCraftedPower(int PlayerId, EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPlayerCraftedPower");

	UDarwinUserWidget_GetPlayerCraftedPower_Params params;
	params.PlayerId = PlayerId;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPlayerColorGradientFromID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FDarwinColorGradient    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDarwinColorGradient UDarwinUserWidget::GetPlayerColorGradientFromID(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPlayerColorGradientFromID");

	UDarwinUserWidget_GetPlayerColorGradientFromID_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetPlayerColorFromID
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UDarwinUserWidget::GetPlayerColorFromID(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetPlayerColorFromID");

	UDarwinUserWidget_GetPlayerColorFromID_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumWoodHarvest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumWoodHarvest(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumWoodHarvest");

	UDarwinUserWidget_GetNumWoodHarvest_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumUnopenedLootBox
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumUnopenedLootBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumUnopenedLootBox");

	UDarwinUserWidget_GetNumUnopenedLootBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumTrapsLanded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumTrapsLanded(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumTrapsLanded");

	UDarwinUserWidget_GetNumTrapsLanded_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumRessourcesHarvested
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumRessourcesHarvested(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumRessourcesHarvested");

	UDarwinUserWidget_GetNumRessourcesHarvested_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumPowersCrafted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumPowersCrafted(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumPowersCrafted");

	UDarwinUserWidget_GetNumPowersCrafted_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumLooted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumLooted(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumLooted");

	UDarwinUserWidget_GetNumLooted_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumLeatherHarvest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumLeatherHarvest(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumLeatherHarvest");

	UDarwinUserWidget_GetNumLeatherHarvest_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumKills(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumKills");

	UDarwinUserWidget_GetNumKills_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumItemsCrafted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumItemsCrafted(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumItemsCrafted");

	UDarwinUserWidget_GetNumItemsCrafted_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumElectronicHarvest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumElectronicHarvest(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumElectronicHarvest");

	UDarwinUserWidget_GetNumElectronicHarvest_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumCluesAcquired
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumCluesAcquired(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumCluesAcquired");

	UDarwinUserWidget_GetNumCluesAcquired_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumberOfPlayersAtGameStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumberOfPlayersAtGameStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumberOfPlayersAtGameStart");

	UDarwinUserWidget_GetNumberOfPlayersAtGameStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumberOfGamesPlayed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumberOfGamesPlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumberOfGamesPlayed");

	UDarwinUserWidget_GetNumberOfGamesPlayed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumArrowsShot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumArrowsShot(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumArrowsShot");

	UDarwinUserWidget_GetNumArrowsShot_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumArrowsHitObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumArrowsHitObject(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumArrowsHitObject");

	UDarwinUserWidget_GetNumArrowsHitObject_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNumArrowsHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNumArrowsHit(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNumArrowsHit");

	UDarwinUserWidget_GetNumArrowsHit_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNormalizedXp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNormalizedXp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNormalizedXp");

	UDarwinUserWidget_GetNormalizedXp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNextLevelXp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetNextLevelXp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNextLevelXp");

	UDarwinUserWidget_GetNextLevelXp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetNetAvatarFromID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UDarwinUserWidget::GetNetAvatarFromID(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetNetAvatarFromID");

	UDarwinUserWidget_GetNetAvatarFromID_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetMyRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinRoleEnum                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDarwinRoleEnum UDarwinUserWidget::GetMyRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetMyRole");

	UDarwinUserWidget_GetMyRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetMoney
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetMoney()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetMoney");

	UDarwinUserWidget_GetMoney_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetLevel");

	UDarwinUserWidget_GetLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetLeaders
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            firstLeaderID                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// EStatTypeEnum                  firstType                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            secondLeaderID                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// EStatTypeEnum                  secondType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::GetLeaders(int* firstLeaderID, EStatTypeEnum* firstType, int* secondLeaderID, EStatTypeEnum* secondType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetLeaders");

	UDarwinUserWidget_GetLeaders_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (firstLeaderID != nullptr)
		*firstLeaderID = params.firstLeaderID;
	if (firstType != nullptr)
		*firstType = params.firstType;
	if (secondLeaderID != nullptr)
		*secondLeaderID = params.secondLeaderID;
	if (secondType != nullptr)
		*secondType = params.secondType;
}


// Function Darwin.DarwinUserWidget.GetLeaderboardPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 StatName                       (Parm, ZeroConstructor)
// int                            StartRank                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::GetLeaderboardPage(const struct FString& StatName, int StartRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetLeaderboardPage");

	UDarwinUserWidget_GetLeaderboardPage_Params params;
	params.StatName = StatName;
	params.StartRank = StartRank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.GetLastMatchProgression
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FDarwinLastMatchProgression ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDarwinLastMatchProgression UDarwinUserWidget::GetLastMatchProgression()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetLastMatchProgression");

	UDarwinUserWidget_GetLastMatchProgression_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetKilledIDs
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>                    killedArray                    (Parm, OutParm, ZeroConstructor)

void UDarwinUserWidget::GetKilledIDs(int UniqueId, TArray<int>* killedArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetKilledIDs");

	UDarwinUserWidget_GetKilledIDs_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (killedArray != nullptr)
		*killedArray = params.killedArray;
}


// Function Darwin.DarwinUserWidget.GetIsUsingGamepad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::GetIsUsingGamepad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetIsUsingGamepad");

	UDarwinUserWidget_GetIsUsingGamepad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetIsPlayerWinner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::GetIsPlayerWinner(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetIsPlayerWinner");

	UDarwinUserWidget_GetIsPlayerWinner_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetIsPlayerManHunted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::GetIsPlayerManHunted(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetIsPlayerManHunted");

	UDarwinUserWidget_GetIsPlayerManHunted_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetIsPlayerDead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::GetIsPlayerDead(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetIsPlayerDead");

	UDarwinUserWidget_GetIsPlayerDead_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetIsOwnedByPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::GetIsOwnedByPlayer(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetIsOwnedByPlayer");

	UDarwinUserWidget_GetIsOwnedByPlayer_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetHasCraftedCraftWheelIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            cwIndex                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::GetHasCraftedCraftWheelIndex(int PlayerId, int cwIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetHasCraftedCraftWheelIndex");

	UDarwinUserWidget_GetHasCraftedCraftWheelIndex_Params params;
	params.PlayerId = PlayerId;
	params.cwIndex = cwIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetELO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetELO()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetELO");

	UDarwinUserWidget_GetELO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetDistanceTravelled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetDistanceTravelled(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetDistanceTravelled");

	UDarwinUserWidget_GetDistanceTravelled_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetDamageTaken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetDamageTaken(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetDamageTaken");

	UDarwinUserWidget_GetDamageTaken_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetDamageDone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetDamageDone(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetDamageDone");

	UDarwinUserWidget_GetDamageDone_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetCraftableItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<EDarwinItemTypeEnum> UDarwinUserWidget::GetCraftableItems(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetCraftableItems");

	UDarwinUserWidget_GetCraftableItems_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetClueTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetClueTime(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetClueTime");

	UDarwinUserWidget_GetClueTime_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetCharacterFromID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADarwinCharacter* UDarwinUserWidget::GetCharacterFromID(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetCharacterFromID");

	UDarwinUserWidget_GetCharacterFromID_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetCareerStats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FDarwinCareerStats      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDarwinCareerStats UDarwinUserWidget::GetCareerStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetCareerStats");

	UDarwinUserWidget_GetCareerStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetBloodPactPodiumRank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetBloodPactPodiumRank(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetBloodPactPodiumRank");

	UDarwinUserWidget_GetBloodPactPodiumRank_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetBloodPactPodiumIDs
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FDarwinBloodPactDuo> Podium                         (Parm, OutParm, ZeroConstructor)

void UDarwinUserWidget::GetBloodPactPodiumIDs(TArray<struct FDarwinBloodPactDuo>* Podium)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetBloodPactPodiumIDs");

	UDarwinUserWidget_GetBloodPactPodiumIDs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Podium != nullptr)
		*Podium = params.Podium;
}


// Function Darwin.DarwinUserWidget.GetBloodPactDeadTimerNormalized
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDarwinUserWidget::GetBloodPactDeadTimerNormalized(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetBloodPactDeadTimerNormalized");

	UDarwinUserWidget_GetBloodPactDeadTimerNormalized_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetBloodPactDeadTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinUserWidget::GetBloodPactDeadTimer(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetBloodPactDeadTimer");

	UDarwinUserWidget_GetBloodPactDeadTimer_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.GetBloodPactDead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::GetBloodPactDead(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.GetBloodPactDead");

	UDarwinUserWidget_GetBloodPactDead_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.FindAngle2DInDegrees
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               vector1                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               vector2                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDarwinUserWidget::FindAngle2DInDegrees(const struct FVector2D& vector1, const struct FVector2D& vector2)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.FindAngle2DInDegrees");

	UDarwinUserWidget_FindAngle2DInDegrees_Params params;
	params.vector1 = vector1;
	params.vector2 = vector2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinUserWidget.EventZoneSoonForbidden
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)

void UDarwinUserWidget::EventZoneSoonForbidden(const struct FString& zoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventZoneSoonForbidden");

	UDarwinUserWidget_EventZoneSoonForbidden_Params params;
	params.zoneName = zoneName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventZoneNowForbidden
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)

void UDarwinUserWidget::EventZoneNowForbidden(const struct FString& zoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventZoneNowForbidden");

	UDarwinUserWidget_EventZoneNowForbidden_Params params;
	params.zoneName = zoneName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateSuddenDeathProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdateSuddenDeathProgress(float progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateSuddenDeathProgress");

	UDarwinUserWidget_EventUpdateSuddenDeathProgress_Params params;
	params.progress = progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateSuddenDeath
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 gameTimeStr                    (Parm, ZeroConstructor)

void UDarwinUserWidget::EventUpdateSuddenDeath(const struct FString& gameTimeStr)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateSuddenDeath");

	UDarwinUserWidget_EventUpdateSuddenDeath_Params params;
	params.gameTimeStr = gameTimeStr;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdatePodiumRank
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            PodiumRank                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdatePodiumRank(int PlayerId, int PodiumRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdatePodiumRank");

	UDarwinUserWidget_EventUpdatePodiumRank_Params params;
	params.PlayerId = PlayerId;
	params.PodiumRank = PodiumRank;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdatePlayerZoneName
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)
// bool                           bForbiddenZone                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdatePlayerZoneName(const struct FString& zoneName, bool bForbiddenZone, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdatePlayerZoneName");

	UDarwinUserWidget_EventUpdatePlayerZoneName_Params params;
	params.zoneName = zoneName;
	params.bForbiddenZone = bForbiddenZone;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdatePlayerYaw
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdatePlayerYaw(float Yaw, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdatePlayerYaw");

	UDarwinUserWidget_EventUpdatePlayerYaw_Params params;
	params.Yaw = Yaw;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdatePlayerStamina
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          staminaNormalized              (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdatePlayerStamina(float staminaNormalized, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdatePlayerStamina");

	UDarwinUserWidget_EventUpdatePlayerStamina_Params params;
	params.staminaNormalized = staminaNormalized;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdatePlayerIndex
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            playerIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdatePlayerIndex(int PlayerId, int playerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdatePlayerIndex");

	UDarwinUserWidget_EventUpdatePlayerIndex_Params params;
	params.PlayerId = PlayerId;
	params.playerIndex = playerIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdatePlayerHealth
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          healthNormalized               (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdatePlayerHealth(float healthNormalized, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdatePlayerHealth");

	UDarwinUserWidget_EventUpdatePlayerHealth_Params params;
	params.healthNormalized = healthNormalized;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdatePlayerGradient
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FDarwinColorGradient    payerGradient                  (Parm)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdatePlayerGradient(const struct FDarwinColorGradient& payerGradient, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdatePlayerGradient");

	UDarwinUserWidget_EventUpdatePlayerGradient_Params params;
	params.payerGradient = payerGradient;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdatePlayerColor
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor            playerColor                    (Parm, IsPlainOldData)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdatePlayerColor(const struct FLinearColor& playerColor, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdatePlayerColor");

	UDarwinUserWidget_EventUpdatePlayerColor_Params params;
	params.playerColor = playerColor;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdatePlayerColdFactor
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          coldFactorNormalized           (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdatePlayerColdFactor(float coldFactorNormalized, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdatePlayerColdFactor");

	UDarwinUserWidget_EventUpdatePlayerColdFactor_Params params;
	params.coldFactorNormalized = coldFactorNormalized;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdatePing
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            ping                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdatePing(int ping)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdatePing");

	UDarwinUserWidget_EventUpdatePing_Params params;
	params.ping = ping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateNumberOfPlayersLeftAlive
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            numberAlive                    (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdateNumberOfPlayersLeftAlive(int numberAlive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateNumberOfPlayersLeftAlive");

	UDarwinUserWidget_EventUpdateNumberOfPlayersLeftAlive_Params params;
	params.numberAlive = numberAlive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateNumberOfPlayersAtGameStart
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            numberAtGameStart              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdateNumberOfPlayersAtGameStart(int numberAtGameStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateNumberOfPlayersAtGameStart");

	UDarwinUserWidget_EventUpdateNumberOfPlayersAtGameStart_Params params;
	params.numberAtGameStart = numberAtGameStart;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateManHuntTargetLocation
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 worldLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            targetCharacterID              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdateManHuntTargetLocation(const struct FVector2D& Loc, const struct FVector& worldLoc, float Yaw, int targetCharacterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateManHuntTargetLocation");

	UDarwinUserWidget_EventUpdateManHuntTargetLocation_Params params;
	params.Loc = Loc;
	params.worldLoc = worldLoc;
	params.Yaw = Yaw;
	params.targetCharacterID = targetCharacterID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateManHuntInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 Time                           (Parm, ZeroConstructor)
// int                            targetCharacterID              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdateManHuntInfo(const struct FString& Time, int targetCharacterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateManHuntInfo");

	UDarwinUserWidget_EventUpdateManHuntInfo_Params params;
	params.Time = Time;
	params.targetCharacterID = targetCharacterID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateLocalAvatarTexture
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*              outLocalAvatarTexture          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdateLocalAvatarTexture(class UTexture2D* outLocalAvatarTexture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateLocalAvatarTexture");

	UDarwinUserWidget_EventUpdateLocalAvatarTexture_Params params;
	params.outLocalAvatarTexture = outLocalAvatarTexture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateGameTime
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 gameTimeStr                    (Parm, ZeroConstructor)

void UDarwinUserWidget::EventUpdateGameTime(const struct FString& gameTimeStr)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateGameTime");

	UDarwinUserWidget_EventUpdateGameTime_Params params;
	params.gameTimeStr = gameTimeStr;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateGameEndTime
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 gameTimeStr                    (Parm, ZeroConstructor)

void UDarwinUserWidget::EventUpdateGameEndTime(const struct FString& gameTimeStr)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateGameEndTime");

	UDarwinUserWidget_EventUpdateGameEndTime_Params params;
	params.gameTimeStr = gameTimeStr;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateGameAboutToStartTimer
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdateGameAboutToStartTimer(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateGameAboutToStartTimer");

	UDarwinUserWidget_EventUpdateGameAboutToStartTimer_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateGameAboutToStart
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           aboutToStart                   (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdateGameAboutToStart(bool aboutToStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateGameAboutToStart");

	UDarwinUserWidget_EventUpdateGameAboutToStart_Params params;
	params.aboutToStart = aboutToStart;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateCharacterLocationByID
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdateCharacterLocationByID(const struct FVector2D& Loc, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateCharacterLocationByID");

	UDarwinUserWidget_EventUpdateCharacterLocationByID_Params params;
	params.Loc = Loc;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventUpdateAvatarTexture
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*              avatar                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventUpdateAvatarTexture(class UTexture2D* avatar, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventUpdateAvatarTexture");

	UDarwinUserWidget_EventUpdateAvatarTexture_Params params;
	params.avatar = avatar;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventToggleSpeak
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           active                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventToggleSpeak(bool active)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventToggleSpeak");

	UDarwinUserWidget_EventToggleSpeak_Params params;
	params.active = active;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventToggleMuteAll
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           active                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventToggleMuteAll(bool active)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventToggleMuteAll");

	UDarwinUserWidget_EventToggleMuteAll_Params params;
	params.active = active;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventSuddenDeathStartsNow
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventSuddenDeathStartsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventSuddenDeathStartsNow");

	UDarwinUserWidget_EventSuddenDeathStartsNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventSuddenDeathStart
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventSuddenDeathStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventSuddenDeathStart");

	UDarwinUserWidget_EventSuddenDeathStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventStartCampFire
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class ADarwinCampFire*         campFire                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinUserWidget::EventStartCampFire(class ADarwinCampFire* campFire, const struct FVector2D& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventStartCampFire");

	UDarwinUserWidget_EventStartCampFire_Params params;
	params.campFire = campFire;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventSoonToBeForbiddenZone
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)
// int                            timeLeft                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventSoonToBeForbiddenZone(const struct FString& zoneName, int timeLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventSoonToBeForbiddenZone");

	UDarwinUserWidget_EventSoonToBeForbiddenZone_Params params;
	params.zoneName = zoneName;
	params.timeLeft = timeLeft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventShowDirectorLeft
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 showDirectorName               (Parm, ZeroConstructor)

void UDarwinUserWidget::EventShowDirectorLeft(const struct FString& showDirectorName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventShowDirectorLeft");

	UDarwinUserWidget_EventShowDirectorLeft_Params params;
	params.showDirectorName = showDirectorName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventShowDirectorJoined
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 showDirectorName               (Parm, ZeroConstructor)

void UDarwinUserWidget::EventShowDirectorJoined(const struct FString& showDirectorName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventShowDirectorJoined");

	UDarwinUserWidget_EventShowDirectorJoined_Params params;
	params.showDirectorName = showDirectorName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventShiftKeyReleased
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventShiftKeyReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventShiftKeyReleased");

	UDarwinUserWidget_EventShiftKeyReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventShiftKeyPressed
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventShiftKeyPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventShiftKeyPressed");

	UDarwinUserWidget_EventShiftKeyPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventSDSlomoStarted
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventSDSlomoStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventSDSlomoStarted");

	UDarwinUserWidget_EventSDSlomoStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventSDSlomoEnded
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventSDSlomoEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventSDSlomoEnded");

	UDarwinUserWidget_EventSDSlomoEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventRotaCam
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventRotaCam(bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventRotaCam");

	UDarwinUserWidget_EventRotaCam_Params params;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPylonWillReactivate
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPylonWillReactivate(int Index, float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPylonWillReactivate");

	UDarwinUserWidget_EventPylonWillReactivate_Params params;
	params.Index = Index;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPylonStoppedBeingHarvested
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPylonStoppedBeingHarvested(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPylonStoppedBeingHarvested");

	UDarwinUserWidget_EventPylonStoppedBeingHarvested_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPylonStartedBeingHarvested
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            harvesterID                    (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPylonStartedBeingHarvested(int Index, int harvesterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPylonStartedBeingHarvested");

	UDarwinUserWidget_EventPylonStartedBeingHarvested_Params params;
	params.Index = Index;
	params.harvesterID = harvesterID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPylonJustDeactivated
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPylonJustDeactivated(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPylonJustDeactivated");

	UDarwinUserWidget_EventPylonJustDeactivated_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPylonJustActivated
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPylonJustActivated(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPylonJustActivated");

	UDarwinUserWidget_EventPylonJustActivated_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPylonCreated
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 worldLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinUserWidget::EventPylonCreated(int Index, const struct FVector2D& Loc, const struct FVector& worldLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPylonCreated");

	UDarwinUserWidget_EventPylonCreated_Params params;
	params.Index = Index;
	params.Loc = Loc;
	params.worldLoc = worldLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerSpeakStart
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPlayerSpeakStart(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerSpeakStart");

	UDarwinUserWidget_EventPlayerSpeakStart_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerSpeakEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPlayerSpeakEnd(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerSpeakEnd");

	UDarwinUserWidget_EventPlayerSpeakEnd_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerReceivedDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPlayerReceivedDamage(int Damage, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerReceivedDamage");

	UDarwinUserWidget_EventPlayerReceivedDamage_Params params;
	params.Damage = Damage;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerProfileStatsReceived
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FDarwinCareerStats      stats                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FDarwinProfile          Profile                        (ConstParm, Parm, OutParm, ReferenceParm)

void UDarwinUserWidget::EventPlayerProfileStatsReceived(const struct FDarwinCareerStats& stats, const struct FDarwinProfile& Profile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerProfileStatsReceived");

	UDarwinUserWidget_EventPlayerProfileStatsReceived_Params params;
	params.stats = stats;
	params.Profile = Profile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerLeftGame
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPlayerLeftGame(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerLeftGame");

	UDarwinUserWidget_EventPlayerLeftGame_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerJoinedGame
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 playerName                     (Parm, ZeroConstructor)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 playerName12                   (Parm, ZeroConstructor)

void UDarwinUserWidget::EventPlayerJoinedGame(const struct FString& playerName, int PlayerId, const struct FString& playerName12)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerJoinedGame");

	UDarwinUserWidget_EventPlayerJoinedGame_Params params;
	params.playerName = playerName;
	params.PlayerId = PlayerId;
	params.playerName12 = playerName12;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerIsWinner
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBloodPactActive               (Parm, ZeroConstructor, IsPlainOldData)
// int                            allyID                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPlayerIsWinner(int PlayerId, bool bBloodPactActive, int allyID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerIsWinner");

	UDarwinUserWidget_EventPlayerIsWinner_Params params;
	params.PlayerId = PlayerId;
	params.bBloodPactActive = bBloodPactActive;
	params.allyID = allyID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerIsLooted
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPlayerIsLooted(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerIsLooted");

	UDarwinUserWidget_EventPlayerIsLooted_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerIsDead
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            PodiumRank                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           firstDeath                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPlayerIsDead(int PlayerId, int PodiumRank, bool firstDeath)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerIsDead");

	UDarwinUserWidget_EventPlayerIsDead_Params params;
	params.PlayerId = PlayerId;
	params.PodiumRank = PodiumRank;
	params.firstDeath = firstDeath;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerCraftedPower
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPlayerCraftedPower(int PlayerId, EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerCraftedPower");

	UDarwinUserWidget_EventPlayerCraftedPower_Params params;
	params.PlayerId = PlayerId;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerAllianceFormed
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            firstPlayerID                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            secondPlayerID                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBloodPact                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPlayerAllianceFormed(int firstPlayerID, int secondPlayerID, bool bBloodPact)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerAllianceFormed");

	UDarwinUserWidget_EventPlayerAllianceFormed_Params params;
	params.firstPlayerID = firstPlayerID;
	params.secondPlayerID = secondPlayerID;
	params.bBloodPact = bBloodPact;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventPlayerAllianceBroken
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            firstPlayerID                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            secondPlayerID                 (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventPlayerAllianceBroken(int firstPlayerID, int secondPlayerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventPlayerAllianceBroken");

	UDarwinUserWidget_EventPlayerAllianceBroken_Params params;
	params.firstPlayerID = firstPlayerID;
	params.secondPlayerID = secondPlayerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventOpenLootBox
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 loot1_id                       (Parm, ZeroConstructor)
// int                            loot1_money                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           loot1_is_dup                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 loot2_id                       (Parm, ZeroConstructor)
// int                            loot2_money                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           loot2_is_dup                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 loot3_id                       (Parm, ZeroConstructor)
// int                            loot3_money                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           loot3_is_dup                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 loot4_id                       (Parm, ZeroConstructor)
// int                            loot4_money                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           loot4_is_dup                   (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventOpenLootBox(const struct FString& loot1_id, int loot1_money, bool loot1_is_dup, const struct FString& loot2_id, int loot2_money, bool loot2_is_dup, const struct FString& loot3_id, int loot3_money, bool loot3_is_dup, const struct FString& loot4_id, int loot4_money, bool loot4_is_dup)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventOpenLootBox");

	UDarwinUserWidget_EventOpenLootBox_Params params;
	params.loot1_id = loot1_id;
	params.loot1_money = loot1_money;
	params.loot1_is_dup = loot1_is_dup;
	params.loot2_id = loot2_id;
	params.loot2_money = loot2_money;
	params.loot2_is_dup = loot2_is_dup;
	params.loot3_id = loot3_id;
	params.loot3_money = loot3_money;
	params.loot3_is_dup = loot3_is_dup;
	params.loot4_id = loot4_id;
	params.loot4_money = loot4_money;
	params.loot4_is_dup = loot4_is_dup;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventOpenAtlas
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventOpenAtlas()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventOpenAtlas");

	UDarwinUserWidget_EventOpenAtlas_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventOnMouseHidden
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventOnMouseHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventOnMouseHidden");

	UDarwinUserWidget_EventOnMouseHidden_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventOnMenuSettingsChange
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 Resolution                     (Parm, ZeroConstructor)
// int                            screenMode                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventOnMenuSettingsChange(const struct FString& Resolution, int screenMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventOnMenuSettingsChange");

	UDarwinUserWidget_EventOnMenuSettingsChange_Params params;
	params.Resolution = Resolution;
	params.screenMode = screenMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventNumberOfPylons
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventNumberOfPylons(int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventNumberOfPylons");

	UDarwinUserWidget_EventNumberOfPylons_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventNumberOfPlayersUntilGameStarts
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventNumberOfPlayersUntilGameStarts(int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventNumberOfPlayersUntilGameStarts");

	UDarwinUserWidget_EventNumberOfPlayersUntilGameStarts_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventNuclearBlastUpdateProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)
// float                          progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventNuclearBlastUpdateProgress(const struct FString& zoneName, float progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventNuclearBlastUpdateProgress");

	UDarwinUserWidget_EventNuclearBlastUpdateProgress_Params params;
	params.zoneName = zoneName;
	params.progress = progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventNuclearBlastUpdateCountdown
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)
// struct FString                 timeLeft                       (Parm, ZeroConstructor)
// int                            timeLeftInteger                (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventNuclearBlastUpdateCountdown(const struct FString& zoneName, const struct FString& timeLeft, int timeLeftInteger)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventNuclearBlastUpdateCountdown");

	UDarwinUserWidget_EventNuclearBlastUpdateCountdown_Params params;
	params.zoneName = zoneName;
	params.timeLeft = timeLeft;
	params.timeLeftInteger = timeLeftInteger;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventNuclearBlastStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)

void UDarwinUserWidget::EventNuclearBlastStarted(const struct FString& zoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventNuclearBlastStarted");

	UDarwinUserWidget_EventNuclearBlastStarted_Params params;
	params.zoneName = zoneName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventNuclearBlastEnded
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)

void UDarwinUserWidget::EventNuclearBlastEnded(const struct FString& zoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventNuclearBlastEnded");

	UDarwinUserWidget_EventNuclearBlastEnded_Params params;
	params.zoneName = zoneName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventNuclearBlastCountdownInitiated
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)

void UDarwinUserWidget::EventNuclearBlastCountdownInitiated(const struct FString& zoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventNuclearBlastCountdownInitiated");

	UDarwinUserWidget_EventNuclearBlastCountdownInitiated_Params params;
	params.zoneName = zoneName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMuteMapRemove
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventMuteMapRemove(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMuteMapRemove");

	UDarwinUserWidget_EventMuteMapRemove_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMuteMapChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           muted                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventMuteMapChanged(int UniqueId, bool muted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMuteMapChanged");

	UDarwinUserWidget_EventMuteMapChanged_Params params;
	params.UniqueId = UniqueId;
	params.muted = muted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMuteMapAdd
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           muted                          (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinRoleEnum                Role                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventMuteMapAdd(int UniqueId, bool muted, EDarwinRoleEnum Role)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMuteMapAdd");

	UDarwinUserWidget_EventMuteMapAdd_Params params;
	params.UniqueId = UniqueId;
	params.muted = muted;
	params.Role = Role;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuYPressed
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuYPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuYPressed");

	UDarwinUserWidget_EventMenuYPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuXPressed
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuXPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuXPressed");

	UDarwinUserWidget_EventMenuXPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuUpReleased
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuUpReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuUpReleased");

	UDarwinUserWidget_EventMenuUpReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuUp
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuUp");

	UDarwinUserWidget_EventMenuUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuRightTriggerPressed
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuRightTriggerPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuRightTriggerPressed");

	UDarwinUserWidget_EventMenuRightTriggerPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuRightReleased
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuRightReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuRightReleased");

	UDarwinUserWidget_EventMenuRightReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuRightPagePressed
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuRightPagePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuRightPagePressed");

	UDarwinUserWidget_EventMenuRightPagePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuRight
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuRight");

	UDarwinUserWidget_EventMenuRight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuLeftTriggerPressed
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuLeftTriggerPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuLeftTriggerPressed");

	UDarwinUserWidget_EventMenuLeftTriggerPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuLeftReleased
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuLeftReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuLeftReleased");

	UDarwinUserWidget_EventMenuLeftReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuLeftPagePressed
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuLeftPagePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuLeftPagePressed");

	UDarwinUserWidget_EventMenuLeftPagePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuLeft
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuLeft");

	UDarwinUserWidget_EventMenuLeft_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuDownReleased
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuDownReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuDownReleased");

	UDarwinUserWidget_EventMenuDownReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuDown
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuDown");

	UDarwinUserWidget_EventMenuDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuClick
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuClick");

	UDarwinUserWidget_EventMenuClick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventMenuBack
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventMenuBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventMenuBack");

	UDarwinUserWidget_EventMenuBack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventManHuntStart
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// int                            targetCharacterID              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinUserWidget::EventManHuntStart(int targetCharacterID, const struct FVector2D& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventManHuntStart");

	UDarwinUserWidget_EventManHuntStart_Params params;
	params.targetCharacterID = targetCharacterID;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventManHuntEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            targetCharacterID              (Parm, ZeroConstructor, IsPlainOldData)
// int                            killerCharacterID              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventManHuntEnd(int targetCharacterID, int killerCharacterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventManHuntEnd");

	UDarwinUserWidget_EventManHuntEnd_Params params;
	params.targetCharacterID = targetCharacterID;
	params.killerCharacterID = killerCharacterID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventLeaveCamStateCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventLeaveCamStateCharacter(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventLeaveCamStateCharacter");

	UDarwinUserWidget_EventLeaveCamStateCharacter_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventLeaderboardReceived
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FDarwinLeaderboardInfos leaderboardInfos               (ConstParm, Parm, OutParm, ReferenceParm)

void UDarwinUserWidget::EventLeaderboardReceived(const struct FDarwinLeaderboardInfos& leaderboardInfos)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventLeaderboardReceived");

	UDarwinUserWidget_EventLeaderboardReceived_Params params;
	params.leaderboardInfos = leaderboardInfos;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventItemBought
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 itemUniqueId                   (Parm, ZeroConstructor)

void UDarwinUserWidget::EventItemBought(const struct FString& itemUniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventItemBought");

	UDarwinUserWidget_EventItemBought_Params params;
	params.itemUniqueId = itemUniqueId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventInventoryUpdated
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventInventoryUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventInventoryUpdated");

	UDarwinUserWidget_EventInventoryUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventInputSourceChanged
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventInputSourceChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventInputSourceChanged");

	UDarwinUserWidget_EventInputSourceChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventInputResetToDefault
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventInputResetToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventInputResetToDefault");

	UDarwinUserWidget_EventInputResetToDefault_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventInputRebindSucceeded
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FName                   ActionToRebind                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FText                   NewKeyName                     (ConstParm, Parm, OutParm, ReferenceParm)

void UDarwinUserWidget::EventInputRebindSucceeded(const struct FName& ActionToRebind, const struct FText& NewKeyName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventInputRebindSucceeded");

	UDarwinUserWidget_EventInputRebindSucceeded_Params params;
	params.ActionToRebind = ActionToRebind;
	params.NewKeyName = NewKeyName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventInGameMenuAction
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventInGameMenuAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventInGameMenuAction");

	UDarwinUserWidget_EventInGameMenuAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventGravStormUpdateProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventGravStormUpdateProgress(float progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventGravStormUpdateProgress");

	UDarwinUserWidget_EventGravStormUpdateProgress_Params params;
	params.progress = progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventGravStormUpdateCountdown
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 timeLeft                       (Parm, ZeroConstructor)

void UDarwinUserWidget::EventGravStormUpdateCountdown(const struct FString& timeLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventGravStormUpdateCountdown");

	UDarwinUserWidget_EventGravStormUpdateCountdown_Params params;
	params.timeLeft = timeLeft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventGravStormStarted
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventGravStormStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventGravStormStarted");

	UDarwinUserWidget_EventGravStormStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventGravStormEnded
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventGravStormEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventGravStormEnded");

	UDarwinUserWidget_EventGravStormEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventGameStartsNow
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventGameStartsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventGameStartsNow");

	UDarwinUserWidget_EventGameStartsNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventGameStartsInSeconds
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventGameStartsInSeconds(int Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventGameStartsInSeconds");

	UDarwinUserWidget_EventGameStartsInSeconds_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventGameHasStarted
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventGameHasStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventGameHasStarted");

	UDarwinUserWidget_EventGameHasStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventFriendPartyLeft
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventFriendPartyLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventFriendPartyLeft");

	UDarwinUserWidget_EventFriendPartyLeft_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventFriendPartyJoined
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText                   friendName                     (ConstParm, Parm, OutParm, ReferenceParm)
// class UTexture2D*              friendAvatar                   (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventFriendPartyJoined(const struct FText& friendName, class UTexture2D* friendAvatar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventFriendPartyJoined");

	UDarwinUserWidget_EventFriendPartyJoined_Params params;
	params.friendName = friendName;
	params.friendAvatar = friendAvatar;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventForbiddenZoneActivated
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)
// float                          timeLeft                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAlreadyForbidden              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventForbiddenZoneActivated(const struct FString& zoneName, float timeLeft, bool bAlreadyForbidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventForbiddenZoneActivated");

	UDarwinUserWidget_EventForbiddenZoneActivated_Params params;
	params.zoneName = zoneName;
	params.timeLeft = timeLeft;
	params.bAlreadyForbidden = bAlreadyForbidden;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventFirstBlood
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            attackerID                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            victimID                       (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinDamageTypeEnum          dmgType                        (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventFirstBlood(int attackerID, int victimID, EDarwinDamageTypeEnum dmgType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventFirstBlood");

	UDarwinUserWidget_EventFirstBlood_Params params;
	params.attackerID = attackerID;
	params.victimID = victimID;
	params.dmgType = dmgType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventEnterCamStateCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventEnterCamStateCharacter(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventEnterCamStateCharacter");

	UDarwinUserWidget_EventEnterCamStateCharacter_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventEndMatchDataReceived
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventEndMatchDataReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventEndMatchDataReceived");

	UDarwinUserWidget_EventEndMatchDataReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventEndCampFire
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCampFire*         campFire                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventEndCampFire(class ADarwinCampFire* campFire)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventEndCampFire");

	UDarwinUserWidget_EventEndCampFire_Params params;
	params.campFire = campFire;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventDevCommunicationReceived
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventDevCommunicationReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventDevCommunicationReceived");

	UDarwinUserWidget_EventDevCommunicationReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventDebugMenuAction
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventDebugMenuAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventDebugMenuAction");

	UDarwinUserWidget_EventDebugMenuAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventDeathNotification
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinDamageTypeEnum          Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            nbPlayersLeft                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            attackerUniqueID               (Parm, ZeroConstructor, IsPlainOldData)
// int                            victimUniqueID                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFirstBlood                    (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventDeathNotification(EDarwinDamageTypeEnum Type, int nbPlayersLeft, int attackerUniqueID, int victimUniqueID, bool bFirstBlood)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventDeathNotification");

	UDarwinUserWidget_EventDeathNotification_Params params;
	params.Type = Type;
	params.nbPlayersLeft = nbPlayersLeft;
	params.attackerUniqueID = attackerUniqueID;
	params.victimUniqueID = victimUniqueID;
	params.bFirstBlood = bFirstBlood;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventDamageNotification
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinDamageTypeEnum          Type                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            attackerUniqueID               (Parm, ZeroConstructor, IsPlainOldData)
// int                            victimUniqueID                 (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventDamageNotification(EDarwinDamageTypeEnum Type, float Damage, int attackerUniqueID, int victimUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventDamageNotification");

	UDarwinUserWidget_EventDamageNotification_Params params;
	params.Type = Type;
	params.Damage = Damage;
	params.attackerUniqueID = attackerUniqueID;
	params.victimUniqueID = victimUniqueID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventCraftingEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            crafterUniqueID                (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventCraftingEnd(EDarwinItemTypeEnum Type, int crafterUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventCraftingEnd");

	UDarwinUserWidget_EventCraftingEnd_Params params;
	params.Type = Type;
	params.crafterUniqueID = crafterUniqueID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventCraftableToolSprungNotification
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            attackerUniqueID               (Parm, ZeroConstructor, IsPlainOldData)
// int                            victimUniqueID                 (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventCraftableToolSprungNotification(EDarwinItemTypeEnum ItemType, int attackerUniqueID, int victimUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventCraftableToolSprungNotification");

	UDarwinUserWidget_EventCraftableToolSprungNotification_Params params;
	params.ItemType = ItemType;
	params.attackerUniqueID = attackerUniqueID;
	params.victimUniqueID = victimUniqueID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventCraftableToolDestroyedNotification
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinDamageTypeEnum          DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            attackerUniqueID               (Parm, ZeroConstructor, IsPlainOldData)
// int                            victimUniqueID                 (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventCraftableToolDestroyedNotification(EDarwinItemTypeEnum ItemType, EDarwinDamageTypeEnum DamageType, int attackerUniqueID, int victimUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventCraftableToolDestroyedNotification");

	UDarwinUserWidget_EventCraftableToolDestroyedNotification_Params params;
	params.ItemType = ItemType;
	params.DamageType = DamageType;
	params.attackerUniqueID = attackerUniqueID;
	params.victimUniqueID = victimUniqueID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventCloseAtlas
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventCloseAtlas()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventCloseAtlas");

	UDarwinUserWidget_EventCloseAtlas_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventChangeCamera
// (Event, Public, BlueprintEvent)
// Parameters:
// EPlayerCameraState             NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventChangeCamera(EPlayerCameraState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventChangeCamera");

	UDarwinUserWidget_EventChangeCamera_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventCannotUseItemInLobby
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventCannotUseItemInLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventCannotUseItemInLobby");

	UDarwinUserWidget_EventCannotUseItemInLobby_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventCannotSendAllyFlag
// (Event, Public, BlueprintEvent)

void UDarwinUserWidget::EventCannotSendAllyFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventCannotSendAllyFlag");

	UDarwinUserWidget_EventCannotSendAllyFlag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventBloodPactReviveNotification
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            reviverUniqueID                (Parm, ZeroConstructor, IsPlainOldData)
// int                            victimUniqueID                 (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventBloodPactReviveNotification(int reviverUniqueID, int victimUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventBloodPactReviveNotification");

	UDarwinUserWidget_EventBloodPactReviveNotification_Params params;
	params.reviverUniqueID = reviverUniqueID;
	params.victimUniqueID = victimUniqueID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventBloodPactDuoEleminated
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            player1ID                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            player2ID                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventBloodPactDuoEleminated(int player1ID, int player2ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventBloodPactDuoEleminated");

	UDarwinUserWidget_EventBloodPactDuoEleminated_Params params;
	params.player1ID = player1ID;
	params.player2ID = player2ID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventBloodPactDeadNotification
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinDamageTypeEnum          Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            attackerUniqueID               (Parm, ZeroConstructor, IsPlainOldData)
// int                            victimUniqueID                 (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventBloodPactDeadNotification(EDarwinDamageTypeEnum Type, int attackerUniqueID, int victimUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventBloodPactDeadNotification");

	UDarwinUserWidget_EventBloodPactDeadNotification_Params params;
	params.Type = Type;
	params.attackerUniqueID = attackerUniqueID;
	params.victimUniqueID = victimUniqueID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventArmorBreakNotification
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinDamageTypeEnum          Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            attackerUniqueID               (Parm, ZeroConstructor, IsPlainOldData)
// int                            victimUniqueID                 (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventArmorBreakNotification(EDarwinDamageTypeEnum Type, int attackerUniqueID, int victimUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventArmorBreakNotification");

	UDarwinUserWidget_EventArmorBreakNotification_Params params;
	params.Type = Type;
	params.attackerUniqueID = attackerUniqueID;
	params.victimUniqueID = victimUniqueID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.EventAddMessageFromSpectator
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinUserWidget::EventAddMessageFromSpectator(const struct FString& Message, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.EventAddMessageFromSpectator");

	UDarwinUserWidget_EventAddMessageFromSpectator_Params params;
	params.Message = Message;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.DarwinRemove
// (Final, Native, Public, BlueprintCallable)

void UDarwinUserWidget::DarwinRemove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.DarwinRemove");

	UDarwinUserWidget_DarwinRemove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinUserWidget.CanPylonBeActivated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinUserWidget::CanPylonBeActivated(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinUserWidget.CanPylonBeActivated");

	UDarwinUserWidget_CanPylonBeActivated_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDroneWidget.GotoSDCam
// (Final, Native, Public, BlueprintCallable)

void UDarwinDroneWidget::GotoSDCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDroneWidget.GotoSDCam");

	UDarwinDroneWidget_GotoSDCam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDroneWidget.GotoPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinDroneWidget::GotoPlayer(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDroneWidget.GotoPlayer");

	UDarwinDroneWidget_GotoPlayer_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDroneWidget.EventUpdateSpeedMultiplier
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          speedMultiplierNormalized      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinDroneWidget::EventUpdateSpeedMultiplier(float speedMultiplierNormalized)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDroneWidget.EventUpdateSpeedMultiplier");

	UDarwinDroneWidget_EventUpdateSpeedMultiplier_Params params;
	params.speedMultiplierNormalized = speedMultiplierNormalized;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDroneWidget.EventUpdateDroneYaw
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinDroneWidget::EventUpdateDroneYaw(float Yaw)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDroneWidget.EventUpdateDroneYaw");

	UDarwinDroneWidget_EventUpdateDroneYaw_Params params;
	params.Yaw = Yaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDroneWidget.EventUpdateDroneLocation
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinDroneWidget::EventUpdateDroneLocation(const struct FVector2D& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDroneWidget.EventUpdateDroneLocation");

	UDarwinDroneWidget_EventUpdateDroneLocation_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDroneWidget.EventSetBloodPactUniqueID
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinDroneWidget::EventSetBloodPactUniqueID(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDroneWidget.EventSetBloodPactUniqueID");

	UDarwinDroneWidget_EventSetBloodPactUniqueID_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDroneWidget.EventBloodPactMode
// (Event, Public, BlueprintEvent)

void UDarwinDroneWidget::EventBloodPactMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDroneWidget.EventBloodPactMode");

	UDarwinDroneWidget_EventBloodPactMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinBeholderWidget.EventSetBeholderName
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 beholderName                   (Parm, ZeroConstructor)

void UDarwinBeholderWidget::EventSetBeholderName(const struct FString& beholderName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinBeholderWidget.EventSetBeholderName");

	UDarwinBeholderWidget_EventSetBeholderName_Params params;
	params.beholderName = beholderName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinBeholderWidget.EventBloodPactReconBeholder
// (Event, Public, BlueprintEvent)

void UDarwinBeholderWidget::EventBloodPactReconBeholder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinBeholderWidget.EventBloodPactReconBeholder");

	UDarwinBeholderWidget_EventBloodPactReconBeholder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCage.NetMulticastDamageCage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinDamageTypeEnum          DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        attacker                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCage::NetMulticastDamageCage(EDarwinDamageTypeEnum DamageType, class ADarwinCharacter* attacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCage.NetMulticastDamageCage");

	ADarwinCage_NetMulticastDamageCage_Params params;
	params.DamageType = DamageType;
	params.attacker = attacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCage.EventUpdateWaveTime
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCage::EventUpdateWaveTime(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCage.EventUpdateWaveTime");

	ADarwinCage_EventUpdateWaveTime_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCage.EventSpawnFallingSnow
// (Event, Public, BlueprintEvent)

void ADarwinCage::EventSpawnFallingSnow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCage.EventSpawnFallingSnow");

	ADarwinCage_EventSpawnFallingSnow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.ServerTurnPowerOn
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinCharacterPower::ServerTurnPowerOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.ServerTurnPowerOn");

	UDarwinCharacterPower_ServerTurnPowerOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.ServerTurnPowerOff
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinCharacterPower::ServerTurnPowerOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.ServerTurnPowerOff");

	UDarwinCharacterPower_ServerTurnPowerOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.ServerRequestPower
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinCharacterPower::ServerRequestPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.ServerRequestPower");

	UDarwinCharacterPower_ServerRequestPower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.NetMulticastUnCraftPower
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinCharacterPower::NetMulticastUnCraftPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.NetMulticastUnCraftPower");

	UDarwinCharacterPower_NetMulticastUnCraftPower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.NetMulticastTurnPowerOn
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           turnLocalOn                    (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterPower::NetMulticastTurnPowerOn(bool turnLocalOn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.NetMulticastTurnPowerOn");

	UDarwinCharacterPower_NetMulticastTurnPowerOn_Params params;
	params.turnLocalOn = turnLocalOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.NetMulticastTurnPowerOff
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           turnLocalOff                   (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterPower::NetMulticastTurnPowerOff(bool turnLocalOff)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.NetMulticastTurnPowerOff");

	UDarwinCharacterPower_NetMulticastTurnPowerOff_Params params;
	params.turnLocalOff = turnLocalOff;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.NetMulticastRequestPower
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinCharacterPower::NetMulticastRequestPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.NetMulticastRequestPower");

	UDarwinCharacterPower_NetMulticastRequestPower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.NetMulticastCraftPower
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinCharacterPower::NetMulticastCraftPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.NetMulticastCraftPower");

	UDarwinCharacterPower_NetMulticastCraftPower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.EventSimulatedPowerOn
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinCharacterPower::EventSimulatedPowerOn(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.EventSimulatedPowerOn");

	UDarwinCharacterPower_EventSimulatedPowerOn_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.EventSimulatedPowerOff
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinCharacterPower::EventSimulatedPowerOff(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.EventSimulatedPowerOff");

	UDarwinCharacterPower_EventSimulatedPowerOff_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.EventSimulatedPowerActivate
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinCharacterPower::EventSimulatedPowerActivate(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.EventSimulatedPowerActivate");

	UDarwinCharacterPower_EventSimulatedPowerActivate_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.EventLocalPowerOn
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterPower::EventLocalPowerOn(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.EventLocalPowerOn");

	UDarwinCharacterPower_EventLocalPowerOn_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.EventLocalPowerOff
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterPower::EventLocalPowerOff(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.EventLocalPowerOff");

	UDarwinCharacterPower_EventLocalPowerOff_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterPower.EventLocalPowerActivate
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterPower::EventLocalPowerActivate(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterPower.EventLocalPowerActivate");

	UDarwinCharacterPower_EventLocalPowerActivate_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCampFire.NetMulticastFireEnded
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinCampFire::NetMulticastFireEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCampFire.NetMulticastFireEnded");

	ADarwinCampFire_NetMulticastFireEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCampFire.EventFireEnded
// (Event, Public, BlueprintEvent)

void ADarwinCampFire::EventFireEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCampFire.EventFireEnded");

	ADarwinCampFire_EventFireEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.UsingCraftingGamepadWheel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::UsingCraftingGamepadWheel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.UsingCraftingGamepadWheel");

	ADarwinCharacter_UsingCraftingGamepadWheel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.UpdateForceFeedback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::UpdateForceFeedback(float Intensity, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.UpdateForceFeedback");

	ADarwinCharacter_UpdateForceFeedback_Params params;
	params.Intensity = Intensity;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.UpdateCustomCharacterModel
// (Final, Native, Public)
// Parameters:
// class ADarwinCharacterModel*   custom_model                   (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::UpdateCustomCharacterModel(class ADarwinCharacterModel* custom_model)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.UpdateCustomCharacterModel");

	ADarwinCharacter_UpdateCustomCharacterModel_Params params;
	params.custom_model = custom_model;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.UpdateAllCustomCharacterModel
// (Final, Native, Public)

void ADarwinCharacter::UpdateAllCustomCharacterModel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.UpdateAllCustomCharacterModel");

	ADarwinCharacter_UpdateAllCustomCharacterModel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.UnstuckMe
// (Final, Exec, Native, Public)

void ADarwinCharacter::UnstuckMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.UnstuckMe");

	ADarwinCharacter_UnstuckMe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ToggleBlackAndWhitePostProcess
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           active                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ToggleBlackAndWhitePostProcess(bool active)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ToggleBlackAndWhitePostProcess");

	ADarwinCharacter_ToggleBlackAndWhitePostProcess_Params params;
	params.active = active;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.TakePushBack
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Direction                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// float                          PushBackForce                  (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  pusher                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          extraZ                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bResetZVel                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::TakePushBack(const struct FVector& Direction, float PushBackForce, class ADarwinCharacter* attacker, class AActor* pusher, float extraZ, bool bResetZVel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.TakePushBack");

	ADarwinCharacter_TakePushBack_Params params;
	params.Direction = Direction;
	params.PushBackForce = PushBackForce;
	params.attacker = attacker;
	params.pusher = pusher;
	params.extraZ = extraZ;
	params.bResetZVel = bResetZVel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.TakeHighResScreenShot
// (Final, Native, Public)

void ADarwinCharacter::TakeHighResScreenShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.TakeHighResScreenShot");

	ADarwinCharacter_TakeHighResScreenShot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.StopAllCameraShakes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bImmediately                   (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::StopAllCameraShakes(bool bImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.StopAllCameraShakes");

	ADarwinCharacter_StopAllCameraShakes_Params params;
	params.bImmediately = bImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.SetSuitVersionIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            suit_index                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::SetSuitVersionIndex(int suit_index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.SetSuitVersionIndex");

	ADarwinCharacter_SetSuitVersionIndex_Params params;
	params.suit_index = suit_index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.SetInAxeDamageWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::SetInAxeDamageWindow(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.SetInAxeDamageWindow");

	ADarwinCharacter_SetInAxeDamageWindow_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.SetDressRoomMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::SetDressRoomMode(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.SetDressRoomMode");

	ADarwinCharacter_SetDressRoomMode_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerUpdateShowFlags
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           show_armor                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           show_coat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           use_upgraded_boots             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           show_head                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           show_hands                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerUpdateShowFlags(bool show_armor, bool show_coat, bool use_upgraded_boots, bool show_head, bool show_hands)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerUpdateShowFlags");

	ADarwinCharacter_ServerUpdateShowFlags_Params params;
	params.show_armor = show_armor;
	params.show_coat = show_coat;
	params.use_upgraded_boots = use_upgraded_boots;
	params.show_head = show_head;
	params.show_hands = show_hands;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerUnstuckMe
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                  Spot                           (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerUnstuckMe(class AActor* Spot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerUnstuckMe");

	ADarwinCharacter_ServerUnstuckMe_Params params;
	params.Spot = Spot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSwapCoat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bWithArmor                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSwapCoat(bool bWithArmor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSwapCoat");

	ADarwinCharacter_ServerSwapCoat_Params params;
	params.bWithArmor = bWithArmor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSwapBootsAndPants
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bUseBigBootsAndShortPants      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSwapBootsAndPants(bool bUseBigBootsAndShortPants)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSwapBootsAndPants");

	ADarwinCharacter_ServerSwapBootsAndPants_Params params;
	params.bUseBigBootsAndShortPants = bUseBigBootsAndShortPants;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetUsingGamepad
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSetUsingGamepad(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetUsingGamepad");

	ADarwinCharacter_ServerSetUsingGamepad_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetUsingCraftingGamepadWheel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSetUsingCraftingGamepadWheel(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetUsingCraftingGamepadWheel");

	ADarwinCharacter_ServerSetUsingCraftingGamepadWheel_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetSuitVersionIndex
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            suit_index                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSetSuitVersionIndex(int suit_index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetSuitVersionIndex");

	ADarwinCharacter_ServerSetSuitVersionIndex_Params params;
	params.suit_index = suit_index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetSimulatedCameraTransform
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 camLoc                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 camFV                          (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinCharacter::ServerSetSimulatedCameraTransform(const struct FVector& camLoc, const struct FVector& camFV)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetSimulatedCameraTransform");

	ADarwinCharacter_ServerSetSimulatedCameraTransform_Params params;
	params.camLoc = camLoc;
	params.camFV = camFV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetShouldUseStrafe
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           inShouldUseStrafe              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSetShouldUseStrafe(bool inShouldUseStrafe)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetShouldUseStrafe");

	ADarwinCharacter_ServerSetShouldUseStrafe_Params params;
	params.inShouldUseStrafe = inShouldUseStrafe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetNetId
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 inNetId                        (Parm, ZeroConstructor)

void ADarwinCharacter::ServerSetNetId(const struct FString& inNetId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetNetId");

	ADarwinCharacter_ServerSetNetId_Params params;
	params.inNetId = inNetId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetIsHighlightedByClue
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSetIsHighlightedByClue(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetIsHighlightedByClue");

	ADarwinCharacter_ServerSetIsHighlightedByClue_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetIsHighlighted
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           by_ally                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSetIsHighlighted(class ADarwinCharacter* Character, bool by_ally)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetIsHighlighted");

	ADarwinCharacter_ServerSetIsHighlighted_Params params;
	params.Character = Character;
	params.by_ally = by_ally;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetInputDirection
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Direction                      (Parm, IsPlainOldData)

void ADarwinCharacter::ServerSetInputDirection(const struct FVector& Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetInputDirection");

	ADarwinCharacter_ServerSetInputDirection_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetELO
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            inELO                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSetELO(int inELO)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetELO");

	ADarwinCharacter_ServerSetELO_Params params;
	params.inELO = inELO;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetCrouching
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bNewCrouching                  (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSetCrouching(bool bNewCrouching)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetCrouching");

	ADarwinCharacter_ServerSetCrouching_Params params;
	params.bNewCrouching = bNewCrouching;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetControlRotation
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                InRotator                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinCharacter::ServerSetControlRotation(const struct FRotator& InRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetControlRotation");

	ADarwinCharacter_ServerSetControlRotation_Params params;
	params.InRotator = InRotator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetBool
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 VarName                        (Parm, ZeroConstructor)
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSetBool(const struct FString& VarName, bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetBool");

	ADarwinCharacter_ServerSetBool_Params params;
	params.VarName = VarName;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerSetBasicMovementAxis
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  basicMovAxis                   (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerSetBasicMovementAxis(unsigned char basicMovAxis)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerSetBasicMovementAxis");

	ADarwinCharacter_ServerSetBasicMovementAxis_Params params;
	params.basicMovAxis = basicMovAxis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerJumpButtonReleased
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinCharacter::ServerJumpButtonReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerJumpButtonReleased");

	ADarwinCharacter_ServerJumpButtonReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerJumpButtonPressed
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinCharacter::ServerJumpButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerJumpButtonPressed");

	ADarwinCharacter_ServerJumpButtonPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerExecuteSDPower
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            targetIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerExecuteSDPower(EDarwinItemTypeEnum powerType, int targetIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerExecuteSDPower");

	ADarwinCharacter_ServerExecuteSDPower_Params params;
	params.powerType = powerType;
	params.targetIndex = targetIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerDebugGotoToNextGameStart
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinCharacter::ServerDebugGotoToNextGameStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerDebugGotoToNextGameStart");

	ADarwinCharacter_ServerDebugGotoToNextGameStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerDeactivateFootprintHighlights
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinCharacter::ServerDeactivateFootprintHighlights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerDeactivateFootprintHighlights");

	ADarwinCharacter_ServerDeactivateFootprintHighlights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerCallRandomDeliveryDrone
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EDarwinDeliveryType            delivery_type                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          delivery_duration              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerCallRandomDeliveryDrone(EDarwinDeliveryType delivery_type, float delivery_duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerCallRandomDeliveryDrone");

	ADarwinCharacter_ServerCallRandomDeliveryDrone_Params params;
	params.delivery_type = delivery_type;
	params.delivery_duration = delivery_duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerBreakCamouflage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinCharacter::ServerBreakCamouflage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerBreakCamouflage");

	ADarwinCharacter_ServerBreakCamouflage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplySkin
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            SkinSkel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SkinMat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            EyesMat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            FacePaint                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplySkin(int SkinSkel, int SkinMat, int EyesMat, int FacePaint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplySkin");

	ADarwinCharacter_ServerApplySkin_Params params;
	params.SkinSkel = SkinSkel;
	params.SkinMat = SkinMat;
	params.EyesMat = EyesMat;
	params.FacePaint = FacePaint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplyShirt
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            ShirtSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ShirtMat                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplyShirt(int ShirtSkel, int ShirtMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplyShirt");

	ADarwinCharacter_ServerApplyShirt_Params params;
	params.ShirtSkel = ShirtSkel;
	params.ShirtMat = ShirtMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplyPants
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            PantsSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            PantsMat                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplyPants(int PantsSkel, int PantsMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplyPants");

	ADarwinCharacter_ServerApplyPants_Params params;
	params.PantsSkel = PantsSkel;
	params.PantsMat = PantsMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplyHelmet
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            HelmetSkel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            HelmetMat                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplyHelmet(int HelmetSkel, int HelmetMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplyHelmet");

	ADarwinCharacter_ServerApplyHelmet_Params params;
	params.HelmetSkel = HelmetSkel;
	params.HelmetMat = HelmetMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplyHairs
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            HairsSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            HairsMat                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplyHairs(int HairsSkel, int HairsMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplyHairs");

	ADarwinCharacter_ServerApplyHairs_Params params;
	params.HairsSkel = HairsSkel;
	params.HairsMat = HairsMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplyCoat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            CoatSkel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            CoatMat                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplyCoat(int CoatSkel, int CoatMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplyCoat");

	ADarwinCharacter_ServerApplyCoat_Params params;
	params.CoatSkel = CoatSkel;
	params.CoatMat = CoatMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplyBow
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            BowSkel                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            InBowMat                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplyBow(int BowSkel, int InBowMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplyBow");

	ADarwinCharacter_ServerApplyBow_Params params;
	params.BowSkel = BowSkel;
	params.InBowMat = InBowMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplyBoots
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            BootsSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            BootsMat                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplyBoots(int BootsSkel, int BootsMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplyBoots");

	ADarwinCharacter_ServerApplyBoots_Params params;
	params.BootsSkel = BootsSkel;
	params.BootsMat = BootsMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplyBeard
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            BeardSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            BeardMat                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplyBeard(int BeardSkel, int BeardMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplyBeard");

	ADarwinCharacter_ServerApplyBeard_Params params;
	params.BeardSkel = BeardSkel;
	params.BeardMat = BeardMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplyAxe
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            AxeSkel                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            InAxeMat                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplyAxe(int AxeSkel, int InAxeMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplyAxe");

	ADarwinCharacter_ServerApplyAxe_Params params;
	params.AxeSkel = AxeSkel;
	params.InAxeMat = InAxeMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplyArmor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            ArmorSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ArmorMat                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplyArmor(int ArmorSkel, int ArmorMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplyArmor");

	ADarwinCharacter_ServerApplyArmor_Params params;
	params.ArmorSkel = ArmorSkel;
	params.ArmorMat = ArmorMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerApplyAllSkeletalMeshComponents
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            ShirtSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ShirtMat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            PantsSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            PantsMat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SkinSkel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SkinMat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ArmorSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ArmorMat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            BootsSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            BootsMat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            CoatSkel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            CoatMat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            AxeSkel                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            InAxeMat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            BowSkel                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            InBowMat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            HelmetSkel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            HelmetMat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            EyesMat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            HairsSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            HairsMat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            BeardSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            BeardMat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            FacePaint                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ServerApplyAllSkeletalMeshComponents(int ShirtSkel, int ShirtMat, int PantsSkel, int PantsMat, int SkinSkel, int SkinMat, int ArmorSkel, int ArmorMat, int BootsSkel, int BootsMat, int CoatSkel, int CoatMat, int AxeSkel, int InAxeMat, int BowSkel, int InBowMat, int HelmetSkel, int HelmetMat, int EyesMat, int HairsSkel, int HairsMat, int BeardSkel, int BeardMat, int FacePaint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerApplyAllSkeletalMeshComponents");

	ADarwinCharacter_ServerApplyAllSkeletalMeshComponents_Params params;
	params.ShirtSkel = ShirtSkel;
	params.ShirtMat = ShirtMat;
	params.PantsSkel = PantsSkel;
	params.PantsMat = PantsMat;
	params.SkinSkel = SkinSkel;
	params.SkinMat = SkinMat;
	params.ArmorSkel = ArmorSkel;
	params.ArmorMat = ArmorMat;
	params.BootsSkel = BootsSkel;
	params.BootsMat = BootsMat;
	params.CoatSkel = CoatSkel;
	params.CoatMat = CoatMat;
	params.AxeSkel = AxeSkel;
	params.InAxeMat = InAxeMat;
	params.BowSkel = BowSkel;
	params.InBowMat = InBowMat;
	params.HelmetSkel = HelmetSkel;
	params.HelmetMat = HelmetMat;
	params.EyesMat = EyesMat;
	params.HairsSkel = HairsSkel;
	params.HairsMat = HairsMat;
	params.BeardSkel = BeardSkel;
	params.BeardMat = BeardMat;
	params.FacePaint = FacePaint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ServerActivateNetworkBuffer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinCharacter::ServerActivateNetworkBuffer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ServerActivateNetworkBuffer");

	ADarwinCharacter_ServerActivateNetworkBuffer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.PlayCameraShake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerCameraShake             shake_type                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::PlayCameraShake(EPlayerCameraShake shake_type, float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.PlayCameraShake");

	ADarwinCharacter_PlayCameraShake_Params params;
	params.shake_type = shake_type;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepWinner
// (Final, Native, Public)

void ADarwinCharacter::OnRepWinner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepWinner");

	ADarwinCharacter_OnRepWinner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepSuitVersionIndex
// (Final, Native, Public)

void ADarwinCharacter::OnRepSuitVersionIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepSuitVersionIndex");

	ADarwinCharacter_OnRepSuitVersionIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepPower
// (Final, Native, Public)

void ADarwinCharacter::OnRepPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepPower");

	ADarwinCharacter_OnRepPower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepDead
// (Final, Native, Public)

void ADarwinCharacter::OnRepDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepDead");

	ADarwinCharacter_OnRepDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepDarwinUniqueID
// (Final, Native, Public)

void ADarwinCharacter::OnRepDarwinUniqueID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepDarwinUniqueID");

	ADarwinCharacter_OnRepDarwinUniqueID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationSkin
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationSkin");

	ADarwinCharacter_OnRepCustomizationSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationShowFlags
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationShowFlags()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationShowFlags");

	ADarwinCharacter_OnRepCustomizationShowFlags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationShirt
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationShirt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationShirt");

	ADarwinCharacter_OnRepCustomizationShirt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationPants
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationPants()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationPants");

	ADarwinCharacter_OnRepCustomizationPants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationHelmet
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationHelmet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationHelmet");

	ADarwinCharacter_OnRepCustomizationHelmet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationHairs
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationHairs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationHairs");

	ADarwinCharacter_OnRepCustomizationHairs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationCoatWithArmor
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationCoatWithArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationCoatWithArmor");

	ADarwinCharacter_OnRepCustomizationCoatWithArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationCoat
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationCoat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationCoat");

	ADarwinCharacter_OnRepCustomizationCoat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationBow
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationBow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationBow");

	ADarwinCharacter_OnRepCustomizationBow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationBootsAndPants
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationBootsAndPants()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationBootsAndPants");

	ADarwinCharacter_OnRepCustomizationBootsAndPants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationBoots
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationBoots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationBoots");

	ADarwinCharacter_OnRepCustomizationBoots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationBeard
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationBeard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationBeard");

	ADarwinCharacter_OnRepCustomizationBeard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationAxe
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationAxe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationAxe");

	ADarwinCharacter_OnRepCustomizationAxe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCustomizationArmor
// (Final, Native, Public)

void ADarwinCharacter::OnRepCustomizationArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCustomizationArmor");

	ADarwinCharacter_OnRepCustomizationArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.OnRepCharacterName
// (Final, Native, Public)

void ADarwinCharacter::OnRepCharacterName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.OnRepCharacterName");

	ADarwinCharacter_OnRepCharacterName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastUnTrapped
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinCharacter::NetMulticastUnTrapped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastUnTrapped");

	ADarwinCharacter_NetMulticastUnTrapped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastTurnOffArrowFire
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinCharacter::NetMulticastTurnOffArrowFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastTurnOffArrowFire");

	ADarwinCharacter_NetMulticastTurnOffArrowFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastStartManHunt
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinCharacter::NetMulticastStartManHunt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastStartManHunt");

	ADarwinCharacter_NetMulticastStartManHunt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastSetUsingGamepad
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::NetMulticastSetUsingGamepad(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastSetUsingGamepad");

	ADarwinCharacter_NetMulticastSetUsingGamepad_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastSetUsingCraftingGamepadWheel
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::NetMulticastSetUsingCraftingGamepadWheel(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastSetUsingCraftingGamepadWheel");

	ADarwinCharacter_NetMulticastSetUsingCraftingGamepadWheel_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastSetSimulatedCameraTransform
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 camLoc                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 camFV                          (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinCharacter::NetMulticastSetSimulatedCameraTransform(const struct FVector& camLoc, const struct FVector& camFV)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastSetSimulatedCameraTransform");

	ADarwinCharacter_NetMulticastSetSimulatedCameraTransform_Params params;
	params.camLoc = camLoc;
	params.camFV = camFV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastSetLocAndRotAtGameStart
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                rot                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinCharacter::NetMulticastSetLocAndRotAtGameStart(const struct FVector& Loc, const struct FRotator& rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastSetLocAndRotAtGameStart");

	ADarwinCharacter_NetMulticastSetLocAndRotAtGameStart_Params params;
	params.Loc = Loc;
	params.rot = rot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastSetInputDirection
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Direction                      (Parm, IsPlainOldData)

void ADarwinCharacter::NetMulticastSetInputDirection(const struct FVector& Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastSetInputDirection");

	ADarwinCharacter_NetMulticastSetInputDirection_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastSetControlRotation
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FRotator                InRotator                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinCharacter::NetMulticastSetControlRotation(const struct FRotator& InRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastSetControlRotation");

	ADarwinCharacter_NetMulticastSetControlRotation_Params params;
	params.InRotator = InRotator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastSetBool
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// struct FString                 VarName                        (Parm, ZeroConstructor)
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::NetMulticastSetBool(const struct FString& VarName, bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastSetBool");

	ADarwinCharacter_NetMulticastSetBool_Params params;
	params.VarName = VarName;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastSetArrowOnFire
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinCharacter::NetMulticastSetArrowOnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastSetArrowOnFire");

	ADarwinCharacter_NetMulticastSetArrowOnFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastRemoveFromMuteMap
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinCharacter::NetMulticastRemoveFromMuteMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastRemoveFromMuteMap");

	ADarwinCharacter_NetMulticastRemoveFromMuteMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastProjectileHitArmor
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinCharacter::NetMulticastProjectileHitArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastProjectileHitArmor");

	ADarwinCharacter_NetMulticastProjectileHitArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastProjectileHit
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bHeadShot                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::NetMulticastProjectileHit(bool bHeadShot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastProjectileHit");

	ADarwinCharacter_NetMulticastProjectileHit_Params params;
	params.bHeadShot = bHeadShot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastPlayerHit
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                          Angle                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromLeft                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::NetMulticastPlayerHit(float Angle, bool bFromLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastPlayerHit");

	ADarwinCharacter_NetMulticastPlayerHit_Params params;
	params.Angle = Angle;
	params.bFromLeft = bFromLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastManHunOutro
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinCharacter::NetMulticastManHunOutro()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastManHunOutro");

	ADarwinCharacter_NetMulticastManHunOutro_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastKill
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        killerChar                     (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinDamageTypeEnum          DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFirstBlood                    (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::NetMulticastKill(class ADarwinCharacter* killerChar, EDarwinDamageTypeEnum DamageType, bool bFirstBlood)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastKill");

	ADarwinCharacter_NetMulticastKill_Params params;
	params.killerChar = killerChar;
	params.DamageType = DamageType;
	params.bFirstBlood = bFirstBlood;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastJumpButtonReleased
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinCharacter::NetMulticastJumpButtonReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastJumpButtonReleased");

	ADarwinCharacter_NetMulticastJumpButtonReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastJumpButtonPressed
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinCharacter::NetMulticastJumpButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastJumpButtonPressed");

	ADarwinCharacter_NetMulticastJumpButtonPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastExecuteSDPower
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            targetIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::NetMulticastExecuteSDPower(EDarwinItemTypeEnum powerType, int targetIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastExecuteSDPower");

	ADarwinCharacter_NetMulticastExecuteSDPower_Params params;
	params.powerType = powerType;
	params.targetIndex = targetIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastEndManHunt
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            KillerId                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::NetMulticastEndManHunt(int KillerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastEndManHunt");

	ADarwinCharacter_NetMulticastEndManHunt_Params params;
	params.KillerId = KillerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastDebugServerLocation
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 serverLoc                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinCharacter::NetMulticastDebugServerLocation(const struct FVector& serverLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastDebugServerLocation");

	ADarwinCharacter_NetMulticastDebugServerLocation_Params params;
	params.serverLoc = serverLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastDeactivateFootprintHighlights
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void ADarwinCharacter::NetMulticastDeactivateFootprintHighlights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastDeactivateFootprintHighlights");

	ADarwinCharacter_NetMulticastDeactivateFootprintHighlights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastBloodPactDead
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        killeChar                      (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinDamageTypeEnum          DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::NetMulticastBloodPactDead(class ADarwinCharacter* killeChar, EDarwinDamageTypeEnum DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastBloodPactDead");

	ADarwinCharacter_NetMulticastBloodPactDead_Params params;
	params.killeChar = killeChar;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastActivateNetworkBuffer
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinCharacter::NetMulticastActivateNetworkBuffer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastActivateNetworkBuffer");

	ADarwinCharacter_NetMulticastActivateNetworkBuffer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastAcquirePoop
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinZombie*           poopTargetDeer                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          poopDuration                   (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::NetMulticastAcquirePoop(class ADarwinZombie* poopTargetDeer, float poopDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastAcquirePoop");

	ADarwinCharacter_NetMulticastAcquirePoop_Params params;
	params.poopTargetDeer = poopTargetDeer;
	params.poopDuration = poopDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NetMulticastAcquireClue
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                          clueDuration                   (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        clueTargetCharacter            (Parm, ZeroConstructor, IsPlainOldData)
// float                          clueTimeSinceCreation          (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            clueClueType                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bNoClueCam                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDecoyClue                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          baseClueDuration               (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::NetMulticastAcquireClue(float clueDuration, class ADarwinCharacter* clueTargetCharacter, float clueTimeSinceCreation, EDarwinItemTypeEnum clueClueType, bool bNoClueCam, bool bDecoyClue, float baseClueDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NetMulticastAcquireClue");

	ADarwinCharacter_NetMulticastAcquireClue_Params params;
	params.clueDuration = clueDuration;
	params.clueTargetCharacter = clueTargetCharacter;
	params.clueTimeSinceCreation = clueTimeSinceCreation;
	params.clueClueType = clueClueType;
	params.bNoClueCam = bNoClueCam;
	params.bDecoyClue = bDecoyClue;
	params.baseClueDuration = baseClueDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.NeedCustomCharacterModels
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacter::NeedCustomCharacterModels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.NeedCustomCharacterModels");

	ADarwinCharacter_NeedCustomCharacterModels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.IsOutOfBreath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::IsOutOfBreath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.IsOutOfBreath");

	ADarwinCharacter_IsOutOfBreath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.InitiateBloodPact
// (Final, Exec, Native, Public)

void ADarwinCharacter::InitiateBloodPact()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.InitiateBloodPact");

	ADarwinCharacter_InitiateBloodPact_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.InitializeCustomizationIndexes
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacter::InitializeCustomizationIndexes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.InitializeCustomizationIndexes");

	ADarwinCharacter_InitializeCustomizationIndexes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.GoblinParade
// (Final, Exec, Native, Public)

void ADarwinCharacter::GoblinParade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GoblinParade");

	ADarwinCharacter_GoblinParade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.GetTruncLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ADarwinCharacter::GetTruncLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetTruncLocation");

	ADarwinCharacter_GetTruncLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetTrapTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform ADarwinCharacter::GetTrapTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetTrapTransform");

	ADarwinCharacter_GetTrapTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetRightFootTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform ADarwinCharacter::GetRightFootTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetRightFootTransform");

	ADarwinCharacter_GetRightFootTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetPlayerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADarwinCharacter::GetPlayerIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetPlayerIndex");

	ADarwinCharacter_GetPlayerIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetPlayerBodyType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerBodyType                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EPlayerBodyType ADarwinCharacter::GetPlayerBodyType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetPlayerBodyType");

	ADarwinCharacter_GetPlayerBodyType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetNumberOfGamesPlayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADarwinCharacter::GetNumberOfGamesPlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetNumberOfGamesPlayed");

	ADarwinCharacter_GetNumberOfGamesPlayed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsTripped
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsTripped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsTripped");

	ADarwinCharacter_GetIsTripped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsTrapped
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsTrapped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsTrapped");

	ADarwinCharacter_GetIsTrapped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsThrowingGrenade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsThrowingGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsThrowingGrenade");

	ADarwinCharacter_GetIsThrowingGrenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsTheWinner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsTheWinner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsTheWinner");

	ADarwinCharacter_GetIsTheWinner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsTeleporting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsTeleporting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsTeleporting");

	ADarwinCharacter_GetIsTeleporting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsSprinting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsSprinting");

	ADarwinCharacter_GetIsSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsSpawningCraftableTool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsSpawningCraftableTool()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsSpawningCraftableTool");

	ADarwinCharacter_GetIsSpawningCraftableTool_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsShooting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsShooting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsShooting");

	ADarwinCharacter_GetIsShooting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsRocketDashing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsRocketDashing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsRocketDashing");

	ADarwinCharacter_GetIsRocketDashing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsReloading
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsReloading");

	ADarwinCharacter_GetIsReloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsManHunted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsManHunted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsManHunted");

	ADarwinCharacter_GetIsManHunted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsLooted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsLooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsLooted");

	ADarwinCharacter_GetIsLooted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsInLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsInLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsInLobby");

	ADarwinCharacter_GetIsInLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsInInterior
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADarwinInteriorVolume*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADarwinInteriorVolume* ADarwinCharacter::GetIsInInterior()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsInInterior");

	ADarwinCharacter_GetIsInInterior_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsInForbiddenZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsInForbiddenZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsInForbiddenZone");

	ADarwinCharacter_GetIsInForbiddenZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsHit");

	ADarwinCharacter_GetIsHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsHarvestingRessource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsHarvestingRessource()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsHarvestingRessource");

	ADarwinCharacter_GetIsHarvestingRessource_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsGliding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsGliding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsGliding");

	ADarwinCharacter_GetIsGliding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsGliderCoolingDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsGliderCoolingDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsGliderCoolingDown");

	ADarwinCharacter_GetIsGliderCoolingDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsDoingContextualAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsDoingContextualAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsDoingContextualAction");

	ADarwinCharacter_GetIsDoingContextualAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsDead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsDead");

	ADarwinCharacter_GetIsDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsCrouching
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsCrouching()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsCrouching");

	ADarwinCharacter_GetIsCrouching_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsCrafting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsCrafting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsCrafting");

	ADarwinCharacter_GetIsCrafting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsContextualActionPressed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsContextualActionPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsContextualActionPressed");

	ADarwinCharacter_GetIsContextualActionPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsCamouflaged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsCamouflaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsCamouflaged");

	ADarwinCharacter_GetIsCamouflaged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsBoloed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsBoloed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsBoloed");

	ADarwinCharacter_GetIsBoloed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsAxeWindingUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsAxeWindingUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsAxeWindingUp");

	ADarwinCharacter_GetIsAxeWindingUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsAxeSwinging
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsAxeSwinging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsAxeSwinging");

	ADarwinCharacter_GetIsAxeSwinging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsAimingTeleport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsAimingTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsAimingTeleport");

	ADarwinCharacter_GetIsAimingTeleport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsAiming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsAiming");

	ADarwinCharacter_GetIsAiming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetIsActivatingTechnology
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinCharacter::GetIsActivatingTechnology()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetIsActivatingTechnology");

	ADarwinCharacter_GetIsActivatingTechnology_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetHeadLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ADarwinCharacter::GetHeadLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetHeadLocation");

	ADarwinCharacter_GetHeadLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetAxeLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ADarwinCharacter::GetAxeLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetAxeLocation");

	ADarwinCharacter_GetAxeLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetAxeHeadLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ADarwinCharacter::GetAxeHeadLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetAxeHeadLocation");

	ADarwinCharacter_GetAxeHeadLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.GetArrowType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDarwinItemTypeEnum ADarwinCharacter::GetArrowType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.GetArrowType");

	ADarwinCharacter_GetArrowType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacter.ForceFeedbackHit
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacter::ForceFeedbackHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ForceFeedbackHit");

	ADarwinCharacter_ForceFeedbackHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ForceFeedbackHarvest
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacter::ForceFeedbackHarvest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ForceFeedbackHarvest");

	ADarwinCharacter_ForceFeedbackHarvest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ForceFeedbackDead
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacter::ForceFeedbackDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ForceFeedbackDead");

	ADarwinCharacter_ForceFeedbackDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ForceFeedbackAxe
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacter::ForceFeedbackAxe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ForceFeedbackAxe");

	ADarwinCharacter_ForceFeedbackAxe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ForceFeedbackArrow
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacter::ForceFeedbackArrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ForceFeedbackArrow");

	ADarwinCharacter_ForceFeedbackArrow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.ExecuteSDPower
// (Final, Exec, Native, Public)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            targetIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::ExecuteSDPower(EDarwinItemTypeEnum powerType, int targetIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.ExecuteSDPower");

	ADarwinCharacter_ExecuteSDPower_Params params;
	params.powerType = powerType;
	params.targetIndex = targetIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventZoneWillBeForbidden
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::EventZoneWillBeForbidden(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventZoneWillBeForbidden");

	ADarwinCharacter_EventZoneWillBeForbidden_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventUpdateStormParticles
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventUpdateStormParticles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventUpdateStormParticles");

	ADarwinCharacter_EventUpdateStormParticles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventUpdateNuclearFX
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventUpdateNuclearFX()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventUpdateNuclearFX");

	ADarwinCharacter_EventUpdateNuclearFX_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventUpdateGravityStorm
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventUpdateGravityStorm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventUpdateGravityStorm");

	ADarwinCharacter_EventUpdateGravityStorm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventUpdateForceFeedback
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::EventUpdateForceFeedback(float Intensity, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventUpdateForceFeedback");

	ADarwinCharacter_EventUpdateForceFeedback_Params params;
	params.Intensity = Intensity;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventUpdateCableHookVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::EventUpdateCableHookVisibility(bool visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventUpdateCableHookVisibility");

	ADarwinCharacter_EventUpdateCableHookVisibility_Params params;
	params.visible = visible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventUpdateCableHook
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinCharacter::EventUpdateCableHook(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventUpdateCableHook");

	ADarwinCharacter_EventUpdateCableHook_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventUnTrapped
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventUnTrapped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventUnTrapped");

	ADarwinCharacter_EventUnTrapped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventTurnOffArrowFire
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventTurnOffArrowFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventTurnOffArrowFire");

	ADarwinCharacter_EventTurnOffArrowFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventSpawnMysteryBox
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventSpawnMysteryBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventSpawnMysteryBox");

	ADarwinCharacter_EventSpawnMysteryBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventSpawnDeadDecal
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventSpawnDeadDecal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventSpawnDeadDecal");

	ADarwinCharacter_EventSpawnDeadDecal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventSpawnCableHookEmitter
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventSpawnCableHookEmitter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventSpawnCableHookEmitter");

	ADarwinCharacter_EventSpawnCableHookEmitter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventSpawnAmbientParticles
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventSpawnAmbientParticles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventSpawnAmbientParticles");

	ADarwinCharacter_EventSpawnAmbientParticles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventSetArrowOnFire
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventSetArrowOnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventSetArrowOnFire");

	ADarwinCharacter_EventSetArrowOnFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventProjectileHitArmor
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventProjectileHitArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventProjectileHitArmor");

	ADarwinCharacter_EventProjectileHitArmor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventProjectileHit
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventProjectileHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventProjectileHit");

	ADarwinCharacter_EventProjectileHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventProjectileHeadShot
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventProjectileHeadShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventProjectileHeadShot");

	ADarwinCharacter_EventProjectileHeadShot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventNewPlayerJoined
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventNewPlayerJoined()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventNewPlayerJoined");

	ADarwinCharacter_EventNewPlayerJoined_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventNewOcarinaTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::EventNewOcarinaTarget(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventNewOcarinaTarget");

	ADarwinCharacter_EventNewOcarinaTarget_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventManHuntTerminate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bSurvived                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::EventManHuntTerminate(bool bSurvived)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventManHuntTerminate");

	ADarwinCharacter_EventManHuntTerminate_Params params;
	params.bSurvived = bSurvived;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventManHuntActivate
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventManHuntActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventManHuntActivate");

	ADarwinCharacter_EventManHuntActivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventLocalIsTheWinner
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::EventLocalIsTheWinner(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventLocalIsTheWinner");

	ADarwinCharacter_EventLocalIsTheWinner_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventLocalIsLoser
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            playerRank                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::EventLocalIsLoser(class ADarwinCharacter* Character, int playerRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventLocalIsLoser");

	ADarwinCharacter_EventLocalIsLoser_Params params;
	params.Character = Character;
	params.playerRank = playerRank;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventKilled
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinDamageTypeEnum          DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            numberLeftAlive                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSuicide                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::EventKilled(EDarwinDamageTypeEnum DamageType, int numberLeftAlive, bool bSuicide)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventKilled");

	ADarwinCharacter_EventKilled_Params params;
	params.DamageType = DamageType;
	params.numberLeftAlive = numberLeftAlive;
	params.bSuicide = bSuicide;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventHitByAxe
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventHitByAxe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventHitByAxe");

	ADarwinCharacter_EventHitByAxe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventForceFeedbackHit
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventForceFeedbackHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventForceFeedbackHit");

	ADarwinCharacter_EventForceFeedbackHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventForceFeedbackHarvest
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventForceFeedbackHarvest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventForceFeedbackHarvest");

	ADarwinCharacter_EventForceFeedbackHarvest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventForceFeedbackDead
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventForceFeedbackDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventForceFeedbackDead");

	ADarwinCharacter_EventForceFeedbackDead_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventForceFeedbackAxe
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventForceFeedbackAxe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventForceFeedbackAxe");

	ADarwinCharacter_EventForceFeedbackAxe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventForceFeedbackArrow
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventForceFeedbackArrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventForceFeedbackArrow");

	ADarwinCharacter_EventForceFeedbackArrow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventEnterSafeZone
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::EventEnterSafeZone(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventEnterSafeZone");

	ADarwinCharacter_EventEnterSafeZone_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventEnterForbiddenZone
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::EventEnterForbiddenZone(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventEnterForbiddenZone");

	ADarwinCharacter_EventEnterForbiddenZone_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventCloseCharacterCustomization
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADarwinCharacter::EventCloseCharacterCustomization()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventCloseCharacterCustomization");

	ADarwinCharacter_EventCloseCharacterCustomization_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventCharacterCustomization
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADarwinCharacter::EventCharacterCustomization()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventCharacterCustomization");

	ADarwinCharacter_EventCharacterCustomization_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventCallDeliveryDrone
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinDeliveryType            delivery_type                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          delivery_duration              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacter::EventCallDeliveryDrone(EDarwinDeliveryType delivery_type, float delivery_duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventCallDeliveryDrone");

	ADarwinCharacter_EventCallDeliveryDrone_Params params;
	params.delivery_type = delivery_type;
	params.delivery_duration = delivery_duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventBloodPactRevive
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventBloodPactRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventBloodPactRevive");

	ADarwinCharacter_EventBloodPactRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventBloodPactDeadHeartbeat
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventBloodPactDeadHeartbeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventBloodPactDeadHeartbeat");

	ADarwinCharacter_EventBloodPactDeadHeartbeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventBloodPactDead
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventBloodPactDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventBloodPactDead");

	ADarwinCharacter_EventBloodPactDead_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventAxeRadialForce
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)

void ADarwinCharacter::EventAxeRadialForce(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventAxeRadialForce");

	ADarwinCharacter_EventAxeRadialForce_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.EventArmorHit
// (Event, Public, BlueprintEvent)

void ADarwinCharacter::EventArmorHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.EventArmorHit");

	ADarwinCharacter_EventArmorHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacter.CloseCraftMenu
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacter::CloseCraftMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacter.CloseCraftMenu");

	ADarwinCharacter_CloseCraftMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterAnimInstance.GetNewFidgetFactor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDarwinCharacterAnimInstance::GetNewFidgetFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterAnimInstance.GetNewFidgetFactor");

	UDarwinCharacterAnimInstance_GetNewFidgetFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterCustomization.UnlockAndShowEverything
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacterCustomization::UnlockAndShowEverything()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterCustomization.UnlockAndShowEverything");

	ADarwinCharacterCustomization_UnlockAndShowEverything_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterCustomization.SortAllSkelMeshes
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacterCustomization::SortAllSkelMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterCustomization.SortAllSkelMeshes");

	ADarwinCharacterCustomization_SortAllSkelMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterCustomization.SortAllMaterials
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacterCustomization::SortAllMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterCustomization.SortAllMaterials");

	ADarwinCharacterCustomization_SortAllMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.SwitchCraftableItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::SwitchCraftableItems(int Index, EDarwinItemTypeEnum Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.SwitchCraftableItems");

	UDarwinCharacterWidget_SwitchCraftableItems_Params params;
	params.Index = Index;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.RemapInventoryItemFromIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            fromIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            toIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::RemapInventoryItemFromIndex(int fromIndex, int toIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.RemapInventoryItemFromIndex");

	UDarwinCharacterWidget_RemapInventoryItemFromIndex_Params params;
	params.fromIndex = fromIndex;
	params.toIndex = toIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.RemapInventoryItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            toIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::RemapInventoryItem(EDarwinItemTypeEnum Type, int toIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.RemapInventoryItem");

	UDarwinCharacterWidget_RemapInventoryItem_Params params;
	params.Type = Type;
	params.toIndex = toIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.InventoryAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinCharacterWidget::InventoryAction(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.InventoryAction");

	UDarwinCharacterWidget_InventoryAction_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.GotoSpectatorMode
// (Final, Native, Public, BlueprintCallable)

void UDarwinCharacterWidget::GotoSpectatorMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.GotoSpectatorMode");

	UDarwinCharacterWidget_GotoSpectatorMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.GetWheelventoryMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWheelventoryMode              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWheelventoryMode UDarwinCharacterWidget::GetWheelventoryMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.GetWheelventoryMode");

	UDarwinCharacterWidget_GetWheelventoryMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.GetPowerDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinCharacterWidget::GetPowerDuration(EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.GetPowerDuration");

	UDarwinCharacterWidget_GetPowerDuration_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.GetPowerCooldown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinCharacterWidget::GetPowerCooldown(EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.GetPowerCooldown");

	UDarwinCharacterWidget_GetPowerCooldown_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.GetIsUsingGamepad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinCharacterWidget::GetIsUsingGamepad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.GetIsUsingGamepad");

	UDarwinCharacterWidget_GetIsUsingGamepad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.GetIsBloodPact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinCharacterWidget::GetIsBloodPact()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.GetIsBloodPact");

	UDarwinCharacterWidget_GetIsBloodPact_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.GetHeatFactor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDarwinCharacterWidget::GetHeatFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.GetHeatFactor");

	UDarwinCharacterWidget_GetHeatFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.GetDarwinCharacterOwnerUniqueID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinCharacterWidget::GetDarwinCharacterOwnerUniqueID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.GetDarwinCharacterOwnerUniqueID");

	UDarwinCharacterWidget_GetDarwinCharacterOwnerUniqueID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.GetAvailableReplacementCraftables
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<EDarwinItemTypeEnum> UDarwinCharacterWidget::GetAvailableReplacementCraftables(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.GetAvailableReplacementCraftables");

	UDarwinCharacterWidget_GetAvailableReplacementCraftables_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.GetAllReplacementCraftables
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// TMap<EDarwinItemTypeEnum, bool> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TMap<EDarwinItemTypeEnum, bool> UDarwinCharacterWidget::GetAllReplacementCraftables(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.GetAllReplacementCraftables");

	UDarwinCharacterWidget_GetAllReplacementCraftables_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.EventWarmthPackConsumed
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            warmthAmount                   (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventWarmthPackConsumed(int warmthAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventWarmthPackConsumed");

	UDarwinCharacterWidget_EventWarmthPackConsumed_Params params;
	params.warmthAmount = warmthAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventWardPing
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 worldLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinCharacterWidget::EventWardPing(const struct FVector2D& Loc, const struct FVector& worldLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventWardPing");

	UDarwinCharacterWidget_EventWardPing_Params params;
	params.Loc = Loc;
	params.worldLoc = worldLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateZoneName
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)
// bool                           bForbiddenZone                 (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateZoneName(const struct FString& zoneName, bool bForbiddenZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateZoneName");

	UDarwinCharacterWidget_EventUpdateZoneName_Params params;
	params.zoneName = zoneName;
	params.bForbiddenZone = bForbiddenZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateWeaponType
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            weaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            MaxLevel                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateWeaponType(EDarwinItemTypeEnum weaponType, int MaxLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateWeaponType");

	UDarwinCharacterWidget_EventUpdateWeaponType_Params params;
	params.weaponType = weaponType;
	params.MaxLevel = MaxLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateWeaponLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            weaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateWeaponLevel(EDarwinItemTypeEnum weaponType, int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateWeaponLevel");

	UDarwinCharacterWidget_EventUpdateWeaponLevel_Params params;
	params.weaponType = weaponType;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateTeleportCooldown
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            timeLeft                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateTeleportCooldown(float Value, int timeLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateTeleportCooldown");

	UDarwinCharacterWidget_EventUpdateTeleportCooldown_Params params;
	params.Value = Value;
	params.timeLeft = timeLeft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateStamina
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          staminaNormalized              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateStamina(float staminaNormalized)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateStamina");

	UDarwinCharacterWidget_EventUpdateStamina_Params params;
	params.staminaNormalized = staminaNormalized;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateSniperZoom
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            currentSniperZoomIndex         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateSniperZoom(int currentSniperZoomIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateSniperZoom");

	UDarwinCharacterWidget_EventUpdateSniperZoom_Params params;
	params.currentSniperZoomIndex = currentSniperZoomIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateReloadProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateReloadProgress(float progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateReloadProgress");

	UDarwinCharacterWidget_EventUpdateReloadProgress_Params params;
	params.progress = progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateRealStamina
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Stamina                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            staminaMax                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateRealStamina(int Stamina, int staminaMax)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateRealStamina");

	UDarwinCharacterWidget_EventUpdateRealStamina_Params params;
	params.Stamina = Stamina;
	params.staminaMax = staminaMax;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateRealHealth
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            health                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            healthMax                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateRealHealth(int health, int healthMax)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateRealHealth");

	UDarwinCharacterWidget_EventUpdateRealHealth_Params params;
	params.health = health;
	params.healthMax = healthMax;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateRealColdFactor
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            coldFactor                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            coldFactorMax                  (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateRealColdFactor(int coldFactor, int coldFactorMax)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateRealColdFactor");

	UDarwinCharacterWidget_EventUpdateRealColdFactor_Params params;
	params.coldFactor = coldFactor;
	params.coldFactorMax = coldFactorMax;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdatePowerDuration
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            timeLeft                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdatePowerDuration(EDarwinItemTypeEnum powerType, float Value, int timeLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdatePowerDuration");

	UDarwinCharacterWidget_EventUpdatePowerDuration_Params params;
	params.powerType = powerType;
	params.Value = Value;
	params.timeLeft = timeLeft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdatePowerCooldown
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            timeLeft                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdatePowerCooldown(EDarwinItemTypeEnum powerType, float Value, int timeLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdatePowerCooldown");

	UDarwinCharacterWidget_EventUpdatePowerCooldown_Params params;
	params.powerType = powerType;
	params.Value = Value;
	params.timeLeft = timeLeft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdatePoopTargetLocation
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 worldLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            targetDeerID                   (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdatePoopTargetLocation(const struct FVector2D& Loc, const struct FVector& worldLoc, float Yaw, int targetDeerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdatePoopTargetLocation");

	UDarwinCharacterWidget_EventUpdatePoopTargetLocation_Params params;
	params.Loc = Loc;
	params.worldLoc = worldLoc;
	params.Yaw = Yaw;
	params.targetDeerID = targetDeerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfWood
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            numberOfWood                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncrement                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateNumberOfWood(int numberOfWood, bool bIncrement)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfWood");

	UDarwinCharacterWidget_EventUpdateNumberOfWood_Params params;
	params.numberOfWood = numberOfWood;
	params.bIncrement = bIncrement;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfLeather
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            numberOfLeather                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncrement                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateNumberOfLeather(int numberOfLeather, bool bIncrement)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfLeather");

	UDarwinCharacterWidget_EventUpdateNumberOfLeather_Params params;
	params.numberOfLeather = numberOfLeather;
	params.bIncrement = bIncrement;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfKills
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            nbOfKills                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateNumberOfKills(int nbOfKills)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfKills");

	UDarwinCharacterWidget_EventUpdateNumberOfKills_Params params;
	params.nbOfKills = nbOfKills;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfElectronic
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            numberOfElectronic             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncrement                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateNumberOfElectronic(int numberOfElectronic, bool bIncrement)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfElectronic");

	UDarwinCharacterWidget_EventUpdateNumberOfElectronic_Params params;
	params.numberOfElectronic = numberOfElectronic;
	params.bIncrement = bIncrement;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfBeholderFollowers
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateNumberOfBeholderFollowers(int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfBeholderFollowers");

	UDarwinCharacterWidget_EventUpdateNumberOfBeholderFollowers_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfArrows
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            numberOfArrows                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncrement                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateNumberOfArrows(int numberOfArrows, bool bIncrement)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateNumberOfArrows");

	UDarwinCharacterWidget_EventUpdateNumberOfArrows_Params params;
	params.numberOfArrows = numberOfArrows;
	params.bIncrement = bIncrement;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateNuclearZone
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)
// int                            timeLeft                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateNuclearZone(const struct FString& zoneName, int timeLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateNuclearZone");

	UDarwinCharacterWidget_EventUpdateNuclearZone_Params params;
	params.zoneName = zoneName;
	params.timeLeft = timeLeft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateMouseAngle
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Angle                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateMouseAngle(float Angle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateMouseAngle");

	UDarwinCharacterWidget_EventUpdateMouseAngle_Params params;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateMalusBonusTime
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          timeLeftNormalized             (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateMalusBonusTime(EDarwinItemTypeEnum Type, float timeLeftNormalized)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateMalusBonusTime");

	UDarwinCharacterWidget_EventUpdateMalusBonusTime_Params params;
	params.Type = Type;
	params.timeLeftNormalized = timeLeftNormalized;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateLootActionProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           isLooting                      (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 playerName                     (Parm, ZeroConstructor)
// float                          progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateLootActionProgress(bool isLooting, EDarwinItemTypeEnum Type, const struct FString& playerName, float progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateLootActionProgress");

	UDarwinCharacterWidget_EventUpdateLootActionProgress_Params params;
	params.isLooting = isLooting;
	params.Type = Type;
	params.playerName = playerName;
	params.progress = progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateIsInLobby
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bIsInLobby                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateIsInLobby(bool bIsInLobby)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateIsInLobby");

	UDarwinCharacterWidget_EventUpdateIsInLobby_Params params;
	params.bIsInLobby = bIsInLobby;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateHealth
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          healthNormalized               (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateHealth(float healthNormalized)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateHealth");

	UDarwinCharacterWidget_EventUpdateHealth_Params params;
	params.healthNormalized = healthNormalized;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateDangerZone
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 zoneName                       (Parm, ZeroConstructor)
// int                            timeLeft                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateDangerZone(const struct FString& zoneName, int timeLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateDangerZone");

	UDarwinCharacterWidget_EventUpdateDangerZone_Params params;
	params.zoneName = zoneName;
	params.timeLeft = timeLeft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateCraftableItemIcons
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateCraftableItemIcons(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateCraftableItemIcons");

	UDarwinCharacterWidget_EventUpdateCraftableItemIcons_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateColdFactor
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          coldFactorNormalized           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateColdFactor(float coldFactorNormalized)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateColdFactor");

	UDarwinCharacterWidget_EventUpdateColdFactor_Params params;
	params.coldFactorNormalized = coldFactorNormalized;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateCoatType
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            coatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            MaxLevel                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateCoatType(EDarwinItemTypeEnum coatType, int MaxLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateCoatType");

	UDarwinCharacterWidget_EventUpdateCoatType_Params params;
	params.coatType = coatType;
	params.MaxLevel = MaxLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateCoatLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            coatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateCoatLevel(EDarwinItemTypeEnum coatType, int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateCoatLevel");

	UDarwinCharacterWidget_EventUpdateCoatLevel_Params params;
	params.coatType = coatType;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateClueTargetLocation
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 woldLoc                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            targetCharacterID              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateClueTargetLocation(const struct FVector2D& Loc, const struct FVector& woldLoc, float Yaw, int targetCharacterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateClueTargetLocation");

	UDarwinCharacterWidget_EventUpdateClueTargetLocation_Params params;
	params.Loc = Loc;
	params.woldLoc = woldLoc;
	params.Yaw = Yaw;
	params.targetCharacterID = targetCharacterID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateCharacterLocation
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateCharacterLocation(const struct FVector2D& Loc, float Yaw)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateCharacterLocation");

	UDarwinCharacterWidget_EventUpdateCharacterLocation_Params params;
	params.Loc = Loc;
	params.Yaw = Yaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateButtons
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventUpdateButtons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateButtons");

	UDarwinCharacterWidget_EventUpdateButtons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateBootType
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            bootType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            MaxLevel                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateBootType(EDarwinItemTypeEnum bootType, int MaxLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateBootType");

	UDarwinCharacterWidget_EventUpdateBootType_Params params;
	params.bootType = bootType;
	params.MaxLevel = MaxLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateBootLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            bootType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateBootLevel(EDarwinItemTypeEnum bootType, int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateBootLevel");

	UDarwinCharacterWidget_EventUpdateBootLevel_Params params;
	params.bootType = bootType;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateArmorLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateArmorLevel(int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateArmorLevel");

	UDarwinCharacterWidget_EventUpdateArmorLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUpdateAllianceLocation
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               worldLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllyIsDead                    (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUpdateAllianceLocation(const struct FVector2D& Loc, const struct FVector2D& worldLoc, float Yaw, bool bAllyIsDead)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUpdateAllianceLocation");

	UDarwinCharacterWidget_EventUpdateAllianceLocation_Params params;
	params.Loc = Loc;
	params.worldLoc = worldLoc;
	params.Yaw = Yaw;
	params.bAllyIsDead = bAllyIsDead;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventUnHoveredQuadrant
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventUnHoveredQuadrant(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventUnHoveredQuadrant");

	UDarwinCharacterWidget_EventUnHoveredQuadrant_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventTeleportReady
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventTeleportReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventTeleportReady");

	UDarwinCharacterWidget_EventTeleportReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventTeleportCooldownStart
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventTeleportCooldownStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventTeleportCooldownStart");

	UDarwinCharacterWidget_EventTeleportCooldownStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventTeleportAlmostReady
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventTeleportAlmostReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventTeleportAlmostReady");

	UDarwinCharacterWidget_EventTeleportAlmostReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventTeleportAimStart
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventTeleportAimStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventTeleportAimStart");

	UDarwinCharacterWidget_EventTeleportAimStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventTeleportAimEnd
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventTeleportAimEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventTeleportAimEnd");

	UDarwinCharacterWidget_EventTeleportAimEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventStartFollowedByShowDirector
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventStartFollowedByShowDirector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventStartFollowedByShowDirector");

	UDarwinCharacterWidget_EventStartFollowedByShowDirector_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventStamPackConsumed
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            stamAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventStamPackConsumed(int stamAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventStamPackConsumed");

	UDarwinCharacterWidget_EventStamPackConsumed_Params params;
	params.stamAmount = stamAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventSpeedPackConsumed
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            speedBoostTime                 (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventSpeedPackConsumed(int speedBoostTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventSpeedPackConsumed");

	UDarwinCharacterWidget_EventSpeedPackConsumed_Params params;
	params.speedBoostTime = speedBoostTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventShootSuccess
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventShootSuccess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventShootSuccess");

	UDarwinCharacterWidget_EventShootSuccess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventShootFail
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventShootFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventShootFail");

	UDarwinCharacterWidget_EventShootFail_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventSetPlayerName
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 playerName                     (Parm, ZeroConstructor)

void UDarwinCharacterWidget::EventSetPlayerName(const struct FString& playerName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventSetPlayerName");

	UDarwinCharacterWidget_EventSetPlayerName_Params params;
	params.playerName = playerName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventRequestRemapInventoryItem
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventRequestRemapInventoryItem(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventRequestRemapInventoryItem");

	UDarwinCharacterWidget_EventRequestRemapInventoryItem_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventReloadStart
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventReloadStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventReloadStart");

	UDarwinCharacterWidget_EventReloadStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventReloadEnd
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventReloadEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventReloadEnd");

	UDarwinCharacterWidget_EventReloadEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventPressedQuadrant
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventPressedQuadrant(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventPressedQuadrant");

	UDarwinCharacterWidget_EventPressedQuadrant_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventPredatorPulse
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 worldLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinCharacterWidget::EventPredatorPulse(const struct FVector2D& Loc, const struct FVector& worldLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventPredatorPulse");

	UDarwinCharacterWidget_EventPredatorPulse_Params params;
	params.Loc = Loc;
	params.worldLoc = worldLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventPredatorPing
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// int                            targetCharacterID              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 worldLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinCharacterWidget::EventPredatorPing(int targetCharacterID, const struct FVector2D& Loc, const struct FVector& worldLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventPredatorPing");

	UDarwinCharacterWidget_EventPredatorPing_Params params;
	params.targetCharacterID = targetCharacterID;
	params.Loc = Loc;
	params.worldLoc = worldLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventPowerReady
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventPowerReady(EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventPowerReady");

	UDarwinCharacterWidget_EventPowerReady_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventPowerOn
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventPowerOn(EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventPowerOn");

	UDarwinCharacterWidget_EventPowerOn_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventPowerOff
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventPowerOff(EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventPowerOff");

	UDarwinCharacterWidget_EventPowerOff_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventPowerCooldownStart
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventPowerCooldownStart(EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventPowerCooldownStart");

	UDarwinCharacterWidget_EventPowerCooldownStart_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventPowerAlmostReady
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventPowerAlmostReady(EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventPowerAlmostReady");

	UDarwinCharacterWidget_EventPowerAlmostReady_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventPoopStart
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            targetDeerID                   (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventPoopStart(int targetDeerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventPoopStart");

	UDarwinCharacterWidget_EventPoopStart_Params params;
	params.targetDeerID = targetDeerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventPoopEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            targetDeerID                   (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventPoopEnd(int targetDeerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventPoopEnd");

	UDarwinCharacterWidget_EventPoopEnd_Params params;
	params.targetDeerID = targetDeerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventNumberOfGamesPlayed
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            nbGamesPlayed                  (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventNumberOfGamesPlayed(int nbGamesPlayed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventNumberOfGamesPlayed");

	UDarwinCharacterWidget_EventNumberOfGamesPlayed_Params params;
	params.nbGamesPlayed = nbGamesPlayed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventNoHighlightedShot
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventNoHighlightedShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventNoHighlightedShot");

	UDarwinCharacterWidget_EventNoHighlightedShot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventNewWheelventoryMode
// (Event, Public, BlueprintEvent)
// Parameters:
// EWheelventoryMode              newMode                        (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventNewWheelventoryMode(EWheelventoryMode newMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventNewWheelventoryMode");

	UDarwinCharacterWidget_EventNewWheelventoryMode_Params params;
	params.newMode = newMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventNewLoot
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventNewLoot(EDarwinItemTypeEnum Type, int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventNewLoot");

	UDarwinCharacterWidget_EventNewLoot_Params params;
	params.Type = Type;
	params.Number = Number;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventNewClueInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 Time                           (Parm, ZeroConstructor)
// struct FString                 playerName                     (Parm, ZeroConstructor)
// EDarwinItemTypeEnum            clueType                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventNewClueInfo(const struct FString& Time, const struct FString& playerName, EDarwinItemTypeEnum clueType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventNewClueInfo");

	UDarwinCharacterWidget_EventNewClueInfo_Params params;
	params.Time = Time;
	params.playerName = playerName;
	params.clueType = clueType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventMalusBonusStart
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventMalusBonusStart(EDarwinItemTypeEnum Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventMalusBonusStart");

	UDarwinCharacterWidget_EventMalusBonusStart_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventMalusBonusEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventMalusBonusEnd(EDarwinItemTypeEnum Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventMalusBonusEnd");

	UDarwinCharacterWidget_EventMalusBonusEnd_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventLootActionStart
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventLootActionStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventLootActionStart");

	UDarwinCharacterWidget_EventLootActionStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventLootActionEnd
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventLootActionEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventLootActionEnd");

	UDarwinCharacterWidget_EventLootActionEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventLootActionCancel
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventLootActionCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventLootActionCancel");

	UDarwinCharacterWidget_EventLootActionCancel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventLeaveLocalFollowCam
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventLeaveLocalFollowCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventLeaveLocalFollowCam");

	UDarwinCharacterWidget_EventLeaveLocalFollowCam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventKillVampireHeal
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          healAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventKillVampireHeal(float healAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventKillVampireHeal");

	UDarwinCharacterWidget_EventKillVampireHeal_Params params;
	params.healAmount = healAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventJustPressedGamepadA
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventJustPressedGamepadA()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventJustPressedGamepadA");

	UDarwinCharacterWidget_EventJustPressedGamepadA_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventJustPressedE
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventJustPressedE()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventJustPressedE");

	UDarwinCharacterWidget_EventJustPressedE_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventIsWinner
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventIsWinner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventIsWinner");

	UDarwinCharacterWidget_EventIsWinner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventIsOutOfBreathStop
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventIsOutOfBreathStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventIsOutOfBreathStop");

	UDarwinCharacterWidget_EventIsOutOfBreathStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventIsOutOfBreathStart
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventIsOutOfBreathStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventIsOutOfBreathStart");

	UDarwinCharacterWidget_EventIsOutOfBreathStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventIsLooted
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventIsLooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventIsLooted");

	UDarwinCharacterWidget_EventIsLooted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventIsDead
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            PodiumRank                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           firstDeath                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventIsDead(int PodiumRank, bool firstDeath)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventIsDead");

	UDarwinCharacterWidget_EventIsDead_Params params;
	params.PodiumRank = PodiumRank;
	params.firstDeath = firstDeath;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventIsCrafting
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          progress                       (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            enum_type                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFinished                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            craftingIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventIsCrafting(float progress, EDarwinItemTypeEnum enum_type, bool bFinished, int craftingIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventIsCrafting");

	UDarwinCharacterWidget_EventIsCrafting_Params params;
	params.progress = progress;
	params.enum_type = enum_type;
	params.bFinished = bFinished;
	params.craftingIndex = craftingIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventInventorySlotChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventInventorySlotChanged(int Index, EDarwinItemTypeEnum Type, int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventInventorySlotChanged");

	UDarwinCharacterWidget_EventInventorySlotChanged_Params params;
	params.Index = Index;
	params.Type = Type;
	params.Number = Number;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventInventoryActionFail
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventInventoryActionFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventInventoryActionFail");

	UDarwinCharacterWidget_EventInventoryActionFail_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventInAirStart
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventInAirStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventInAirStart");

	UDarwinCharacterWidget_EventInAirStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventInAirEnd
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventInAirEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventInAirEnd");

	UDarwinCharacterWidget_EventInAirEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventHoveredQuadrant
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventHoveredQuadrant(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventHoveredQuadrant");

	UDarwinCharacterWidget_EventHoveredQuadrant_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventHitBigTree
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventHitBigTree()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventHitBigTree");

	UDarwinCharacterWidget_EventHitBigTree_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventHitAlly
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventHitAlly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventHitAlly");

	UDarwinCharacterWidget_EventHitAlly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventHighlightedShotPossible
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventHighlightedShotPossible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventHighlightedShotPossible");

	UDarwinCharacterWidget_EventHighlightedShotPossible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventHealthPackConsumed
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            healAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventHealthPackConsumed(int healAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventHealthPackConsumed");

	UDarwinCharacterWidget_EventHealthPackConsumed_Params params;
	params.healAmount = healAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventGamepadInventoryUse
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventGamepadInventoryUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventGamepadInventoryUse");

	UDarwinCharacterWidget_EventGamepadInventoryUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventGamepadInventoryRemapUp
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventGamepadInventoryRemapUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventGamepadInventoryRemapUp");

	UDarwinCharacterWidget_EventGamepadInventoryRemapUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventGamepadInventoryRemapRight
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventGamepadInventoryRemapRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventGamepadInventoryRemapRight");

	UDarwinCharacterWidget_EventGamepadInventoryRemapRight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventGamepadInventoryRemapLeft
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventGamepadInventoryRemapLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventGamepadInventoryRemapLeft");

	UDarwinCharacterWidget_EventGamepadInventoryRemapLeft_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventGamepadInventoryRemapDown
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventGamepadInventoryRemapDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventGamepadInventoryRemapDown");

	UDarwinCharacterWidget_EventGamepadInventoryRemapDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventGamepadInventoryReleased
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventGamepadInventoryReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventGamepadInventoryReleased");

	UDarwinCharacterWidget_EventGamepadInventoryReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventGamepadInventoryPressed
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventGamepadInventoryPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventGamepadInventoryPressed");

	UDarwinCharacterWidget_EventGamepadInventoryPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventGamepadInventoryMoveRight
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventGamepadInventoryMoveRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventGamepadInventoryMoveRight");

	UDarwinCharacterWidget_EventGamepadInventoryMoveRight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventGamepadInventoryMoveLeft
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventGamepadInventoryMoveLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventGamepadInventoryMoveLeft");

	UDarwinCharacterWidget_EventGamepadInventoryMoveLeft_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventFriendlyCraftableToolMinimapStart
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 worldLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class ADarwinCraftableTool*    tool                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllyTool                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventFriendlyCraftableToolMinimapStart(const struct FVector2D& Loc, const struct FVector& worldLoc, class ADarwinCraftableTool* tool, bool bAllyTool)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventFriendlyCraftableToolMinimapStart");

	UDarwinCharacterWidget_EventFriendlyCraftableToolMinimapStart_Params params;
	params.Loc = Loc;
	params.worldLoc = worldLoc;
	params.tool = tool;
	params.bAllyTool = bAllyTool;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventFriendlyCraftableToolMinimapEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCraftableTool*    tool                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventFriendlyCraftableToolMinimapEnd(class ADarwinCraftableTool* tool)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventFriendlyCraftableToolMinimapEnd");

	UDarwinCharacterWidget_EventFriendlyCraftableToolMinimapEnd_Params params;
	params.tool = tool;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventExitedNuclearZone
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventExitedNuclearZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventExitedNuclearZone");

	UDarwinCharacterWidget_EventExitedNuclearZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventExitedDangerZone
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventExitedDangerZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventExitedDangerZone");

	UDarwinCharacterWidget_EventExitedDangerZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventEnterLocalFollowCam
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventEnterLocalFollowCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventEnterLocalFollowCam");

	UDarwinCharacterWidget_EventEnterLocalFollowCam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventEnteredNuclearZone
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventEnteredNuclearZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventEnteredNuclearZone");

	UDarwinCharacterWidget_EventEnteredNuclearZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventEnteredDangerZone
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventEnteredDangerZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventEnteredDangerZone");

	UDarwinCharacterWidget_EventEnteredDangerZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventEndFollowedByShowDirector
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventEndFollowedByShowDirector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventEndFollowedByShowDirector");

	UDarwinCharacterWidget_EventEndFollowedByShowDirector_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventCraftWheelOpen
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventCraftWheelOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventCraftWheelOpen");

	UDarwinCharacterWidget_EventCraftWheelOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventCraftWheelClose
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventCraftWheelClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventCraftWheelClose");

	UDarwinCharacterWidget_EventCraftWheelClose_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventCraftingCanceled
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventCraftingCanceled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventCraftingCanceled");

	UDarwinCharacterWidget_EventCraftingCanceled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventClueStart
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            targetCharacterID              (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            clueType                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventClueStart(int targetCharacterID, EDarwinItemTypeEnum clueType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventClueStart");

	UDarwinCharacterWidget_EventClueStart_Params params;
	params.targetCharacterID = targetCharacterID;
	params.clueType = clueType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventClueNinjaVanish
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventClueNinjaVanish()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventClueNinjaVanish");

	UDarwinCharacterWidget_EventClueNinjaVanish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventClueEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            targetCharacterID              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventClueEnd(int targetCharacterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventClueEnd");

	UDarwinCharacterWidget_EventClueEnd_Params params;
	params.targetCharacterID = targetCharacterID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventClearInventorySlot
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventClearInventorySlot(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventClearInventorySlot");

	UDarwinCharacterWidget_EventClearInventorySlot_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventCannotSendAllyFlagInLobby
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventCannotSendAllyFlagInLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventCannotSendAllyFlagInLobby");

	UDarwinCharacterWidget_EventCannotSendAllyFlagInLobby_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventCannotCraftInLobby
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventCannotCraftInLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventCannotCraftInLobby");

	UDarwinCharacterWidget_EventCannotCraftInLobby_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventCageHit
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          oldHPnormalized                (Parm, ZeroConstructor, IsPlainOldData)
// float                          newHPnormalized                (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCage*             Cage                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventCageHit(float oldHPnormalized, float newHPnormalized, class ADarwinCage* Cage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventCageHit");

	UDarwinCharacterWidget_EventCageHit_Params params;
	params.oldHPnormalized = oldHPnormalized;
	params.newHPnormalized = newHPnormalized;
	params.Cage = Cage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventCageDestro
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCage*             Cage                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventCageDestro(class ADarwinCage* Cage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventCageDestro");

	UDarwinCharacterWidget_EventCageDestro_Params params;
	params.Cage = Cage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventBloodPactDeadHeartbeat
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventBloodPactDeadHeartbeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventBloodPactDeadHeartbeat");

	UDarwinCharacterWidget_EventBloodPactDeadHeartbeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventBeingDetected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bOutBeingDetected              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventBeingDetected(bool bOutBeingDetected)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventBeingDetected");

	UDarwinCharacterWidget_EventBeingDetected_Params params;
	params.bOutBeingDetected = bOutBeingDetected;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventAllianceStart
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            allyID                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventAllianceStart(int allyID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventAllianceStart");

	UDarwinCharacterWidget_EventAllianceStart_Params params;
	params.allyID = allyID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventAllianceEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            allyID                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventAllianceEnd(int allyID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventAllianceEnd");

	UDarwinCharacterWidget_EventAllianceEnd_Params params;
	params.allyID = allyID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventAimStart
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventAimStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventAimStart");

	UDarwinCharacterWidget_EventAimStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventAimLockTarget
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float                          progress                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasTarget                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinCharacterWidget::EventAimLockTarget(float progress, bool bHasTarget, const struct FVector2D& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventAimLockTarget");

	UDarwinCharacterWidget_EventAimLockTarget_Params params;
	params.progress = progress;
	params.bHasTarget = bHasTarget;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventAimFull
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventAimFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventAimFull");

	UDarwinCharacterWidget_EventAimFull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventAimEnd
// (Event, Public, BlueprintEvent)

void UDarwinCharacterWidget::EventAimEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventAimEnd");

	UDarwinCharacterWidget_EventAimEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.EventAimCharge
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterWidget::EventAimCharge(float progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.EventAimCharge");

	UDarwinCharacterWidget_EventAimCharge_Params params;
	params.progress = progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterWidget.DarwinPlayerAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinCharacterWidget::DarwinPlayerAction(EDarwinItemTypeEnum Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.DarwinPlayerAction");

	UDarwinCharacterWidget_DarwinPlayerAction_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.CraftItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            enum_type                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinCharacterWidget::CraftItem(EDarwinItemTypeEnum enum_type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.CraftItem");

	UDarwinCharacterWidget_CraftItem_Params params;
	params.enum_type = enum_type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterWidget.CanCraftItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            enum_type                      (Parm, ZeroConstructor, IsPlainOldData)
// ECraftStatusEnum               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECraftStatusEnum UDarwinCharacterWidget::CanCraftItem(EDarwinItemTypeEnum enum_type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterWidget.CanCraftItem");

	UDarwinCharacterWidget_CanCraftItem_Params params;
	params.enum_type = enum_type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterDebugWidget.EventUpdateRunBlendValues
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          frontBack                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          leftRight                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          upper                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          offbalance                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          uphill                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          downhill                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          velSq                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterDebugWidget::EventUpdateRunBlendValues(float frontBack, float leftRight, float upper, float offbalance, float uphill, float downhill, float velSq)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterDebugWidget.EventUpdateRunBlendValues");

	UDarwinCharacterDebugWidget_EventUpdateRunBlendValues_Params params;
	params.frontBack = frontBack;
	params.leftRight = leftRight;
	params.upper = upper;
	params.offbalance = offbalance;
	params.uphill = uphill;
	params.downhill = downhill;
	params.velSq = velSq;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterDebugWidget.EventUpdateInventory
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TMap<EDarwinItemTypeEnum, int> CurrentLoadoutMap              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UDarwinCharacterDebugWidget::EventUpdateInventory(TMap<EDarwinItemTypeEnum, int> CurrentLoadoutMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterDebugWidget.EventUpdateInventory");

	UDarwinCharacterDebugWidget_EventUpdateInventory_Params params;
	params.CurrentLoadoutMap = CurrentLoadoutMap;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterDebugWidget.EventUpdateCharacterInfo
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                rot                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ping                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 net_id                         (Parm, ZeroConstructor)
// struct FString                 playerName                     (Parm, ZeroConstructor)
// int                            nb_games_played                (Parm, ZeroConstructor, IsPlainOldData)
// float                          fps                            (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterDebugWidget::EventUpdateCharacterInfo(const struct FVector& Loc, const struct FRotator& rot, float ping, const struct FString& net_id, const struct FString& playerName, int nb_games_played, float fps)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterDebugWidget.EventUpdateCharacterInfo");

	UDarwinCharacterDebugWidget_EventUpdateCharacterInfo_Params params;
	params.Loc = Loc;
	params.rot = rot;
	params.ping = ping;
	params.net_id = net_id;
	params.playerName = playerName;
	params.nb_games_played = nb_games_played;
	params.fps = fps;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.UpdateVisibilty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::UpdateVisibilty(bool visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.UpdateVisibilty");

	ADarwinCharacterModel_UpdateVisibilty_Params params;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.UpdateSkeletalMesh
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacterModel::UpdateSkeletalMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.UpdateSkeletalMesh");

	ADarwinCharacterModel_UpdateSkeletalMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.UpdateRenderCustomDepth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::UpdateRenderCustomDepth(bool visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.UpdateRenderCustomDepth");

	ADarwinCharacterModel_UpdateRenderCustomDepth_Params params;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.UpdateOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Opacity                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::UpdateOpacity(float Opacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.UpdateOpacity");

	ADarwinCharacterModel_UpdateOpacity_Params params;
	params.Opacity = Opacity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.UpdateCustomDepthStencilValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            stencil_value                  (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::UpdateCustomDepthStencilValue(int stencil_value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.UpdateCustomDepthStencilValue");

	ADarwinCharacterModel_UpdateCustomDepthStencilValue_Params params;
	params.stencil_value = stencil_value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.UpdateAllIndexes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            shirt_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            shirt_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            pants_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            pants_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            skin_skel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            skin_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            armor_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            Armor_Mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            boots_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            boots_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            coat_skel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            coat_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            axe_skel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            axe_mat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            bow_skel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            bow_mat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            helmet_skel                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            helmet_mat                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            eyes_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            hairs_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            hairs_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            beard_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            beard_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            face_paint                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::UpdateAllIndexes(int shirt_skel, int shirt_mat, int pants_skel, int pants_mat, int skin_skel, int skin_mat, int armor_skel, int Armor_Mat, int boots_skel, int boots_mat, int coat_skel, int coat_mat, int axe_skel, int axe_mat, int bow_skel, int bow_mat, int helmet_skel, int helmet_mat, int eyes_mat, int hairs_skel, int hairs_mat, int beard_skel, int beard_mat, int face_paint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.UpdateAllIndexes");

	ADarwinCharacterModel_UpdateAllIndexes_Params params;
	params.shirt_skel = shirt_skel;
	params.shirt_mat = shirt_mat;
	params.pants_skel = pants_skel;
	params.pants_mat = pants_mat;
	params.skin_skel = skin_skel;
	params.skin_mat = skin_mat;
	params.armor_skel = armor_skel;
	params.Armor_Mat = Armor_Mat;
	params.boots_skel = boots_skel;
	params.boots_mat = boots_mat;
	params.coat_skel = coat_skel;
	params.coat_mat = coat_mat;
	params.axe_skel = axe_skel;
	params.axe_mat = axe_mat;
	params.bow_skel = bow_skel;
	params.bow_mat = bow_mat;
	params.helmet_skel = helmet_skel;
	params.helmet_mat = helmet_mat;
	params.eyes_mat = eyes_mat;
	params.hairs_skel = hairs_skel;
	params.hairs_mat = hairs_mat;
	params.beard_skel = beard_skel;
	params.beard_mat = beard_mat;
	params.face_paint = face_paint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.SwapCoat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bWithArmor                     (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::SwapCoat(bool bWithArmor, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.SwapCoat");

	ADarwinCharacterModel_SwapCoat_Params params;
	params.bWithArmor = bWithArmor;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.SwapBootsAndPants
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bUseBigBootsAndShortPants      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::SwapBootsAndPants(bool bUseBigBootsAndShortPants, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.SwapBootsAndPants");

	ADarwinCharacterModel_SwapBootsAndPants_Params params;
	params.bUseBigBootsAndShortPants = bUseBigBootsAndShortPants;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ShowCraftables
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ShowCraftables(class USkeletalMeshComponent* master_mesh, bool visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ShowCraftables");

	ADarwinCharacterModel_ShowCraftables_Params params;
	params.master_mesh = master_mesh;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ShowCoat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ShowCoat(bool visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ShowCoat");

	ADarwinCharacterModel_ShowCoat_Params params;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ShowBow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ShowBow(bool visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ShowBow");

	ADarwinCharacterModel_ShowBow_Params params;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ShowAxe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ShowAxe(bool visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ShowAxe");

	ADarwinCharacterModel_ShowAxe_Params params;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ShowArrow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ShowArrow(bool visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ShowArrow");

	ADarwinCharacterModel_ShowArrow_Params params;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ShowArmor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ShowArmor(bool visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ShowArmor");

	ADarwinCharacterModel_ShowArmor_Params params;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.SetGlassMaterial
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacterModel::SetGlassMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.SetGlassMaterial");

	ADarwinCharacterModel_SetGlassMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.SetCamouflageMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic* material_inst_dyn              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::SetCamouflageMaterial(class UMaterialInstanceDynamic* material_inst_dyn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.SetCamouflageMaterial");

	ADarwinCharacterModel_SetCamouflageMaterial_Params params;
	params.material_inst_dyn = material_inst_dyn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.SaveCustomizationSavedData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerBodyType                BodyType                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::SaveCustomizationSavedData(EPlayerBodyType BodyType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.SaveCustomizationSavedData");

	ADarwinCharacterModel_SaveCustomizationSavedData_Params params;
	params.BodyType = BodyType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ResetMaterials
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacterModel::ResetMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ResetMaterials");

	ADarwinCharacterModel_ResetMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ResetAllSkeletalMeshes
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacterModel::ResetAllSkeletalMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ResetAllSkeletalMeshes");

	ADarwinCharacterModel_ResetAllSkeletalMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.RemovePouch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerPouchType               pouch_type                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::RemovePouch(EPlayerPouchType pouch_type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.RemovePouch");

	ADarwinCharacterModel_RemovePouch_Params params;
	params.pouch_type = pouch_type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.OnRepSuitVersionIndex
// (Final, Native, Public, BlueprintCallable)

void ADarwinCharacterModel::OnRepSuitVersionIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.OnRepSuitVersionIndex");

	ADarwinCharacterModel_OnRepSuitVersionIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.LoadCustomizationSavedData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerBodyType                BodyType                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::LoadCustomizationSavedData(EPlayerBodyType BodyType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.LoadCustomizationSavedData");

	ADarwinCharacterModel_LoadCustomizationSavedData_Params params;
	params.BodyType = BodyType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.InitRandomSkelMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FDarwinRandomModelDesc  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDarwinRandomModelDesc ADarwinCharacterModel::InitRandomSkelMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.InitRandomSkelMesh");

	ADarwinCharacterModel_InitRandomSkelMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterModel.InitLootItemSkelMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            lootIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FDarwinRandomModelDesc  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDarwinRandomModelDesc ADarwinCharacterModel::InitLootItemSkelMesh(int lootIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.InitLootItemSkelMesh");

	ADarwinCharacterModel_InitLootItemSkelMesh_Params params;
	params.lootIndex = lootIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCharacterModel.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADarwinCharacter*        model_owner                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsAPlayer                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::Initialize(class ADarwinCharacter* model_owner, bool bIsAPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.Initialize");

	ADarwinCharacterModel_Initialize_Params params;
	params.model_owner = model_owner;
	params.bIsAPlayer = bIsAPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.InitAllSkeletalMeshComponents
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 relative_location              (Parm, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::InitAllSkeletalMeshComponents(class USkeletalMeshComponent* master_mesh, const struct FVector& relative_location, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.InitAllSkeletalMeshComponents");

	ADarwinCharacterModel_InitAllSkeletalMeshComponents_Params params;
	params.master_mesh = master_mesh;
	params.relative_location = relative_location;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.CheckSkinVisibility
// (Final, Native, Public)

void ADarwinCharacterModel::CheckSkinVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.CheckSkinVisibility");

	ADarwinCharacterModel_CheckSkinVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplySkin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            SkinSkel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SkinMat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            EyesMat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            FacePaint                      (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplySkin(int SkinSkel, int SkinMat, int EyesMat, int FacePaint, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplySkin");

	ADarwinCharacterModel_ApplySkin_Params params;
	params.SkinSkel = SkinSkel;
	params.SkinMat = SkinMat;
	params.EyesMat = EyesMat;
	params.FacePaint = FacePaint;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplyShirt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ShirtSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ShirtMat                       (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplyShirt(int ShirtSkel, int ShirtMat, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplyShirt");

	ADarwinCharacterModel_ApplyShirt_Params params;
	params.ShirtSkel = ShirtSkel;
	params.ShirtMat = ShirtMat;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplyPants
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PantsSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            PantsMat                       (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplyPants(int PantsSkel, int PantsMat, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplyPants");

	ADarwinCharacterModel_ApplyPants_Params params;
	params.PantsSkel = PantsSkel;
	params.PantsMat = PantsMat;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplyHelmet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            HelmetSkel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            HelmetMat                      (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplyHelmet(int HelmetSkel, int HelmetMat, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplyHelmet");

	ADarwinCharacterModel_ApplyHelmet_Params params;
	params.HelmetSkel = HelmetSkel;
	params.HelmetMat = HelmetMat;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplyHairs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            HairsSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            HairsMat                       (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplyHairs(int HairsSkel, int HairsMat, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplyHairs");

	ADarwinCharacterModel_ApplyHairs_Params params;
	params.HairsSkel = HairsSkel;
	params.HairsMat = HairsMat;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplyCoat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            CoatSkel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            CoatMat                        (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplyCoat(int CoatSkel, int CoatMat, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplyCoat");

	ADarwinCharacterModel_ApplyCoat_Params params;
	params.CoatSkel = CoatSkel;
	params.CoatMat = CoatMat;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplyBow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            BowSkel                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            BowMat                         (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplyBow(int BowSkel, int BowMat, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplyBow");

	ADarwinCharacterModel_ApplyBow_Params params;
	params.BowSkel = BowSkel;
	params.BowMat = BowMat;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplyBoots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            BootsSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            BootsMat                       (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplyBoots(int BootsSkel, int BootsMat, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplyBoots");

	ADarwinCharacterModel_ApplyBoots_Params params;
	params.BootsSkel = BootsSkel;
	params.BootsMat = BootsMat;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplyBeard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            BeardSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            BeardMat                       (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplyBeard(int BeardSkel, int BeardMat, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplyBeard");

	ADarwinCharacterModel_ApplyBeard_Params params;
	params.BeardSkel = BeardSkel;
	params.BeardMat = BeardMat;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplyAxe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            AxeSkel                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            AxeMat                         (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplyAxe(int AxeSkel, int AxeMat, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplyAxe");

	ADarwinCharacterModel_ApplyAxe_Params params;
	params.AxeSkel = AxeSkel;
	params.AxeMat = AxeMat;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplyArrow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplyArrow(class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplyArrow");

	ADarwinCharacterModel_ApplyArrow_Params params;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.ApplyArmor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ArmorSkel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ArmorMat                       (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::ApplyArmor(int ArmorSkel, int ArmorMat, class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.ApplyArmor");

	ADarwinCharacterModel_ApplyArmor_Params params;
	params.ArmorSkel = ArmorSkel;
	params.ArmorMat = ArmorMat;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.AddPouch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerPouchType               pouch_type                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::AddPouch(EPlayerPouchType pouch_type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.AddPouch");

	ADarwinCharacterModel_AddPouch_Params params;
	params.pouch_type = pouch_type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterModel.AdaptToPassives
// (Final, Native, Public)
// Parameters:
// class USkeletalMeshComponent*  master_mesh                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldReplicated              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinCharacterModel::AdaptToPassives(class USkeletalMeshComponent* master_mesh, bool bShouldReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterModel.AdaptToPassives");

	ADarwinCharacterModel_AdaptToPassives_Params params;
	params.master_mesh = master_mesh;
	params.bShouldReplicated = bShouldReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterMovementComponent.ServerJumpThroughWindow
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 in_jumping_start_position      (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// class ADarwinWindow*           in_window                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterMovementComponent::ServerJumpThroughWindow(const struct FVector& in_jumping_start_position, class ADarwinWindow* in_window)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterMovementComponent.ServerJumpThroughWindow");

	UDarwinCharacterMovementComponent_ServerJumpThroughWindow_Params params;
	params.in_jumping_start_position = in_jumping_start_position;
	params.in_window = in_window;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCharacterMovementComponent.NetmulticastSetJumpThroughWindow
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCharacterMovementComponent::NetmulticastSetJumpThroughWindow(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCharacterMovementComponent.NetmulticastSetJumpThroughWindow");

	UDarwinCharacterMovementComponent_NetmulticastSetJumpThroughWindow_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinClue.NetMulticastSetTargetCharacter
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        targetCharacter                (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinClue::NetMulticastSetTargetCharacter(class ADarwinCharacter* targetCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinClue.NetMulticastSetTargetCharacter");

	ADarwinClue_NetMulticastSetTargetCharacter_Params params;
	params.targetCharacter = targetCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinClue.NetMulticastHideClue
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinClue::NetMulticastHideClue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinClue.NetMulticastHideClue");

	ADarwinClue_NetMulticastHideClue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinClue.HighlightClue
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            stencil_value                  (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinClue::HighlightClue(bool enable, int stencil_value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinClue.HighlightClue");

	ADarwinClue_HighlightClue_Params params;
	params.enable = enable;
	params.stencil_value = stencil_value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinClue.EventShowOutline
// (Event, Public, BlueprintEvent)

void ADarwinClue::EventShowOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinClue.EventShowOutline");

	ADarwinClue_EventShowOutline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinClue.EventHideOutline
// (Event, Public, BlueprintEvent)

void ADarwinClue::EventHideOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinClue.EventHideOutline");

	ADarwinClue_EventHideOutline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinClue.EventHide
// (Event, Public, BlueprintEvent)

void ADarwinClue::EventHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinClue.EventHide");

	ADarwinClue_EventHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinColdFactorComponent.ServerPastaWarmUp
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          warmFactor                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinColdFactorComponent::ServerPastaWarmUp(float DeltaTime, float warmFactor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinColdFactorComponent.ServerPastaWarmUp");

	UDarwinColdFactorComponent_ServerPastaWarmUp_Params params;
	params.DeltaTime = DeltaTime;
	params.warmFactor = warmFactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinColdFactorComponent.PastaWarmUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          warmFactor                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinColdFactorComponent::PastaWarmUp(float DeltaTime, float warmFactor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinColdFactorComponent.PastaWarmUp");

	UDarwinColdFactorComponent_PastaWarmUp_Params params;
	params.DeltaTime = DeltaTime;
	params.warmFactor = warmFactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinColdFactorComponent.NetMulticastWarmUp
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinColdFactorComponent::NetMulticastWarmUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinColdFactorComponent.NetMulticastWarmUp");

	UDarwinColdFactorComponent_NetMulticastWarmUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinColdFactorComponent.NetMulticastColdDOT
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                          coldDmg                        (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinColdFactorComponent::NetMulticastColdDOT(float coldDmg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinColdFactorComponent.NetMulticastColdDOT");

	UDarwinColdFactorComponent_NetMulticastColdDOT_Params params;
	params.coldDmg = coldDmg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinColdFactorComponent.EventUpdateColdFactor
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          currentColdFactor              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinColdFactorComponent::EventUpdateColdFactor(float currentColdFactor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinColdFactorComponent.EventUpdateColdFactor");

	UDarwinColdFactorComponent_EventUpdateColdFactor_Params params;
	params.currentColdFactor = currentColdFactor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinColdFactorComponent.EventLocalBelow25Percent
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinColdFactorComponent::EventLocalBelow25Percent(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinColdFactorComponent.EventLocalBelow25Percent");

	UDarwinColdFactorComponent_EventLocalBelow25Percent_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinColdFactorComponent.EventLocalBelow10Percent
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinColdFactorComponent::EventLocalBelow10Percent(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinColdFactorComponent.EventLocalBelow10Percent");

	UDarwinColdFactorComponent_EventLocalBelow10Percent_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinColdFactorComponent.EventLocalAbove25Percent
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinColdFactorComponent::EventLocalAbove25Percent(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinColdFactorComponent.EventLocalAbove25Percent");

	UDarwinColdFactorComponent_EventLocalAbove25Percent_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinColdFactorComponent.EventLocalAbove10Percent
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinColdFactorComponent::EventLocalAbove10Percent(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinColdFactorComponent.EventLocalAbove10Percent");

	UDarwinColdFactorComponent_EventLocalAbove10Percent_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.ServerSetContextualActionFalse
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinContextualActionComponent::ServerSetContextualActionFalse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.ServerSetContextualActionFalse");

	UDarwinContextualActionComponent_ServerSetContextualActionFalse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.ServerRequestContextualAction
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                  targetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::ServerRequestContextualAction(class AActor* targetActor, float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.ServerRequestContextualAction");

	UDarwinContextualActionComponent_ServerRequestContextualAction_Params params;
	params.targetActor = targetActor;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.ServerPickupInstants
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinContextualActionComponent::ServerPickupInstants()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.ServerPickupInstants");

	UDarwinContextualActionComponent_ServerPickupInstants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.ServerContextualAction
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinContextualActionComponent::ServerContextualAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.ServerContextualAction");

	UDarwinContextualActionComponent_ServerContextualAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.NetMulticastSetContextualActionFalse
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinContextualActionComponent::NetMulticastSetContextualActionFalse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.NetMulticastSetContextualActionFalse");

	UDarwinContextualActionComponent_NetMulticastSetContextualActionFalse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.NetMulticastRequestContextualAction
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AActor*                  targetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::NetMulticastRequestContextualAction(class AActor* targetActor, float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.NetMulticastRequestContextualAction");

	UDarwinContextualActionComponent_NetMulticastRequestContextualAction_Params params;
	params.targetActor = targetActor;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.NetMulticastPickUpProjectile
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinProjectile*       projectile                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::NetMulticastPickUpProjectile(class ADarwinProjectile* projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.NetMulticastPickUpProjectile");

	UDarwinContextualActionComponent_NetMulticastPickUpProjectile_Params params;
	params.projectile = projectile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.NetMulticastPickupLoot
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bDeerBox                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::NetMulticastPickupLoot(bool bDeerBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.NetMulticastPickupLoot");

	UDarwinContextualActionComponent_NetMulticastPickupLoot_Params params;
	params.bDeerBox = bDeerBox;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.NetMulticastPickupCraftableTool
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinItemTypeEnum            CraftableToolType              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::NetMulticastPickupCraftableTool(EDarwinItemTypeEnum CraftableToolType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.NetMulticastPickupCraftableTool");

	UDarwinContextualActionComponent_NetMulticastPickupCraftableTool_Params params;
	params.CraftableToolType = CraftableToolType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.NetMulticastLootTheDead
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        lootedCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// int                            randWood                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            randLeather                    (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::NetMulticastLootTheDead(class ADarwinCharacter* lootedCharacter, int randWood, int randLeather)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.NetMulticastLootTheDead");

	UDarwinContextualActionComponent_NetMulticastLootTheDead_Params params;
	params.lootedCharacter = lootedCharacter;
	params.randWood = randWood;
	params.randLeather = randLeather;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.NetMulticastContextualAction
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinContextualActionComponent::NetMulticastContextualAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.NetMulticastContextualAction");

	UDarwinContextualActionComponent_NetMulticastContextualAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.NetMulticastAcquirePoop
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinDeerPoop*         poop                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::NetMulticastAcquirePoop(class ADarwinDeerPoop* poop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.NetMulticastAcquirePoop");

	UDarwinContextualActionComponent_NetMulticastAcquirePoop_Params params;
	params.poop = poop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.NetMulticastAcquireClue
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinClue*             clue                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::NetMulticastAcquireClue(class ADarwinClue* clue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.NetMulticastAcquireClue");

	UDarwinContextualActionComponent_NetMulticastAcquireClue_Params params;
	params.clue = clue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventSimulatedStartLooting
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bDeerBox                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::EventSimulatedStartLooting(bool bDeerBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventSimulatedStartLooting");

	UDarwinContextualActionComponent_EventSimulatedStartLooting_Params params;
	params.bDeerBox = bDeerBox;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventSimulatedPickupLoot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bDeerBox                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::EventSimulatedPickupLoot(bool bDeerBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventSimulatedPickupLoot");

	UDarwinContextualActionComponent_EventSimulatedPickupLoot_Params params;
	params.bDeerBox = bDeerBox;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventSimulatedPickupCraftableTool
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            CraftableToolType              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::EventSimulatedPickupCraftableTool(EDarwinItemTypeEnum CraftableToolType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventSimulatedPickupCraftableTool");

	UDarwinContextualActionComponent_EventSimulatedPickupCraftableTool_Params params;
	params.CraftableToolType = CraftableToolType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventSimulatedCancelLooting
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bDeerBox                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::EventSimulatedCancelLooting(bool bDeerBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventSimulatedCancelLooting");

	UDarwinContextualActionComponent_EventSimulatedCancelLooting_Params params;
	params.bDeerBox = bDeerBox;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventSimulatedAcquirePoop
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinContextualActionComponent::EventSimulatedAcquirePoop(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventSimulatedAcquirePoop");

	UDarwinContextualActionComponent_EventSimulatedAcquirePoop_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventSimulatedAcquireClue
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinContextualActionComponent::EventSimulatedAcquireClue(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventSimulatedAcquireClue");

	UDarwinContextualActionComponent_EventSimulatedAcquireClue_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventPickUpProjectile
// (Event, Public, BlueprintEvent)

void UDarwinContextualActionComponent::EventPickUpProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventPickUpProjectile");

	UDarwinContextualActionComponent_EventPickUpProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventLootTheDead
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        lootedCharacter                (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::EventLootTheDead(class ADarwinCharacter* lootedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventLootTheDead");

	UDarwinContextualActionComponent_EventLootTheDead_Params params;
	params.lootedCharacter = lootedCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventLootActionLocalFail
// (Event, Public, BlueprintEvent)

void UDarwinContextualActionComponent::EventLootActionLocalFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventLootActionLocalFail");

	UDarwinContextualActionComponent_EventLootActionLocalFail_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventLocalStartLooting
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bDeerBox                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::EventLocalStartLooting(bool bDeerBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventLocalStartLooting");

	UDarwinContextualActionComponent_EventLocalStartLooting_Params params;
	params.bDeerBox = bDeerBox;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventLocalPickupLoot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bDeerBox                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::EventLocalPickupLoot(bool bDeerBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventLocalPickupLoot");

	UDarwinContextualActionComponent_EventLocalPickupLoot_Params params;
	params.bDeerBox = bDeerBox;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventLocalPickupCraftableTool
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            CraftableToolType              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::EventLocalPickupCraftableTool(EDarwinItemTypeEnum CraftableToolType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventLocalPickupCraftableTool");

	UDarwinContextualActionComponent_EventLocalPickupCraftableTool_Params params;
	params.CraftableToolType = CraftableToolType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventLocalCancelLooting
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bDeerBox                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::EventLocalCancelLooting(bool bDeerBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventLocalCancelLooting");

	UDarwinContextualActionComponent_EventLocalCancelLooting_Params params;
	params.bDeerBox = bDeerBox;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventLocalAcquirePoop
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::EventLocalAcquirePoop(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventLocalAcquirePoop");

	UDarwinContextualActionComponent_EventLocalAcquirePoop_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionComponent.EventLocalAcquireClue
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionComponent::EventLocalAcquireClue(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionComponent.EventLocalAcquireClue");

	UDarwinContextualActionComponent_EventLocalAcquireClue_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinContextualActionWidget.EventCanPickupStuff
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 playerName                     (Parm, ZeroConstructor)
// bool                           bBoolPactRevive                (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinContextualActionWidget::EventCanPickupStuff(EDarwinItemTypeEnum Type, const struct FString& playerName, bool bBoolPactRevive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinContextualActionWidget.EventCanPickupStuff");

	UDarwinContextualActionWidget_EventCanPickupStuff_Params params;
	params.Type = Type;
	params.playerName = playerName;
	params.bBoolPactRevive = bBoolPactRevive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.XXXXInitiateAllNuclearBlast
// (Final, Exec, Native, Public)

void ADarwinController::XXXXInitiateAllNuclearBlast()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.XXXXInitiateAllNuclearBlast");

	ADarwinController_XXXXInitiateAllNuclearBlast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.XtroMode
// (Final, Exec, Native, Public)

void ADarwinController::XtroMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.XtroMode");

	ADarwinController_XtroMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.UnlockAllItems
// (Final, Exec, Native, Public)
// Parameters:
// bool                           onlineItemsOnly                (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::UnlockAllItems(bool onlineItemsOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.UnlockAllItems");

	ADarwinController_UnlockAllItems_Params params;
	params.onlineItemsOnly = onlineItemsOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.TurnAIOff
// (Final, Exec, Native, Public)

void ADarwinController::TurnAIOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.TurnAIOff");

	ADarwinController_TurnAIOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ToggleNormalCameraDistance
// (Final, Native, Public, BlueprintCallable)

void ADarwinController::ToggleNormalCameraDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ToggleNormalCameraDistance");

	ADarwinController_ToggleNormalCameraDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ToggleCamStateFarPlayer
// (Final, Native, Public, BlueprintCallable)

void ADarwinController::ToggleCamStateFarPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ToggleCamStateFarPlayer");

	ADarwinController_ToggleCamStateFarPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.StopMatchmaking
// (Final, Exec, Native, Public)

void ADarwinController::StopMatchmaking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.StopMatchmaking");

	ADarwinController_StopMatchmaking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.StopEnvironmentTime
// (Final, Exec, Native, Public)

void ADarwinController::StopEnvironmentTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.StopEnvironmentTime");

	ADarwinController_StopEnvironmentTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.StartVoteCountdown
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::StartVoteCountdown(int Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.StartVoteCountdown");

	ADarwinController_StartVoteCountdown_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.StartStorm
// (Final, Exec, Native, Public)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::StartStorm(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.StartStorm");

	ADarwinController_StartStorm_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.StartMatchmaking
// (Final, Exec, Native, Public)
// Parameters:
// EDarwinGameMode                GameMode                       (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinRoleEnum                PlayerRole                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 friendPlayerId                 (Parm, ZeroConstructor)

void ADarwinController::StartMatchmaking(EDarwinGameMode GameMode, EDarwinRoleEnum PlayerRole, const struct FString& friendPlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.StartMatchmaking");

	ADarwinController_StartMatchmaking_Params params;
	params.GameMode = GameMode;
	params.PlayerRole = PlayerRole;
	params.friendPlayerId = friendPlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.StartGame
// (Final, Exec, Native, Public)

void ADarwinController::StartGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.StartGame");

	ADarwinController_StartGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.StartEnvironmentTime
// (Final, Exec, Native, Public)

void ADarwinController::StartEnvironmentTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.StartEnvironmentTime");

	ADarwinController_StartEnvironmentTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SpawnTestCharacter
// (Final, Exec, Native, Public)

void ADarwinController::SpawnTestCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SpawnTestCharacter");

	ADarwinController_SpawnTestCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ShowPingAndVersion
// (Final, Exec, Native, Public)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ShowPingAndVersion(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ShowPingAndVersion");

	ADarwinController_ShowPingAndVersion_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetWeaponLevel
// (Final, Exec, Native, Public)
// Parameters:
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::SetWeaponLevel(int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetWeaponLevel");

	ADarwinController_SetWeaponLevel_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetShortFootPrintLifeSpan
// (Final, Exec, Native, Public)

void ADarwinController::SetShortFootPrintLifeSpan()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetShortFootPrintLifeSpan");

	ADarwinController_SetShortFootPrintLifeSpan_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetNumberOfPylonsOnGameStart
// (Final, Exec, Native, Public)
// Parameters:
// int                            N                              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::SetNumberOfPylonsOnGameStart(int N)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetNumberOfPylonsOnGameStart");

	ADarwinController_SetNumberOfPylonsOnGameStart_Params params;
	params.N = N;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetNumberOfGamesPlayed
// (Final, Exec, Native, Public)
// Parameters:
// int                            N                              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::SetNumberOfGamesPlayed(int N)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetNumberOfGamesPlayed");

	ADarwinController_SetNumberOfGamesPlayed_Params params;
	params.N = N;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetEnvironmentTime
// (Final, Exec, Native, Public)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::SetEnvironmentTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetEnvironmentTime");

	ADarwinController_SetEnvironmentTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetDeerNumber
// (Final, Exec, Native, Public)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::SetDeerNumber(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetDeerNumber");

	ADarwinController_SetDeerNumber_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetDarwinVoiceChatVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewVolume                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::SetDarwinVoiceChatVolume(float NewVolume)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetDarwinVoiceChatVolume");

	ADarwinController_SetDarwinVoiceChatVolume_Params params;
	params.NewVolume = NewVolume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetDarwinSoundClassVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewVolume                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::SetDarwinSoundClassVolume(float NewVolume)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetDarwinSoundClassVolume");

	ADarwinController_SetDarwinSoundClassVolume_Params params;
	params.NewVolume = NewVolume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetCoatLevel
// (Final, Exec, Native, Public)
// Parameters:
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::SetCoatLevel(int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetCoatLevel");

	ADarwinController_SetCoatLevel_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetBootLevel
// (Final, Exec, Native, Public)
// Parameters:
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::SetBootLevel(int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetBootLevel");

	ADarwinController_SetBootLevel_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetAuroraIntensity
// (Final, Exec, Native, Public)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::SetAuroraIntensity(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetAuroraIntensity");

	ADarwinController_SetAuroraIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.SetAllItemsActivated
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::SetAllItemsActivated(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.SetAllItemsActivated");

	ADarwinController_SetAllItemsActivated_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerXtroMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerXtroMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerXtroMode");

	ADarwinController_ServerXtroMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerTurnAIOff
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerTurnAIOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerTurnAIOff");

	ADarwinController_ServerTurnAIOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerStartGame
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ADarwinController::ServerStartGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerStartGame");

	ADarwinController_ServerStartGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerSpawnTestCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerSpawnTestCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerSpawnTestCharacter");

	ADarwinController_ServerSpawnTestCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerSlomo
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerSlomo(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerSlomo");

	ADarwinController_ServerSlomo_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerSetWeaponLevel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerSetWeaponLevel(int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerSetWeaponLevel");

	ADarwinController_ServerSetWeaponLevel_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerSetSpeakEnabled
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerSetSpeakEnabled(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerSetSpeakEnabled");

	ADarwinController_ServerSetSpeakEnabled_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerSetShortFootPrintLifeSpan
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerSetShortFootPrintLifeSpan()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerSetShortFootPrintLifeSpan");

	ADarwinController_ServerSetShortFootPrintLifeSpan_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerSetPlayerMuteStatus
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            talkerID                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerSetPlayerMuteStatus(int talkerID, bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerSetPlayerMuteStatus");

	ADarwinController_ServerSetPlayerMuteStatus_Params params;
	params.talkerID = talkerID;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerSetNumberOfPylonsOnGameStart
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            N                              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerSetNumberOfPylonsOnGameStart(int N)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerSetNumberOfPylonsOnGameStart");

	ADarwinController_ServerSetNumberOfPylonsOnGameStart_Params params;
	params.N = N;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerSetMuteAllEnabled
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerSetMuteAllEnabled(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerSetMuteAllEnabled");

	ADarwinController_ServerSetMuteAllEnabled_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerSetDeerNumber
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerSetDeerNumber(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerSetDeerNumber");

	ADarwinController_ServerSetDeerNumber_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerSetCoatLevel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerSetCoatLevel(int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerSetCoatLevel");

	ADarwinController_ServerSetCoatLevel_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerSetBootLevel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerSetBootLevel(int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerSetBootLevel");

	ADarwinController_ServerSetBootLevel_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerRestartMap
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerRestartMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerRestartMap");

	ADarwinController_ServerRestartMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerKrute
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerKrute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerKrute");

	ADarwinController_ServerKrute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerKillPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            N                              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerKillPlayer(int N)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerKillPlayer");

	ADarwinController_ServerKillPlayer_Params params;
	params.N = N;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerKickPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerKickPlayer(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerKickPlayer");

	ADarwinController_ServerKickPlayer_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerInitiateNuclearBlast
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerInitiateNuclearBlast(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerInitiateNuclearBlast");

	ADarwinController_ServerInitiateNuclearBlast_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerInitiateManHunt
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerInitiateManHunt(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerInitiateManHunt");

	ADarwinController_ServerInitiateManHunt_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerInitiateGravityStorm
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerInitiateGravityStorm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerInitiateGravityStorm");

	ADarwinController_ServerInitiateGravityStorm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerInitiateAllNuclearBlast
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerInitiateAllNuclearBlast()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerInitiateAllNuclearBlast");

	ADarwinController_ServerInitiateAllNuclearBlast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerHardRestart
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerHardRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerHardRestart");

	ADarwinController_ServerHardRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerGotoShowDirector
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 showDirectorName               (Parm, ZeroConstructor)

void ADarwinController::ServerGotoShowDirector(const struct FString& showDirectorName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerGotoShowDirector");

	ADarwinController_ServerGotoShowDirector_Params params;
	params.showDirectorName = showDirectorName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerGotoPurgatory
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerGotoPurgatory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerGotoPurgatory");

	ADarwinController_ServerGotoPurgatory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerGotoLevel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 FURL                           (Parm, ZeroConstructor)

void ADarwinController::ServerGotoLevel(const struct FString& FURL)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerGotoLevel");

	ADarwinController_ServerGotoLevel_Params params;
	params.FURL = FURL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerGotoCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 player_name                    (Parm, ZeroConstructor)

void ADarwinController::ServerGotoCharacter(const struct FString& player_name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerGotoCharacter");

	ADarwinController_ServerGotoCharacter_Params params;
	params.player_name = player_name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerGotoBeholder
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 beholderName                   (Parm, ZeroConstructor)
// bool                           bSwitch                        (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        killerChar                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerGotoBeholder(const struct FString& beholderName, bool bSwitch, class ADarwinCharacter* killerChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerGotoBeholder");

	ADarwinController_ServerGotoBeholder_Params params;
	params.beholderName = beholderName;
	params.bSwitch = bSwitch;
	params.killerChar = killerChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerGiveWood
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerGiveWood(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerGiveWood");

	ADarwinController_ServerGiveWood_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerGiveRessource
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerGiveRessource(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerGiveRessource");

	ADarwinController_ServerGiveRessource_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerGiveLeather
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerGiveLeather(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerGiveLeather");

	ADarwinController_ServerGiveLeather_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerGiveElectronic
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerGiveElectronic(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerGiveElectronic");

	ADarwinController_ServerGiveElectronic_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerForceSuddenDeath
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerForceSuddenDeath(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerForceSuddenDeath");

	ADarwinController_ServerForceSuddenDeath_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerDeathMatchDemoMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerDeathMatchDemoMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerDeathMatchDemoMode");

	ADarwinController_ServerDeathMatchDemoMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerDeactivateZoneManager
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerDeactivateZoneManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerDeactivateZoneManager");

	ADarwinController_ServerDeactivateZoneManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerDarwinServerCommand
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)

void ADarwinController::ServerDarwinServerCommand(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerDarwinServerCommand");

	ADarwinController_ServerDarwinServerCommand_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerDarwinFootstepsOn
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerDarwinFootstepsOn(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerDarwinFootstepsOn");

	ADarwinController_ServerDarwinFootstepsOn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerDarwinCluesOn
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerDarwinCluesOn(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerDarwinCluesOn");

	ADarwinController_ServerDarwinCluesOn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerConnectToWebSocket
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerConnectToWebSocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerConnectToWebSocket");

	ADarwinController_ServerConnectToWebSocket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerCloseZone
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerCloseZone(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerCloseZone");

	ADarwinController_ServerCloseZone_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerAIToggleShoot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerAIToggleShoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerAIToggleShoot");

	ADarwinController_ServerAIToggleShoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerAIToggleRun
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerAIToggleRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerAIToggleRun");

	ADarwinController_ServerAIToggleRun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerAIToggleJump
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerAIToggleJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerAIToggleJump");

	ADarwinController_ServerAIToggleJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerAIToggleForcefield
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerAIToggleForcefield()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerAIToggleForcefield");

	ADarwinController_ServerAIToggleForcefield_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerAIToggleCamouflage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerAIToggleCamouflage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerAIToggleCamouflage");

	ADarwinController_ServerAIToggleCamouflage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerAIToggleAxeSwing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerAIToggleAxeSwing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerAIToggleAxeSwing");

	ADarwinController_ServerAIToggleAxeSwing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerActivateRandomPylon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerActivateRandomPylon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerActivateRandomPylon");

	ADarwinController_ServerActivateRandomPylon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerActivatePylon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ServerActivatePylon(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerActivatePylon");

	ADarwinController_ServerActivatePylon_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ServerActivateAllPylons
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinController::ServerActivateAllPylons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ServerActivateAllPylons");

	ADarwinController_ServerActivateAllPylons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.RestartMap
// (Final, Exec, Native, Public)

void ADarwinController::RestartMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.RestartMap");

	ADarwinController_RestartMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ResetPlayerProgression
// (Final, Exec, Native, Public)

void ADarwinController::ResetPlayerProgression()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ResetPlayerProgression");

	ADarwinController_ResetPlayerProgression_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ResetAllPlayersELO
// (Final, Exec, Native, Public)

void ADarwinController::ResetAllPlayersELO()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ResetAllPlayersELO");

	ADarwinController_ResetAllPlayersELO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.OverrideMyCareerIdentity
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 PlayerId                       (Parm, ZeroConstructor)

void ADarwinController::OverrideMyCareerIdentity(const struct FString& PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.OverrideMyCareerIdentity");

	ADarwinController_OverrideMyCareerIdentity_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.NetMulticastHardRestart
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinController::NetMulticastHardRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.NetMulticastHardRestart");

	ADarwinController_NetMulticastHardRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.LockAllItems
// (Final, Exec, Native, Public)

void ADarwinController::LockAllItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.LockAllItems");

	ADarwinController_LockAllItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.Krute
// (Final, Exec, Native, Public)

void ADarwinController::Krute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.Krute");

	ADarwinController_Krute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.Krash
// (Final, Exec, Native, Public)

void ADarwinController::Krash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.Krash");

	ADarwinController_Krash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.KrankShaft
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 krankStr                       (Parm, ZeroConstructor)

void ADarwinController::KrankShaft(const struct FString& krankStr)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.KrankShaft");

	ADarwinController_KrankShaft_Params params;
	params.krankStr = krankStr;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.KillPlayer
// (Final, Exec, Native, Public)
// Parameters:
// int                            N                              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::KillPlayer(int N)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.KillPlayer");

	ADarwinController_KillPlayer_Params params;
	params.N = N;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.IsSuperUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinController::IsSuperUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.IsSuperUser");

	ADarwinController_IsSuperUser_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinController.IsOfficialShowDirector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinController::IsOfficialShowDirector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.IsOfficialShowDirector");

	ADarwinController_IsOfficialShowDirector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinController.InShowDirector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinController::InShowDirector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.InShowDirector");

	ADarwinController_InShowDirector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinController.InPurgatory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinController::InPurgatory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.InPurgatory");

	ADarwinController_InPurgatory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinController.InitiateNuclearBlast
// (Final, Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::InitiateNuclearBlast(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.InitiateNuclearBlast");

	ADarwinController_InitiateNuclearBlast_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.InitiateManHunt
// (Final, Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::InitiateManHunt(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.InitiateManHunt");

	ADarwinController_InitiateManHunt_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.InitiateGravityStorm
// (Final, Exec, Native, Public)

void ADarwinController::InitiateGravityStorm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.InitiateGravityStorm");

	ADarwinController_InitiateGravityStorm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.InCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinController::InCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.InCharacter");

	ADarwinController_InCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinController.InBeholder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinController::InBeholder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.InBeholder");

	ADarwinController_InBeholder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinController.HardRestart
// (Final, Exec, Native, Public)

void ADarwinController::HardRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.HardRestart");

	ADarwinController_HardRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GotoShowDirector
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 showDirectorName               (Parm, ZeroConstructor)

void ADarwinController::GotoShowDirector(const struct FString& showDirectorName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GotoShowDirector");

	ADarwinController_GotoShowDirector_Params params;
	params.showDirectorName = showDirectorName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GotoPurgatory
// (Final, Exec, Native, Public)

void ADarwinController::GotoPurgatory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GotoPurgatory");

	ADarwinController_GotoPurgatory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GotoLevel
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 FURL                           (Parm, ZeroConstructor)

void ADarwinController::GotoLevel(const struct FString& FURL)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GotoLevel");

	ADarwinController_GotoLevel_Params params;
	params.FURL = FURL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GotoCharacter
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 player_name                    (Parm, ZeroConstructor)

void ADarwinController::GotoCharacter(const struct FString& player_name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GotoCharacter");

	ADarwinController_GotoCharacter_Params params;
	params.player_name = player_name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GotoBeholder
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 beholderName                   (Parm, ZeroConstructor)
// bool                           bSwitch                        (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        killerChar                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::GotoBeholder(const struct FString& beholderName, bool bSwitch, class ADarwinCharacter* killerChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GotoBeholder");

	ADarwinController_GotoBeholder_Params params;
	params.beholderName = beholderName;
	params.bSwitch = bSwitch;
	params.killerChar = killerChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GiveWood
// (Final, Exec, Native, Public)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::GiveWood(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GiveWood");

	ADarwinController_GiveWood_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GiveRessource
// (Final, Exec, Native, Public)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::GiveRessource(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GiveRessource");

	ADarwinController_GiveRessource_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GiveMoney
// (Final, Exec, Native, Public)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::GiveMoney(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GiveMoney");

	ADarwinController_GiveMoney_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GiveLootBox
// (Final, Exec, Native, Public)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::GiveLootBox(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GiveLootBox");

	ADarwinController_GiveLootBox_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GiveLeather
// (Final, Exec, Native, Public)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::GiveLeather(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GiveLeather");

	ADarwinController_GiveLeather_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GiveElectronic
// (Final, Exec, Native, Public)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::GiveElectronic(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GiveElectronic");

	ADarwinController_GiveElectronic_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.GenerateRandomName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ADarwinController::GenerateRandomName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.GenerateRandomName");

	ADarwinController_GenerateRandomName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinController.ForceSuddenDeath
// (Final, Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ForceSuddenDeath(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ForceSuddenDeath");

	ADarwinController_ForceSuddenDeath_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DrawActivePlayers
// (Final, Exec, Native, Public)

void ADarwinController::DrawActivePlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DrawActivePlayers");

	ADarwinController_DrawActivePlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DrawActiveHeatSourceComponents
// (Final, Exec, Native, Public)

void ADarwinController::DrawActiveHeatSourceComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DrawActiveHeatSourceComponents");

	ADarwinController_DrawActiveHeatSourceComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DrawActiveFootprints
// (Final, Exec, Native, Public)

void ADarwinController::DrawActiveFootprints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DrawActiveFootprints");

	ADarwinController_DrawActiveFootprints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DeathMatchDemoMode
// (Final, Exec, Native, Public)

void ADarwinController::DeathMatchDemoMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DeathMatchDemoMode");

	ADarwinController_DeathMatchDemoMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DeactivateZoneManager
// (Final, Exec, Native, Public)

void ADarwinController::DeactivateZoneManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DeactivateZoneManager");

	ADarwinController_DeactivateZoneManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DeactivateTreeOutliner
// (Final, Exec, Native, Public)

void ADarwinController::DeactivateTreeOutliner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DeactivateTreeOutliner");

	ADarwinController_DeactivateTreeOutliner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DeactivatePylonManager
// (Final, Exec, Native, Public)

void ADarwinController::DeactivatePylonManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DeactivatePylonManager");

	ADarwinController_DeactivatePylonManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DeactivateFootprints
// (Final, Exec, Native, Public)

void ADarwinController::DeactivateFootprints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DeactivateFootprints");

	ADarwinController_DeactivateFootprints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DeactivateAllUI
// (Final, Exec, Native, Public)

void ADarwinController::DeactivateAllUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DeactivateAllUI");

	ADarwinController_DeactivateAllUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DeactivateAllForCapture
// (Final, Exec, Native, Public)

void ADarwinController::DeactivateAllForCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DeactivateAllForCapture");

	ADarwinController_DeactivateAllForCapture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DarwinVideoSettings
// (Final, Exec, Native, Public)
// Parameters:
// int                            quality                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::DarwinVideoSettings(int quality)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DarwinVideoSettings");

	ADarwinController_DarwinVideoSettings_Params params;
	params.quality = quality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DarwinSlomo
// (Final, Exec, Native, Public)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::DarwinSlomo(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DarwinSlomo");

	ADarwinController_DarwinSlomo_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DarwinServerCommand
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)

void ADarwinController::DarwinServerCommand(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DarwinServerCommand");

	ADarwinController_DarwinServerCommand_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DarwinFootstepsOn
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::DarwinFootstepsOn(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DarwinFootstepsOn");

	ADarwinController_DarwinFootstepsOn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.DarwinCluesOn
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::DarwinCluesOn(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.DarwinCluesOn");

	ADarwinController_DarwinCluesOn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ConnectToWebsocket
// (Final, Exec, Native, Public)

void ADarwinController::ConnectToWebsocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ConnectToWebsocket");

	ADarwinController_ConnectToWebsocket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.CloseZone
// (Final, Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::CloseZone(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.CloseZone");

	ADarwinController_CloseZone_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.CloseRandomZone
// (Final, Exec, Native, Public)

void ADarwinController::CloseRandomZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.CloseRandomZone");

	ADarwinController_CloseRandomZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClientUnmutePlayer
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FUniqueNetIdRepl        PlayerId                       (Parm)

void ADarwinController::ClientUnmutePlayer(const struct FUniqueNetIdRepl& PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClientUnmutePlayer");

	ADarwinController_ClientUnmutePlayer_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClientStopGameCountdown
// (Net, NetReliable, Native, Event, Public, NetClient)

void ADarwinController::ClientStopGameCountdown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClientStopGameCountdown");

	ADarwinController_ClientStopGameCountdown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClientStartOnlineGame
// (Net, NetReliable, Native, Event, Public, NetClient)

void ADarwinController::ClientStartOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClientStartOnlineGame");

	ADarwinController_ClientStartOnlineGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClientStartGameCountdown
// (Net, NetReliable, Native, Event, Public, NetClient)

void ADarwinController::ClientStartGameCountdown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClientStartGameCountdown");

	ADarwinController_ClientStartGameCountdown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClientSetServerGUID
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 inServerGUID                   (Parm, ZeroConstructor)

void ADarwinController::ClientSetServerGUID(const struct FString& inServerGUID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClientSetServerGUID");

	ADarwinController_ClientSetServerGUID_Params params;
	params.inServerGUID = inServerGUID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClientSetPurgatoryInputModeAndMouse
// (Net, NetReliable, Native, Event, Public, NetClient)

void ADarwinController::ClientSetPurgatoryInputModeAndMouse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClientSetPurgatoryInputModeAndMouse");

	ADarwinController_ClientSetPurgatoryInputModeAndMouse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClientSetCharacterInputModeAndMouse
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FRotator                contRot                        (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinController::ClientSetCharacterInputModeAndMouse(const struct FRotator& contRot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClientSetCharacterInputModeAndMouse");

	ADarwinController_ClientSetCharacterInputModeAndMouse_Params params;
	params.contRot = contRot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClientSetCameraManager
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UClass*                  NewCameraManagerClass          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ClientSetCameraManager(class UClass* NewCameraManagerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClientSetCameraManager");

	ADarwinController_ClientSetCameraManager_Params params;
	params.NewCameraManagerClass = NewCameraManagerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClientMutePlayer
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FUniqueNetIdRepl        PlayerId                       (Parm)

void ADarwinController::ClientMutePlayer(const struct FUniqueNetIdRepl& PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClientMutePlayer");

	ADarwinController_ClientMutePlayer_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClientMessageFromSpectator
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)
// class ADarwinCharacter*        FocusCharacter                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ClientMessageFromSpectator(const struct FString& Message, class ADarwinCharacter* FocusCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClientMessageFromSpectator");

	ADarwinController_ClientMessageFromSpectator_Params params;
	params.Message = Message;
	params.FocusCharacter = FocusCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClientEndOnlineGame
// (Net, NetReliable, Native, Event, Public, NetClient)

void ADarwinController::ClientEndOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClientEndOnlineGame");

	ADarwinController_ClientEndOnlineGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ClearMyCareerIdentityOverride
// (Final, Exec, Native, Public)

void ADarwinController::ClearMyCareerIdentityOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ClearMyCareerIdentityOverride");

	ADarwinController_ClearMyCareerIdentityOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ApplyXboxOneSettings
// (Final, Native, Public)

void ADarwinController::ApplyXboxOneSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ApplyXboxOneSettings");

	ADarwinController_ApplyXboxOneSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ApplyInputSettings
// (Final, Native, Public, BlueprintCallable)

void ADarwinController::ApplyInputSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ApplyInputSettings");

	ADarwinController_ApplyInputSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.AIToggleShoot
// (Final, Exec, Native, Public)

void ADarwinController::AIToggleShoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.AIToggleShoot");

	ADarwinController_AIToggleShoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.AIToggleRun
// (Final, Exec, Native, Public)

void ADarwinController::AIToggleRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.AIToggleRun");

	ADarwinController_AIToggleRun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.AIToggleJump
// (Final, Exec, Native, Public)

void ADarwinController::AIToggleJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.AIToggleJump");

	ADarwinController_AIToggleJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.AIToggleForcefield
// (Final, Exec, Native, Public)

void ADarwinController::AIToggleForcefield()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.AIToggleForcefield");

	ADarwinController_AIToggleForcefield_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.AIToggleCamouflage
// (Final, Exec, Native, Public)

void ADarwinController::AIToggleCamouflage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.AIToggleCamouflage");

	ADarwinController_AIToggleCamouflage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.AIToggleAxeSwing
// (Final, Exec, Native, Public)

void ADarwinController::AIToggleAxeSwing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.AIToggleAxeSwing");

	ADarwinController_AIToggleAxeSwing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ActivateRandomPylon
// (Final, Exec, Native, Public)

void ADarwinController::ActivateRandomPylon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ActivateRandomPylon");

	ADarwinController_ActivateRandomPylon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ActivatePylon
// (Final, Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinController::ActivatePylon(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ActivatePylon");

	ADarwinController_ActivatePylon_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinController.ActivateAllPylons
// (Final, Exec, Native, Public)

void ADarwinController::ActivateAllPylons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinController.ActivateAllPylons");

	ADarwinController_ActivateAllPylons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinControllerSubActor.OwnerIsShowDirector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinControllerSubActor::OwnerIsShowDirector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinControllerSubActor.OwnerIsShowDirector");

	ADarwinControllerSubActor_OwnerIsShowDirector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinControllerSubActor.OwnerIsDronePawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinControllerSubActor::OwnerIsDronePawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinControllerSubActor.OwnerIsDronePawn");

	ADarwinControllerSubActor_OwnerIsDronePawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinControllerSubActor.OwnerIsCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinControllerSubActor::OwnerIsCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinControllerSubActor.OwnerIsCharacter");

	ADarwinControllerSubActor_OwnerIsCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinControllerSubActor.OwnerIsBeholder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinControllerSubActor::OwnerIsBeholder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinControllerSubActor.OwnerIsBeholder");

	ADarwinControllerSubActor_OwnerIsBeholder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCraftingComponent.ServerTryToCraftObject
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// EDarwinItemTypeEnum            enum_type                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::ServerTryToCraftObject(EDarwinItemTypeEnum enum_type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.ServerTryToCraftObject");

	UDarwinCraftingComponent_ServerTryToCraftObject_Params params;
	params.enum_type = enum_type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.ServerSwitchCraftableItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::ServerSwitchCraftableItems(int Index, EDarwinItemTypeEnum Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.ServerSwitchCraftableItems");

	UDarwinCraftingComponent_ServerSwitchCraftableItems_Params params;
	params.Index = Index;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.ServerSetSimulatedMouseLocation
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector2D               simMouseLoc                    (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinCraftingComponent::ServerSetSimulatedMouseLocation(const struct FVector2D& simMouseLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.ServerSetSimulatedMouseLocation");

	UDarwinCraftingComponent_ServerSetSimulatedMouseLocation_Params params;
	params.simMouseLoc = simMouseLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.ServerSetCraftableItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<EDarwinItemTypeEnum>    inCraftableItems               (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UDarwinCraftingComponent::ServerSetCraftableItems(TArray<EDarwinItemTypeEnum> inCraftableItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.ServerSetCraftableItems");

	UDarwinCraftingComponent_ServerSetCraftableItems_Params params;
	params.inCraftableItems = inCraftableItems;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.ServerOpenCraftWheel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinCraftingComponent::ServerOpenCraftWheel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.ServerOpenCraftWheel");

	UDarwinCraftingComponent_ServerOpenCraftWheel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.ServerCraftingObjectStart
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// EDarwinItemTypeEnum            enum_type                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::ServerCraftingObjectStart(EDarwinItemTypeEnum enum_type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.ServerCraftingObjectStart");

	UDarwinCraftingComponent_ServerCraftingObjectStart_Params params;
	params.enum_type = enum_type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.ServerCraftingObjectEnd
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void UDarwinCraftingComponent::ServerCraftingObjectEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.ServerCraftingObjectEnd");

	UDarwinCraftingComponent_ServerCraftingObjectEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.ServerCloseCraftWheel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinCraftingComponent::ServerCloseCraftWheel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.ServerCloseCraftWheel");

	UDarwinCraftingComponent_ServerCloseCraftWheel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.NetMulticastSetSimulatedMouseLocation
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector2D               simMouseLoc                    (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinCraftingComponent::NetMulticastSetSimulatedMouseLocation(const struct FVector2D& simMouseLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.NetMulticastSetSimulatedMouseLocation");

	UDarwinCraftingComponent_NetMulticastSetSimulatedMouseLocation_Params params;
	params.simMouseLoc = simMouseLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.NetMulticastOpenCraftWheel
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinCraftingComponent::NetMulticastOpenCraftWheel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.NetMulticastOpenCraftWheel");

	UDarwinCraftingComponent_NetMulticastOpenCraftWheel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.NetMulticastCraftingObjectSuccess
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UDarwinCraftingComponent::NetMulticastCraftingObjectSuccess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.NetMulticastCraftingObjectSuccess");

	UDarwinCraftingComponent_NetMulticastCraftingObjectSuccess_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.NetMulticastCraftingObjectStart
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// EDarwinItemTypeEnum            enum_type                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::NetMulticastCraftingObjectStart(EDarwinItemTypeEnum enum_type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.NetMulticastCraftingObjectStart");

	UDarwinCraftingComponent_NetMulticastCraftingObjectStart_Params params;
	params.enum_type = enum_type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.NetMulticastCraftingObjectFail
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UDarwinCraftingComponent::NetMulticastCraftingObjectFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.NetMulticastCraftingObjectFail");

	UDarwinCraftingComponent_NetMulticastCraftingObjectFail_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.NetMulticastCraftingObjectEnd
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UDarwinCraftingComponent::NetMulticastCraftingObjectEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.NetMulticastCraftingObjectEnd");

	UDarwinCraftingComponent_NetMulticastCraftingObjectEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.NetMulticastCloseCraftWheel
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinCraftingComponent::NetMulticastCloseCraftWheel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.NetMulticastCloseCraftWheel");

	UDarwinCraftingComponent_NetMulticastCloseCraftWheel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.GetArrowType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDarwinItemTypeEnum UDarwinCraftingComponent::GetArrowType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.GetArrowType");

	UDarwinCraftingComponent_GetArrowType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinCraftingComponent.EventSimulatedCraftingSuccess
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::EventSimulatedCraftingSuccess(EDarwinItemTypeEnum Type, class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.EventSimulatedCraftingSuccess");

	UDarwinCraftingComponent_EventSimulatedCraftingSuccess_Params params;
	params.Type = Type;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.EventSimulatedCraftingStart
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::EventSimulatedCraftingStart(EDarwinItemTypeEnum Type, class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.EventSimulatedCraftingStart");

	UDarwinCraftingComponent_EventSimulatedCraftingStart_Params params;
	params.Type = Type;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.EventSimulatedCraftingFail
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::EventSimulatedCraftingFail(EDarwinItemTypeEnum Type, class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.EventSimulatedCraftingFail");

	UDarwinCraftingComponent_EventSimulatedCraftingFail_Params params;
	params.Type = Type;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.EventSimulatedCraftingEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::EventSimulatedCraftingEnd(EDarwinItemTypeEnum Type, class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.EventSimulatedCraftingEnd");

	UDarwinCraftingComponent_EventSimulatedCraftingEnd_Params params;
	params.Type = Type;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.EventLocalCraftingSuccess
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::EventLocalCraftingSuccess(EDarwinItemTypeEnum Type, class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.EventLocalCraftingSuccess");

	UDarwinCraftingComponent_EventLocalCraftingSuccess_Params params;
	params.Type = Type;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.EventLocalCraftingStart
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::EventLocalCraftingStart(EDarwinItemTypeEnum Type, class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.EventLocalCraftingStart");

	UDarwinCraftingComponent_EventLocalCraftingStart_Params params;
	params.Type = Type;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.EventLocalCraftingFail
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::EventLocalCraftingFail(EDarwinItemTypeEnum Type, class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.EventLocalCraftingFail");

	UDarwinCraftingComponent_EventLocalCraftingFail_Params params;
	params.Type = Type;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.EventLocalCraftingEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::EventLocalCraftingEnd(EDarwinItemTypeEnum Type, class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.EventLocalCraftingEnd");

	UDarwinCraftingComponent_EventLocalCraftingEnd_Params params;
	params.Type = Type;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinCraftingComponent.CraftObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            enum_type                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinCraftingComponent::CraftObject(EDarwinItemTypeEnum enum_type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinCraftingComponent.CraftObject");

	UDarwinCraftingComponent_CraftObject_Params params;
	params.enum_type = enum_type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDamageType.IsWeapon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinDamageTypeEnum          DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinDamageType::STATIC_IsWeapon(EDarwinDamageTypeEnum DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDamageType.IsWeapon");

	UDarwinDamageType_IsWeapon_Params params;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDamageType.GetWeaponArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinDamageTypeEnum>  ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinDamageTypeEnum> UDarwinDamageType::STATIC_GetWeaponArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDamageType.GetWeaponArray");

	UDarwinDamageType_GetWeaponArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.SetAllItemsActivated
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinDataSingletonLibrary::STATIC_SetAllItemsActivated(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.SetAllItemsActivated");

	UDarwinDataSingletonLibrary_SetAllItemsActivated_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDataSingletonLibrary.GetPrettyRegionName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 RegionName                     (Parm, ZeroConstructor)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UDarwinDataSingletonLibrary::STATIC_GetPrettyRegionName(const struct FString& RegionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetPrettyRegionName");

	UDarwinDataSingletonLibrary_GetPrettyRegionName_Params params;
	params.RegionName = RegionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinNumberOfGamesForTutorial
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinDataSingletonLibrary::STATIC_GetDarwinNumberOfGamesForTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinNumberOfGamesForTutorial");

	UDarwinDataSingletonLibrary_GetDarwinNumberOfGamesForTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemWoodCost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinDataSingletonLibrary::STATIC_GetDarwinItemWoodCost(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemWoodCost");

	UDarwinDataSingletonLibrary_GetDarwinItemWoodCost_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemTooltip
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UDarwinDataSingletonLibrary::STATIC_GetDarwinItemTooltip(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemTooltip");

	UDarwinDataSingletonLibrary_GetDarwinItemTooltip_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemTitle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UDarwinDataSingletonLibrary::STATIC_GetDarwinItemTitle(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemTitle");

	UDarwinDataSingletonLibrary_GetDarwinItemTitle_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemSubTitle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UDarwinDataSingletonLibrary::STATIC_GetDarwinItemSubTitle(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemSubTitle");

	UDarwinDataSingletonLibrary_GetDarwinItemSubTitle_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemMaterial
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UDarwinDataSingletonLibrary::STATIC_GetDarwinItemMaterial(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemMaterial");

	UDarwinDataSingletonLibrary_GetDarwinItemMaterial_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemManaCost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinDataSingletonLibrary::STATIC_GetDarwinItemManaCost(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemManaCost");

	UDarwinDataSingletonLibrary_GetDarwinItemManaCost_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemLeatherCost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinDataSingletonLibrary::STATIC_GetDarwinItemLeatherCost(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemLeatherCost");

	UDarwinDataSingletonLibrary_GetDarwinItemLeatherCost_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemInfoMap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// TMap<struct FString, struct FString> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TMap<struct FString, struct FString> UDarwinDataSingletonLibrary::STATIC_GetDarwinItemInfoMap(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemInfoMap");

	UDarwinDataSingletonLibrary_GetDarwinItemInfoMap_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemImageMiniMat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UDarwinDataSingletonLibrary::STATIC_GetDarwinItemImageMiniMat(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemImageMiniMat");

	UDarwinDataSingletonLibrary_GetDarwinItemImageMiniMat_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemImageBigMat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UDarwinDataSingletonLibrary::STATIC_GetDarwinItemImageBigMat(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemImageBigMat");

	UDarwinDataSingletonLibrary_GetDarwinItemImageBigMat_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UDarwinDataSingletonLibrary::STATIC_GetDarwinItemIcon(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemIcon");

	UDarwinDataSingletonLibrary_GetDarwinItemIcon_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemExplicationIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UDarwinDataSingletonLibrary::STATIC_GetDarwinItemExplicationIcon(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemExplicationIcon");

	UDarwinDataSingletonLibrary_GetDarwinItemExplicationIcon_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemElectronicCost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinDataSingletonLibrary::STATIC_GetDarwinItemElectronicCost(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemElectronicCost");

	UDarwinDataSingletonLibrary_GetDarwinItemElectronicCost_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemDetailLineTwo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UDarwinDataSingletonLibrary::STATIC_GetDarwinItemDetailLineTwo(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemDetailLineTwo");

	UDarwinDataSingletonLibrary_GetDarwinItemDetailLineTwo_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemDetailLineThree
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UDarwinDataSingletonLibrary::STATIC_GetDarwinItemDetailLineThree(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemDetailLineThree");

	UDarwinDataSingletonLibrary_GetDarwinItemDetailLineThree_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemDetail
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UDarwinDataSingletonLibrary::STATIC_GetDarwinItemDetail(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemDetail");

	UDarwinDataSingletonLibrary_GetDarwinItemDetail_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemDescriptionLineTwo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UDarwinDataSingletonLibrary::STATIC_GetDarwinItemDescriptionLineTwo(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemDescriptionLineTwo");

	UDarwinDataSingletonLibrary_GetDarwinItemDescriptionLineTwo_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemDescription
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UDarwinDataSingletonLibrary::STATIC_GetDarwinItemDescription(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemDescription");

	UDarwinDataSingletonLibrary_GetDarwinItemDescription_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemCraftingTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDarwinDataSingletonLibrary::STATIC_GetDarwinItemCraftingTime(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemCraftingTime");

	UDarwinDataSingletonLibrary_GetDarwinItemCraftingTime_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemContourMiniMat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UDarwinDataSingletonLibrary::STATIC_GetDarwinItemContourMiniMat(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemContourMiniMat");

	UDarwinDataSingletonLibrary_GetDarwinItemContourMiniMat_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemContourIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UDarwinDataSingletonLibrary::STATIC_GetDarwinItemContourIcon(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemContourIcon");

	UDarwinDataSingletonLibrary_GetDarwinItemContourIcon_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemContourBigMat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UDarwinDataSingletonLibrary::STATIC_GetDarwinItemContourBigMat(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemContourBigMat");

	UDarwinDataSingletonLibrary_GetDarwinItemContourBigMat_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemClueClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UDarwinDataSingletonLibrary::STATIC_GetDarwinItemClueClass(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemClueClass");

	UDarwinDataSingletonLibrary_GetDarwinItemClueClass_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemCastTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDarwinDataSingletonLibrary::STATIC_GetDarwinItemCastTime(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemCastTime");

	UDarwinDataSingletonLibrary_GetDarwinItemCastTime_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemBoostValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDarwinDataSingletonLibrary::STATIC_GetDarwinItemBoostValue(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemBoostValue");

	UDarwinDataSingletonLibrary_GetDarwinItemBoostValue_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemBoostTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDarwinDataSingletonLibrary::STATIC_GetDarwinItemBoostTime(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemBoostTime");

	UDarwinDataSingletonLibrary_GetDarwinItemBoostTime_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemActive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinDataSingletonLibrary::STATIC_GetDarwinItemActive(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinItemActive");

	UDarwinDataSingletonLibrary_GetDarwinItemActive_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinEffectName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UDarwinDataSingletonLibrary::STATIC_GetDarwinEffectName(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinEffectName");

	UDarwinDataSingletonLibrary_GetDarwinEffectName_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinEffectMaterial
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarwinItemTypeEnum            DarwinItemType                 (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UDarwinDataSingletonLibrary::STATIC_GetDarwinEffectMaterial(EDarwinItemTypeEnum DarwinItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinEffectMaterial");

	UDarwinDataSingletonLibrary_GetDarwinEffectMaterial_Params params;
	params.DarwinItemType = DarwinItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetDarwinData
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           IsValid                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UDarwinDataSingleton*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDarwinDataSingleton* UDarwinDataSingletonLibrary::STATIC_GetDarwinData(bool* IsValid)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetDarwinData");

	UDarwinDataSingletonLibrary_GetDarwinData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (IsValid != nullptr)
		*IsValid = params.IsValid;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetAndIncrementSpawnSoundCounter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinDataSingletonLibrary::STATIC_GetAndIncrementSpawnSoundCounter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetAndIncrementSpawnSoundCounter");

	UDarwinDataSingletonLibrary_GetAndIncrementSpawnSoundCounter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDataSingletonLibrary.GetAllItemsActivated
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinDataSingletonLibrary::STATIC_GetAllItemsActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDataSingletonLibrary.GetAllItemsActivated");

	UDarwinDataSingletonLibrary_GetAllItemsActivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinDeer.NetMulticastScared
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Direction                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinDeer::NetMulticastScared(const struct FVector& Loc, const struct FVector& Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDeer.NetMulticastScared");

	ADarwinDeer_NetMulticastScared_Params params;
	params.Loc = Loc;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDeer.NetMulticastPosition
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 vel                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinDeer::NetMulticastPosition(const struct FVector& vel, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDeer.NetMulticastPosition");

	ADarwinDeer_NetMulticastPosition_Params params;
	params.vel = vel;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDeer.NetMulticastHitFloor
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Normal                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinDeer::NetMulticastHitFloor(const struct FVector& Loc, const struct FVector& Normal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDeer.NetMulticastHitFloor");

	ADarwinDeer_NetMulticastHitFloor_Params params;
	params.Loc = Loc;
	params.Normal = Normal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDeer.NetMulticastGotoIdle
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinDeer::NetMulticastGotoIdle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDeer.NetMulticastGotoIdle");

	ADarwinDeer_NetMulticastGotoIdle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDeer.NetMulticastGotoFalling
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinDeer::NetMulticastGotoFalling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDeer.NetMulticastGotoFalling");

	ADarwinDeer_NetMulticastGotoFalling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDeer.EventScared
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinDeer::EventScared(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDeer.EventScared");

	ADarwinDeer_EventScared_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDeer.EventHitFloor
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinDeer::EventHitFloor(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDeer.EventHitFloor");

	ADarwinDeer_EventHitFloor_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDeerPoop.NetMulticastSetTargetDeer
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinZombie*           deer                           (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinDeerPoop::NetMulticastSetTargetDeer(class ADarwinZombie* deer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDeerPoop.NetMulticastSetTargetDeer");

	ADarwinDeerPoop_NetMulticastSetTargetDeer_Params params;
	params.deer = deer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDeerPoop.NetMulticastHidePoop
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinDeerPoop::NetMulticastHidePoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDeerPoop.NetMulticastHidePoop");

	ADarwinDeerPoop_NetMulticastHidePoop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDestructableActor.NetMulticastFireForce
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 rot                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinDestructableActor::NetMulticastFireForce(const struct FVector& Loc, const struct FVector& rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDestructableActor.NetMulticastFireForce");

	ADarwinDestructableActor_NetMulticastFireForce_Params params;
	params.Loc = Loc;
	params.rot = rot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDetectorPower.EventDetectorPulse
// (Event, Public, BlueprintEvent)

void UDarwinDetectorPower::EventDetectorPulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDetectorPower.EventDetectorPulse");

	UDarwinDetectorPower_EventDetectorPulse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDevCommunicationManager.SetMessageAsSeen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            MessageId                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinDevCommunicationManager::SetMessageAsSeen(int MessageId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDevCommunicationManager.SetMessageAsSeen");

	UDarwinDevCommunicationManager_SetMessageAsSeen_Params params;
	params.MessageId = MessageId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinDevCommunicationManager.HasMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            MessageId                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinDevCommunicationManager::HasMessage(int MessageId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinDevCommunicationManager.HasMessage");

	UDarwinDevCommunicationManager_HasMessage_Params params;
	params.MessageId = MessageId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.UpdateDayPeriod
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::UpdateDayPeriod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.UpdateDayPeriod");

	ADarwinEnvironmentManager_UpdateDayPeriod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.SetSnowIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::SetSnowIntensity(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.SetSnowIntensity");

	ADarwinEnvironmentManager_SetSnowIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.SetFogIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::SetFogIntensity(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.SetFogIntensity");

	ADarwinEnvironmentManager_SetFogIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.SetDayTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          dayTime                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::SetDayTime(float dayTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.SetDayTime");

	ADarwinEnvironmentManager_SetDayTime_Params params;
	params.dayTime = dayTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ServerUpdateParameters
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          fog                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          snow                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           automatic                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          timeSpeed                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Acceleration                   (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::ServerUpdateParameters(float Time, float fog, float snow, bool automatic, float timeSpeed, float Acceleration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ServerUpdateParameters");

	ADarwinEnvironmentManager_ServerUpdateParameters_Params params;
	params.Time = Time;
	params.fog = fog;
	params.snow = snow;
	params.automatic = automatic;
	params.timeSpeed = timeSpeed;
	params.Acceleration = Acceleration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ServerStopTime
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinEnvironmentManager::ServerStopTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ServerStopTime");

	ADarwinEnvironmentManager_ServerStopTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ServerStartTime
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADarwinEnvironmentManager::ServerStartTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ServerStartTime");

	ADarwinEnvironmentManager_ServerStartTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ServerStartStorm
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::ServerStartStorm(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ServerStartStorm");

	ADarwinEnvironmentManager_ServerStartStorm_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ServerSetTime
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::ServerSetTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ServerSetTime");

	ADarwinEnvironmentManager_ServerSetTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ServerSetAuroraIntensity
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::ServerSetAuroraIntensity(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ServerSetAuroraIntensity");

	ADarwinEnvironmentManager_ServerSetAuroraIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ResetEpicStorm
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::ResetEpicStorm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ResetEpicStorm");

	ADarwinEnvironmentManager_ResetEpicStorm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.PlayPauseDayTime
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::PlayPauseDayTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.PlayPauseDayTime");

	ADarwinEnvironmentManager_PlayPauseDayTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.NetMulticastStartStorm
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::NetMulticastStartStorm(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.NetMulticastStartStorm");

	ADarwinEnvironmentManager_NetMulticastStartStorm_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.NetMultiCastResetEnvironment
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinEnvironmentManager::NetMultiCastResetEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.NetMultiCastResetEnvironment");

	ADarwinEnvironmentManager_NetMultiCastResetEnvironment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.MultiCastUpdateParameters
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          fog                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          snow                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           automatic                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          timeSpeed                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Acceleration                   (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::MultiCastUpdateParameters(float Time, float fog, float snow, bool automatic, float timeSpeed, float Acceleration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.MultiCastUpdateParameters");

	ADarwinEnvironmentManager_MultiCastUpdateParameters_Params params;
	params.Time = Time;
	params.fog = fog;
	params.snow = snow;
	params.automatic = automatic;
	params.timeSpeed = timeSpeed;
	params.Acceleration = Acceleration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManageSunAndMoon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDarwinEnvironmentProfile* BeginProfile                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UDarwinEnvironmentProfile* EndProfile                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADarwinEnvironmentManager::ManageSunAndMoon(class UDarwinEnvironmentProfile* BeginProfile, class UDarwinEnvironmentProfile* EndProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManageSunAndMoon");

	ADarwinEnvironmentManager_ManageSunAndMoon_Params params;
	params.BeginProfile = BeginProfile;
	params.EndProfile = EndProfile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManagePostProcessSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDarwinEnvironmentProfile* BeginProfile                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UDarwinEnvironmentProfile* EndProfile                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADarwinEnvironmentManager::ManagePostProcessSettings(class UDarwinEnvironmentProfile* BeginProfile, class UDarwinEnvironmentProfile* EndProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManagePostProcessSettings");

	ADarwinEnvironmentManager_ManagePostProcessSettings_Params params;
	params.BeginProfile = BeginProfile;
	params.EndProfile = EndProfile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManageNothernLights
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::ManageNothernLights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManageNothernLights");

	ADarwinEnvironmentManager_ManageNothernLights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManageLightings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::ManageLightings(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManageLightings");

	ADarwinEnvironmentManager_ManageLightings_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManageLight
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULightComponent*         Light                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FLinearColor            BeginColor                     (Parm, IsPlainOldData)
// struct FLinearColor            EndColor                       (Parm, IsPlainOldData)
// float                          BeginIntensity                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          EndIntensity                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          power                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEarthLimit                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          bSunInterColor                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            SunInterColor                  (Parm, IsPlainOldData)

void ADarwinEnvironmentManager::ManageLight(class ULightComponent* Light, const struct FLinearColor& BeginColor, const struct FLinearColor& EndColor, float BeginIntensity, float EndIntensity, float power, bool bEarthLimit, float bSunInterColor, const struct FLinearColor& SunInterColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManageLight");

	ADarwinEnvironmentManager_ManageLight_Params params;
	params.Light = Light;
	params.BeginColor = BeginColor;
	params.EndColor = EndColor;
	params.BeginIntensity = BeginIntensity;
	params.EndIntensity = EndIntensity;
	params.power = power;
	params.bEarthLimit = bEarthLimit;
	params.bSunInterColor = bSunInterColor;
	params.SunInterColor = SunInterColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManageExponentialFog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDarwinEnvironmentProfile* BeginProfile                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UDarwinEnvironmentProfile* EndProfile                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADarwinEnvironmentManager::ManageExponentialFog(class UDarwinEnvironmentProfile* BeginProfile, class UDarwinEnvironmentProfile* EndProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManageExponentialFog");

	ADarwinEnvironmentManager_ManageExponentialFog_Params params;
	params.BeginProfile = BeginProfile;
	params.EndProfile = EndProfile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManageEpicStormFoPlayers
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::ManageEpicStormFoPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManageEpicStormFoPlayers");

	ADarwinEnvironmentManager_ManageEpicStormFoPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManageEpicStorm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::ManageEpicStorm(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManageEpicStorm");

	ADarwinEnvironmentManager_ManageEpicStorm_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManageEnvironment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDarwinEnvironmentProfile* BeginProfile                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UDarwinEnvironmentProfile* EndProfile                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADarwinEnvironmentManager::ManageEnvironment(class UDarwinEnvironmentProfile* BeginProfile, class UDarwinEnvironmentProfile* EndProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManageEnvironment");

	ADarwinEnvironmentManager_ManageEnvironment_Params params;
	params.BeginProfile = BeginProfile;
	params.EndProfile = EndProfile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManageClouds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::ManageClouds(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManageClouds");

	ADarwinEnvironmentManager_ManageClouds_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManageAtmosphericFog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDarwinEnvironmentProfile* BeginProfile                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UDarwinEnvironmentProfile* EndProfile                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADarwinEnvironmentManager::ManageAtmosphericFog(class UDarwinEnvironmentProfile* BeginProfile, class UDarwinEnvironmentProfile* EndProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManageAtmosphericFog");

	ADarwinEnvironmentManager_ManageAtmosphericFog_Params params;
	params.BeginProfile = BeginProfile;
	params.EndProfile = EndProfile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.ManageAmbianceLights
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDarwinEnvironmentProfile* BeginProfile                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UDarwinEnvironmentProfile* EndProfile                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADarwinEnvironmentManager::ManageAmbianceLights(class UDarwinEnvironmentProfile* BeginProfile, class UDarwinEnvironmentProfile* EndProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.ManageAmbianceLights");

	ADarwinEnvironmentManager_ManageAmbianceLights_Params params;
	params.BeginProfile = BeginProfile;
	params.EndProfile = EndProfile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.InitializeSceneReferences
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::InitializeSceneReferences()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.InitializeSceneReferences");

	ADarwinEnvironmentManager_InitializeSceneReferences_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.IncreaseSnowIntensity
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::IncreaseSnowIntensity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.IncreaseSnowIntensity");

	ADarwinEnvironmentManager_IncreaseSnowIntensity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.IncreaseFogIntensity
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::IncreaseFogIntensity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.IncreaseFogIntensity");

	ADarwinEnvironmentManager_IncreaseFogIntensity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.IncreaseDayTime
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::IncreaseDayTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.IncreaseDayTime");

	ADarwinEnvironmentManager_IncreaseDayTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.GetStormRelativeTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADarwinEnvironmentManager::GetStormRelativeTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.GetStormRelativeTime");

	ADarwinEnvironmentManager_GetStormRelativeTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.GetStormParticlesOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ADarwinEnvironmentManager::GetStormParticlesOffset(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.GetStormParticlesOffset");

	ADarwinEnvironmentManager_GetStormParticlesOffset_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.GetStormIntensityFromRelativeTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADarwinEnvironmentManager::GetStormIntensityFromRelativeTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.GetStormIntensityFromRelativeTime");

	ADarwinEnvironmentManager_GetStormIntensityFromRelativeTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.GetSnowIntensityFromRelativeTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADarwinEnvironmentManager::GetSnowIntensityFromRelativeTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.GetSnowIntensityFromRelativeTime");

	ADarwinEnvironmentManager_GetSnowIntensityFromRelativeTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.GetSnowIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADarwinEnvironmentManager::GetSnowIntensity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.GetSnowIntensity");

	ADarwinEnvironmentManager_GetSnowIntensity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.GetLightingIntensityFromVideoSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADarwinEnvironmentManager::GetLightingIntensityFromVideoSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.GetLightingIntensityFromVideoSettings");

	ADarwinEnvironmentManager_GetLightingIntensityFromVideoSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.GetFogIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADarwinEnvironmentManager::GetFogIntensity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.GetFogIntensity");

	ADarwinEnvironmentManager_GetFogIntensity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.GetFogColorFromLightColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            LightColor                     (Parm, IsPlainOldData)
// float                          LightIntensity                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Desaturation                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor ADarwinEnvironmentManager::GetFogColorFromLightColor(const struct FLinearColor& LightColor, float LightIntensity, float Intensity, float Desaturation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.GetFogColorFromLightColor");

	ADarwinEnvironmentManager_GetFogColorFromLightColor_Params params;
	params.LightColor = LightColor;
	params.LightIntensity = LightIntensity;
	params.Intensity = Intensity;
	params.Desaturation = Desaturation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.GetDayTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADarwinEnvironmentManager::GetDayTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.GetDayTime");

	ADarwinEnvironmentManager_GetDayTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.GetDarwinController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADarwinController*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADarwinController* ADarwinEnvironmentManager::GetDarwinController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.GetDarwinController");

	ADarwinEnvironmentManager_GetDarwinController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.EventUpdateStormIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::EventUpdateStormIntensity(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventUpdateStormIntensity");

	ADarwinEnvironmentManager_EventUpdateStormIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventUpdateSkySphere
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          sun_brightness                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          clouds_opacity                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          stars_brightness               (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::EventUpdateSkySphere(float sun_brightness, float clouds_opacity, float stars_brightness)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventUpdateSkySphere");

	ADarwinEnvironmentManager_EventUpdateSkySphere_Params params;
	params.sun_brightness = sun_brightness;
	params.clouds_opacity = clouds_opacity;
	params.stars_brightness = stars_brightness;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventUpdateAllParticlesSunDirection
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Direction                      (Parm, IsPlainOldData)

void ADarwinEnvironmentManager::EventUpdateAllParticlesSunDirection(const struct FVector& Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventUpdateAllParticlesSunDirection");

	ADarwinEnvironmentManager_EventUpdateAllParticlesSunDirection_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventUpdateAllParticlesSunColor
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor            Color                          (Parm, IsPlainOldData)

void ADarwinEnvironmentManager::EventUpdateAllParticlesSunColor(const struct FLinearColor& Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventUpdateAllParticlesSunColor");

	ADarwinEnvironmentManager_EventUpdateAllParticlesSunColor_Params params;
	params.Color = Color;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventUpdateAllParticlesStormIntensity
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::EventUpdateAllParticlesStormIntensity(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventUpdateAllParticlesStormIntensity");

	ADarwinEnvironmentManager_EventUpdateAllParticlesStormIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventUpdateAllParticlesFogColor
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor            Color                          (Parm, IsPlainOldData)

void ADarwinEnvironmentManager::EventUpdateAllParticlesFogColor(const struct FLinearColor& Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventUpdateAllParticlesFogColor");

	ADarwinEnvironmentManager_EventUpdateAllParticlesFogColor_Params params;
	params.Color = Color;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventThunder
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)

void ADarwinEnvironmentManager::EventThunder(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventThunder");

	ADarwinEnvironmentManager_EventThunder_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventSpawnLightningsRow
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            RowIndex                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::EventSpawnLightningsRow(int RowIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventSpawnLightningsRow");

	ADarwinEnvironmentManager_EventSpawnLightningsRow_Params params;
	params.RowIndex = RowIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventSpawnCloudsRow
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            RowIndex                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::EventSpawnCloudsRow(int RowIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventSpawnCloudsRow");

	ADarwinEnvironmentManager_EventSpawnCloudsRow_Params params;
	params.RowIndex = RowIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventSpawnBirds
// (Event, Public, BlueprintEvent)

void ADarwinEnvironmentManager::EventSpawnBirds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventSpawnBirds");

	ADarwinEnvironmentManager_EventSpawnBirds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventResetEnvironment
// (Event, Public, BlueprintEvent)

void ADarwinEnvironmentManager::EventResetEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventResetEnvironment");

	ADarwinEnvironmentManager_EventResetEnvironment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventLaunchEpicStorm
// (Event, Public, BlueprintEvent)

void ADarwinEnvironmentManager::EventLaunchEpicStorm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventLaunchEpicStorm");

	ADarwinEnvironmentManager_EventLaunchEpicStorm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventDestroyCloudsAndLightnings
// (Event, Public, BlueprintEvent)

void ADarwinEnvironmentManager::EventDestroyCloudsAndLightnings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventDestroyCloudsAndLightnings");

	ADarwinEnvironmentManager_EventDestroyCloudsAndLightnings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventCheckInvalidSceneRef
// (Event, Public, BlueprintEvent)

void ADarwinEnvironmentManager::EventCheckInvalidSceneRef()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventCheckInvalidSceneRef");

	ADarwinEnvironmentManager_EventCheckInvalidSceneRef_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EventCheckAndInitSceneReferencesBP
// (Event, Public, BlueprintEvent)

void ADarwinEnvironmentManager::EventCheckAndInitSceneReferencesBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EventCheckAndInitSceneReferencesBP");

	ADarwinEnvironmentManager_EventCheckAndInitSceneReferencesBP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.EnvironmentTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinEnvironmentManager::EnvironmentTick(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.EnvironmentTick");

	ADarwinEnvironmentManager_EnvironmentTick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.DesaturateColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            Color                          (Parm, IsPlainOldData)
// float                          Desaturation                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor ADarwinEnvironmentManager::DesaturateColor(const struct FLinearColor& Color, float Desaturation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.DesaturateColor");

	ADarwinEnvironmentManager_DesaturateColor_Params params;
	params.Color = Color;
	params.Desaturation = Desaturation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinEnvironmentManager.DecreaseSnowIntensity
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::DecreaseSnowIntensity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.DecreaseSnowIntensity");

	ADarwinEnvironmentManager_DecreaseSnowIntensity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.DecreaseFogIntensity
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::DecreaseFogIntensity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.DecreaseFogIntensity");

	ADarwinEnvironmentManager_DecreaseFogIntensity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.DecreaseDayTime
// (Final, Native, Public, BlueprintCallable)

void ADarwinEnvironmentManager::DecreaseDayTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.DecreaseDayTime");

	ADarwinEnvironmentManager_DecreaseDayTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinEnvironmentManager.CheckInvalidSceneReferences
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinEnvironmentManager::CheckInvalidSceneReferences()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinEnvironmentManager.CheckInvalidSceneReferences");

	ADarwinEnvironmentManager_CheckInvalidSceneReferences_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinFoliageActor.AddLifeTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          LifeTime                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinFoliageActor::AddLifeTime(float LifeTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFoliageActor.AddLifeTime");

	ADarwinFoliageActor_AddLifeTime_Params params;
	params.LifeTime = LifeTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFoliageComponent.EventHideFoliageForDrone
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ActorLocation                  (Parm, IsPlainOldData)

void UDarwinFoliageComponent::EventHideFoliageForDrone(float DeltaTime, const struct FVector& ActorLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFoliageComponent.EventHideFoliageForDrone");

	UDarwinFoliageComponent_EventHideFoliageForDrone_Params params;
	params.DeltaTime = DeltaTime;
	params.ActorLocation = ActorLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFoliageComponent.EventHideFoliageForCharacter
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ActorLocation                  (Parm, IsPlainOldData)

void UDarwinFoliageComponent::EventHideFoliageForCharacter(float DeltaTime, const struct FVector& ActorLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFoliageComponent.EventHideFoliageForCharacter");

	UDarwinFoliageComponent_EventHideFoliageForCharacter_Params params;
	params.DeltaTime = DeltaTime;
	params.ActorLocation = ActorLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFootprint.OnRepInitialLifeSpan
// (Final, Native, Public)

void ADarwinFootprint::OnRepInitialLifeSpan()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFootprint.OnRepInitialLifeSpan");

	ADarwinFootprint_OnRepInitialLifeSpan_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFootprint.OnRep_DarwinCharacter
// (Final, Native, Private)

void ADarwinFootprint::OnRep_DarwinCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFootprint.OnRep_DarwinCharacter");

	ADarwinFootprint_OnRep_DarwinCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFootprintComponent.ServerDoFootprintStuff
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Loc                            (Parm, IsPlainOldData)
// struct FRotator                rot                            (Parm, IsPlainOldData)
// struct FName                   socket_name                    (Parm, ZeroConstructor, IsPlainOldData)
// EFootprintTypeEnum             Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinFootprintComponent::ServerDoFootprintStuff(const struct FVector& Loc, const struct FRotator& rot, const struct FName& socket_name, EFootprintTypeEnum Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFootprintComponent.ServerDoFootprintStuff");

	UDarwinFootprintComponent_ServerDoFootprintStuff_Params params;
	params.Loc = Loc;
	params.rot = rot;
	params.socket_name = socket_name;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFootprintComponent.ServerDeactivateHighlights
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinFootprintComponent::ServerDeactivateHighlights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFootprintComponent.ServerDeactivateHighlights");

	UDarwinFootprintComponent_ServerDeactivateHighlights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFootprintComponent.NetMulticastSnowHit
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinFootprintComponent::NetMulticastSnowHit(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFootprintComponent.NetMulticastSnowHit");

	UDarwinFootprintComponent_NetMulticastSnowHit_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFootprintComponent.NetMulticastFootStepSound
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// EFootprintTypeEnum             Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   socket_name                    (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinFootprintComponent::NetMulticastFootStepSound(const struct FVector& Loc, EFootprintTypeEnum Type, const struct FName& socket_name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFootprintComponent.NetMulticastFootStepSound");

	UDarwinFootprintComponent_NetMulticastFootStepSound_Params params;
	params.Loc = Loc;
	params.Type = Type;
	params.socket_name = socket_name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFootprintComponent.NetMulticastDeactivateHighlights
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void UDarwinFootprintComponent::NetMulticastDeactivateHighlights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFootprintComponent.NetMulticastDeactivateHighlights");

	UDarwinFootprintComponent_NetMulticastDeactivateHighlights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFootprintComponent.EventSimulatedFootStepSound
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        CharacterOwner                 (Parm, ZeroConstructor, IsPlainOldData)
// EFootprintTypeEnum             Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinFootprintComponent::EventSimulatedFootStepSound(class ADarwinCharacter* CharacterOwner, EFootprintTypeEnum Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFootprintComponent.EventSimulatedFootStepSound");

	UDarwinFootprintComponent_EventSimulatedFootStepSound_Params params;
	params.CharacterOwner = CharacterOwner;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFootprintComponent.EventLocalFootStepSound
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        CharacterOwner                 (Parm, ZeroConstructor, IsPlainOldData)
// EFootprintTypeEnum             Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinFootprintComponent::EventLocalFootStepSound(class ADarwinCharacter* CharacterOwner, EFootprintTypeEnum Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFootprintComponent.EventLocalFootStepSound");

	UDarwinFootprintComponent_EventLocalFootStepSound_Params params;
	params.CharacterOwner = CharacterOwner;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinForcefieldPower.NetMulticastReflectionActivated
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinForcefieldPower::NetMulticastReflectionActivated(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinForcefieldPower.NetMulticastReflectionActivated");

	UDarwinForcefieldPower_NetMulticastReflectionActivated_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinForcefieldPower.EventReflectionActivated
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinForcefieldPower::EventReflectionActivated(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinForcefieldPower.EventReflectionActivated");

	UDarwinForcefieldPower_EventReflectionActivated_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFriendPartyManager.LeaveParty
// (Native, Public, BlueprintCallable)

void UDarwinFriendPartyManager::LeaveParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFriendPartyManager.LeaveParty");

	UDarwinFriendPartyManager_LeaveParty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinFriendPartyManager.IsPartyOwner
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinFriendPartyManager::IsPartyOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFriendPartyManager.IsPartyOwner");

	UDarwinFriendPartyManager_IsPartyOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinFriendPartyManager.InviteFriend
// (Native, Public, BlueprintCallable)

void UDarwinFriendPartyManager::InviteFriend()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinFriendPartyManager.InviteFriend");

	UDarwinFriendPartyManager_InviteFriend_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameInstance.TravelToURL
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 URL                            (Parm, ZeroConstructor)
// EDarwinRoleEnum                Role                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinGameInstance::TravelToURL(const struct FString& URL, EDarwinRoleEnum Role)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameInstance.TravelToURL");

	UDarwinGameInstance_TravelToURL_Params params;
	params.URL = URL;
	params.Role = Role;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameInstance.ShowLoadingScreen
// (Final, Native, Public, BlueprintCallable)

void UDarwinGameInstance::ShowLoadingScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameInstance.ShowLoadingScreen");

	UDarwinGameInstance_ShowLoadingScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameInstance.SearchGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 IP                             (Parm, ZeroConstructor)

void UDarwinGameInstance::SearchGame(const struct FString& IP)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameInstance.SearchGame");

	UDarwinGameInstance_SearchGame_Params params;
	params.IP = IP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameInstance.SaveGame
// (Final, Native, Public, BlueprintCallable)

void UDarwinGameInstance::SaveGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameInstance.SaveGame");

	UDarwinGameInstance_SaveGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameInstance.ResetSaveGame
// (Final, Native, Public, BlueprintCallable)

void UDarwinGameInstance::ResetSaveGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameInstance.ResetSaveGame");

	UDarwinGameInstance_ResetSaveGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameInstance.LoadGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           apply                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinGameInstance::LoadGame(bool apply)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameInstance.LoadGame");

	UDarwinGameInstance_LoadGame_Params params;
	params.apply = apply;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameInstance.LeaveVivoxGameChannel
// (Final, Native, Public, BlueprintCallable)

void UDarwinGameInstance::LeaveVivoxGameChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameInstance.LeaveVivoxGameChannel");

	UDarwinGameInstance_LeaveVivoxGameChannel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameInstance.JoinSession
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FBlueprintSessionResult BlueprintSessionResult         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinGameInstance::JoinSession(const struct FBlueprintSessionResult& BlueprintSessionResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameInstance.JoinSession");

	UDarwinGameInstance_JoinSession_Params params;
	params.BlueprintSessionResult = BlueprintSessionResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameInstance.GotoMainMenu
// (Final, Native, Public, BlueprintCallable)

void UDarwinGameInstance::GotoMainMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameInstance.GotoMainMenu");

	UDarwinGameInstance_GotoMainMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameInstance.CancelSearchGame
// (Final, Native, Public, BlueprintCallable)

void UDarwinGameInstance::CancelSearchGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameInstance.CancelSearchGame");

	UDarwinGameInstance_CancelSearchGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameInstance.ApplySettings
// (Final, Native, Public, BlueprintCallable)

void UDarwinGameInstance::ApplySettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameInstance.ApplySettings");

	UDarwinGameInstance_ApplySettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameplayStatics.WithSteam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinGameplayStatics::STATIC_WithSteam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.WithSteam");

	UDarwinGameplayStatics_WithSteam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.WithEditor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinGameplayStatics::STATIC_WithEditor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.WithEditor");

	UDarwinGameplayStatics_WithEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.SaveStringToFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 Str                            (Parm, ZeroConstructor)
// struct FString                 Filename                       (Parm, ZeroConstructor)
// bool                           bAppend                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinGameplayStatics::STATIC_SaveStringToFile(const struct FString& Str, const struct FString& Filename, bool bAppend)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.SaveStringToFile");

	UDarwinGameplayStatics_SaveStringToFile_Params params;
	params.Str = Str;
	params.Filename = Filename;
	params.bAppend = bAppend;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.NoAutomaticLoadSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinGameplayStatics::STATIC_NoAutomaticLoadSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.NoAutomaticLoadSettings");

	UDarwinGameplayStatics_NoAutomaticLoadSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.LoadFileToString
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 Str                            (Parm, OutParm, ZeroConstructor)
// struct FString                 Filename                       (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinGameplayStatics::STATIC_LoadFileToString(const struct FString& Filename, struct FString* Str)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.LoadFileToString");

	UDarwinGameplayStatics_LoadFileToString_Params params;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Str != nullptr)
		*Str = params.Str;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.IsShipping
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinGameplayStatics::STATIC_IsShipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.IsShipping");

	UDarwinGameplayStatics_IsShipping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.IsLAN
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinGameplayStatics::STATIC_IsLAN()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.IsLAN");

	UDarwinGameplayStatics_IsLAN_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.IsE3
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinGameplayStatics::STATIC_IsE3()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.IsE3");

	UDarwinGameplayStatics_IsE3_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.IsConsole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinGameplayStatics::STATIC_IsConsole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.IsConsole");

	UDarwinGameplayStatics_IsConsole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.GetLANIP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UDarwinGameplayStatics::STATIC_GetLANIP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.GetLANIP");

	UDarwinGameplayStatics_GetLANIP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.GetDarwinVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UDarwinGameplayStatics::STATIC_GetDarwinVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.GetDarwinVersion");

	UDarwinGameplayStatics_GetDarwinVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.GetCurrentLevelFullName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UDarwinGameplayStatics::STATIC_GetCurrentLevelFullName(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.GetCurrentLevelFullName");

	UDarwinGameplayStatics_GetCurrentLevelFullName_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameplayStatics.DarwinConsoleCommand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Command                        (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinGameplayStatics::STATIC_DarwinConsoleCommand(class UWorld* World, const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameplayStatics.DarwinConsoleCommand");

	UDarwinGameplayStatics_DarwinConsoleCommand_Params params;
	params.World = World;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.UnlockAllItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           onlineItemsOnly                (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinGameState::UnlockAllItems(bool onlineItemsOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.UnlockAllItems");

	ADarwinGameState_UnlockAllItems_Params params;
	params.onlineItemsOnly = onlineItemsOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.RestartMap
// (Final, Native, Public, BlueprintCallable)

void ADarwinGameState::RestartMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.RestartMap");

	ADarwinGameState_RestartMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.ResetItemNew
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 itemUniqueId                   (Parm, ZeroConstructor)

void ADarwinGameState::ResetItemNew(const struct FString& itemUniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.ResetItemNew");

	ADarwinGameState_ResetItemNew_Params params;
	params.itemUniqueId = itemUniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.OpenLootBox
// (Final, Native, Public, BlueprintCallable)

void ADarwinGameState::OpenLootBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.OpenLootBox");

	ADarwinGameState_OpenLootBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.OnRepGameStarted
// (Final, Native, Public)

void ADarwinGameState::OnRepGameStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.OnRepGameStarted");

	ADarwinGameState_OnRepGameStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.OnRepActiveRessources
// (Final, Native, Public)

void ADarwinGameState::OnRepActiveRessources()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.OnRepActiveRessources");

	ADarwinGameState_OnRepActiveRessources_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.OnRepActiveLoot
// (Final, Native, Public)

void ADarwinGameState::OnRepActiveLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.OnRepActiveLoot");

	ADarwinGameState_OnRepActiveLoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastStartSDSlomo
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinGameState::NetMulticastStartSDSlomo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastStartSDSlomo");

	ADarwinGameState_NetMulticastStartSDSlomo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastStartGravityStorm
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinGameState::NetMulticastStartGravityStorm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastStartGravityStorm");

	ADarwinGameState_NetMulticastStartGravityStorm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastSetBloodPactSuitColors
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinGameState::NetMulticastSetBloodPactSuitColors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastSetBloodPactSuitColors");

	ADarwinGameState_NetMulticastSetBloodPactSuitColors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastOnGameStart
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinGameState::NetMulticastOnGameStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastOnGameStart");

	ADarwinGameState_NetMulticastOnGameStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastInitiateBloodPactMode
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinGameState::NetMulticastInitiateBloodPactMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastInitiateBloodPactMode");

	ADarwinGameState_NetMulticastInitiateBloodPactMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastEndGameStatsReady
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FString                 PlayerId                       (Parm, ZeroConstructor)
// struct FDarwinProfile          playerPofile                   (ConstParm, Parm, ReferenceParm)
// struct FDarwinCareerStats      NewCareerStats                 (ConstParm, Parm, ReferenceParm)
// struct FDarwinLastMatchProgression ProgressionUpdated             (ConstParm, Parm, ReferenceParm)

void ADarwinGameState::NetMulticastEndGameStatsReady(const struct FString& PlayerId, const struct FDarwinProfile& playerPofile, const struct FDarwinCareerStats& NewCareerStats, const struct FDarwinLastMatchProgression& ProgressionUpdated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastEndGameStatsReady");

	ADarwinGameState_NetMulticastEndGameStatsReady_Params params;
	params.PlayerId = PlayerId;
	params.playerPofile = playerPofile;
	params.NewCareerStats = NewCareerStats;
	params.ProgressionUpdated = ProgressionUpdated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastDarwinFootstepsOn
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinGameState::NetMulticastDarwinFootstepsOn(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastDarwinFootstepsOn");

	ADarwinGameState_NetMulticastDarwinFootstepsOn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastCreateBloodPactDuo
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FDarwinBloodPactDuo     bloodPactDuo                   (ConstParm, Parm, ReferenceParm)

void ADarwinGameState::NetMulticastCreateBloodPactDuo(const struct FDarwinBloodPactDuo& bloodPactDuo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastCreateBloodPactDuo");

	ADarwinGameState_NetMulticastCreateBloodPactDuo_Params params;
	params.bloodPactDuo = bloodPactDuo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastComputeBloodPactRankOnDeath
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        deadCharacter                  (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinGameState::NetMulticastComputeBloodPactRankOnDeath(class ADarwinCharacter* deadCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastComputeBloodPactRankOnDeath");

	ADarwinGameState_NetMulticastComputeBloodPactRankOnDeath_Params params;
	params.deadCharacter = deadCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastCheer
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void ADarwinGameState::NetMulticastCheer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastCheer");

	ADarwinGameState_NetMulticastCheer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastBroacastGameCountdownStartedEvent
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinGameState::NetMulticastBroacastGameCountdownStartedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastBroacastGameCountdownStartedEvent");

	ADarwinGameState_NetMulticastBroacastGameCountdownStartedEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastBoo
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void ADarwinGameState::NetMulticastBoo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastBoo");

	ADarwinGameState_NetMulticastBoo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.NetMulticastAdvertiseWinner
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        winner                         (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        loserCharacter                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSuicide                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinGameState::NetMulticastAdvertiseWinner(class ADarwinCharacter* winner, class ADarwinCharacter* loserCharacter, bool bSuicide)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.NetMulticastAdvertiseWinner");

	ADarwinGameState_NetMulticastAdvertiseWinner_Params params;
	params.winner = winner;
	params.loserCharacter = loserCharacter;
	params.bSuicide = bSuicide;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.LockAllItems
// (Final, Native, Public, BlueprintCallable)

void ADarwinGameState::LockAllItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.LockAllItems");

	ADarwinGameState_LockAllItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.IsSDSlomoOn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinGameState::IsSDSlomoOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.IsSDSlomoOn");

	ADarwinGameState_IsSDSlomoOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.IsItemUnlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 itemUniqueId                   (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinGameState::IsItemUnlocked(const struct FString& itemUniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.IsItemUnlocked");

	ADarwinGameState_IsItemUnlocked_Params params;
	params.itemUniqueId = itemUniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.IsItemNew
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 itemUniqueId                   (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinGameState::IsItemNew(const struct FString& itemUniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.IsItemNew");

	ADarwinGameState_IsItemNew_Params params;
	params.itemUniqueId = itemUniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.IsItemDefault
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 itemUniqueId                   (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinGameState::IsItemDefault(const struct FString& itemUniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.IsItemDefault");

	ADarwinGameState_IsItemDefault_Params params;
	params.itemUniqueId = itemUniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.IsGravityStormOn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinGameState::IsGravityStormOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.IsGravityStormOn");

	ADarwinGameState_IsGravityStormOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.HasNewItemInOutfitTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerBodyType                BodyType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinGameState::HasNewItemInOutfitTab(EPlayerBodyType BodyType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.HasNewItemInOutfitTab");

	ADarwinGameState_HasNewItemInOutfitTab_Params params;
	params.BodyType = BodyType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.HasNewItemInCharacterTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerBodyType                BodyType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinGameState::HasNewItemInCharacterTab(EPlayerBodyType BodyType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.HasNewItemInCharacterTab");

	ADarwinGameState_HasNewItemInCharacterTab_Params params;
	params.BodyType = BodyType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.HasNewItemForItemType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerBodyType                BodyType                       (Parm, ZeroConstructor, IsPlainOldData)
// EPlayerCustomizationOption     customizationPart              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinGameState::HasNewItemForItemType(EPlayerBodyType BodyType, EPlayerCustomizationOption customizationPart)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.HasNewItemForItemType");

	ADarwinGameState_HasNewItemForItemType_Params params;
	params.BodyType = BodyType;
	params.customizationPart = customizationPart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.HasNewItemForGender
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerBodyType                BodyType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinGameState::HasNewItemForGender(EPlayerBodyType BodyType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.HasNewItemForGender");

	ADarwinGameState_HasNewItemForGender_Params params;
	params.BodyType = BodyType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.HasNewItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinGameState::HasNewItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.HasNewItem");

	ADarwinGameState_HasNewItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.GiveMoney
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinGameState::GiveMoney(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.GiveMoney");

	ADarwinGameState_GiveMoney_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.GiveLootBox
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinGameState::GiveLootBox(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.GiveLootBox");

	ADarwinGameState_GiveLootBox_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.GetLocalCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADarwinCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADarwinCharacter* ADarwinGameState::GetLocalCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.GetLocalCharacter");

	ADarwinGameState_GetLocalCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.GetLocalCameraLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ADarwinGameState::GetLocalCameraLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.GetLocalCameraLocation");

	ADarwinGameState_GetLocalCameraLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.GetLocalCameraIsInLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinGameState::GetLocalCameraIsInLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.GetLocalCameraIsInLobby");

	ADarwinGameState_GetLocalCameraIsInLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinGameState.EventSDSlomoStart
// (Event, Public, BlueprintEvent)

void ADarwinGameState::EventSDSlomoStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.EventSDSlomoStart");

	ADarwinGameState_EventSDSlomoStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.EventSDSlomoEnd
// (Event, Public, BlueprintEvent)

void ADarwinGameState::EventSDSlomoEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.EventSDSlomoEnd");

	ADarwinGameState_EventSDSlomoEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.EventGravityStormStart
// (Event, Public, BlueprintEvent)

void ADarwinGameState::EventGravityStormStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.EventGravityStormStart");

	ADarwinGameState_EventGravityStormStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.EventGravityStormEnd
// (Event, Public, BlueprintEvent)

void ADarwinGameState::EventGravityStormEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.EventGravityStormEnd");

	ADarwinGameState_EventGravityStormEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.EventGameStarted
// (Event, Public, BlueprintEvent)

void ADarwinGameState::EventGameStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.EventGameStarted");

	ADarwinGameState_EventGameStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.EventGameCountdownStarted
// (Event, Public, BlueprintEvent)

void ADarwinGameState::EventGameCountdownStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.EventGameCountdownStarted");

	ADarwinGameState_EventGameCountdownStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.EventCheer
// (Event, Public, BlueprintEvent)

void ADarwinGameState::EventCheer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.EventCheer");

	ADarwinGameState_EventCheer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.EventBoo
// (Event, Public, BlueprintEvent)

void ADarwinGameState::EventBoo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.EventBoo");

	ADarwinGameState_EventBoo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGameState.BuyItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 unreal_id                      (Parm, ZeroConstructor)

void ADarwinGameState::BuyItem(const struct FString& unreal_id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGameState.BuyItem");

	ADarwinGameState_BuyItem_Params params;
	params.unreal_id = unreal_id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGate.NetMulticastGate
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinGate::NetMulticastGate(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGate.NetMulticastGate");

	ADarwinGate_NetMulticastGate_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGate.EventGate
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 StartLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 EndLoc                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinGate::EventGate(const struct FVector& StartLoc, const struct FVector& EndLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGate.EventGate");

	ADarwinGate_EventGate_Params params;
	params.StartLoc = StartLoc;
	params.EndLoc = EndLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGliderComponent.ServerTurnGliderOn
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinGliderComponent::ServerTurnGliderOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGliderComponent.ServerTurnGliderOn");

	UDarwinGliderComponent_ServerTurnGliderOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGliderComponent.ServerTurnGliderOff
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinGliderComponent::ServerTurnGliderOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGliderComponent.ServerTurnGliderOff");

	UDarwinGliderComponent_ServerTurnGliderOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGliderComponent.NetMulticastTurnGliderOn
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinGliderComponent::NetMulticastTurnGliderOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGliderComponent.NetMulticastTurnGliderOn");

	UDarwinGliderComponent_NetMulticastTurnGliderOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGliderComponent.NetMulticastTurnGliderOff
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinGliderComponent::NetMulticastTurnGliderOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGliderComponent.NetMulticastTurnGliderOff");

	UDarwinGliderComponent_NetMulticastTurnGliderOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGliderComponent.EventStopGlidingSimulated
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinGliderComponent::EventStopGlidingSimulated(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGliderComponent.EventStopGlidingSimulated");

	UDarwinGliderComponent_EventStopGlidingSimulated_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGliderComponent.EventStopGlidingLocal
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinGliderComponent::EventStopGlidingLocal(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGliderComponent.EventStopGlidingLocal");

	UDarwinGliderComponent_EventStopGlidingLocal_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGliderComponent.EventStartGlidingSimulated
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinGliderComponent::EventStartGlidingSimulated(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGliderComponent.EventStartGlidingSimulated");

	UDarwinGliderComponent_EventStartGlidingSimulated_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGliderComponent.EventStartGlidingLocal
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinGliderComponent::EventStartGlidingLocal(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGliderComponent.EventStartGlidingLocal");

	UDarwinGliderComponent_EventStartGlidingLocal_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGliderComponent.EventGliderLandedSimulated
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinGliderComponent::EventGliderLandedSimulated(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGliderComponent.EventGliderLandedSimulated");

	UDarwinGliderComponent_EventGliderLandedSimulated_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGliderComponent.EventGliderLandedLocal
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinGliderComponent::EventGliderLandedLocal(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGliderComponent.EventGliderLandedLocal");

	UDarwinGliderComponent_EventGliderLandedLocal_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenade.NetMulticastSnowBallHit
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        hitCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          dmg                            (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinGrenade::NetMulticastSnowBallHit(class ADarwinCharacter* hitCharacter, float dmg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenade.NetMulticastSnowBallHit");

	ADarwinGrenade_NetMulticastSnowBallHit_Params params;
	params.hitCharacter = hitCharacter;
	params.dmg = dmg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenade.NetMulticastReflectedByForcefield
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class ADarwinCharacter*        hitCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 impactLoc                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinGrenade::NetMulticastReflectedByForcefield(class ADarwinCharacter* hitCharacter, const struct FVector& impactLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenade.NetMulticastReflectedByForcefield");

	ADarwinGrenade_NetMulticastReflectedByForcefield_Params params;
	params.hitCharacter = hitCharacter;
	params.impactLoc = impactLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenade.NetMulticastPosition
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 vel                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinGrenade::NetMulticastPosition(const struct FVector& vel, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenade.NetMulticastPosition");

	ADarwinGrenade_NetMulticastPosition_Params params;
	params.vel = vel;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenade.NetMulticastInitializeGrenade
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            inGrenadeType                  (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinGrenade::NetMulticastInitializeGrenade(class ADarwinCharacter* Character, EDarwinItemTypeEnum inGrenadeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenade.NetMulticastInitializeGrenade");

	ADarwinGrenade_NetMulticastInitializeGrenade_Params params;
	params.Character = Character;
	params.inGrenadeType = inGrenadeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenade.NetMulticastHitByAxe
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class ADarwinCharacter*        hitCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 impactLoc                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinGrenade::NetMulticastHitByAxe(class ADarwinCharacter* hitCharacter, const struct FVector& impactLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenade.NetMulticastHitByAxe");

	ADarwinGrenade_NetMulticastHitByAxe_Params params;
	params.hitCharacter = hitCharacter;
	params.impactLoc = impactLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenade.NetMulticastGrenadeExplode
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class AActor*                  impactActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 impactLoc                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinGrenade::NetMulticastGrenadeExplode(class AActor* impactActor, const struct FVector& impactLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenade.NetMulticastGrenadeExplode");

	ADarwinGrenade_NetMulticastGrenadeExplode_Params params;
	params.impactActor = impactActor;
	params.impactLoc = impactLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenade.NetMulticastDrawTrace
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 trace_start                    (Parm, IsPlainOldData)
// struct FVector                 trace_end                      (Parm, IsPlainOldData)

void ADarwinGrenade::NetMulticastDrawTrace(const struct FVector& trace_start, const struct FVector& trace_end)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenade.NetMulticastDrawTrace");

	ADarwinGrenade_NetMulticastDrawTrace_Params params;
	params.trace_start = trace_start;
	params.trace_end = trace_end;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenade.EventReflectedByForcefield
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinGrenade::EventReflectedByForcefield(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenade.EventReflectedByForcefield");

	ADarwinGrenade_EventReflectedByForcefield_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenade.EventHitByAxe
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinGrenade::EventHitByAxe(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenade.EventHitByAxe");

	ADarwinGrenade_EventHitByAxe_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenade.EventGrenadeExplode
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinGrenade::EventGrenadeExplode(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenade.EventGrenadeExplode");

	ADarwinGrenade_EventGrenadeExplode_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenadeComponent.ServerGrenadeAimStop
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinGrenadeComponent::ServerGrenadeAimStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenadeComponent.ServerGrenadeAimStop");

	UDarwinGrenadeComponent_ServerGrenadeAimStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenadeComponent.ServerGrenadeAimStart
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EDarwinItemTypeEnum            grenadeType                    (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinGrenadeComponent::ServerGrenadeAimStart(EDarwinItemTypeEnum grenadeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenadeComponent.ServerGrenadeAimStart");

	UDarwinGrenadeComponent_ServerGrenadeAimStart_Params params;
	params.grenadeType = grenadeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenadeComponent.NetMulticastGrenadeAimStop
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinGrenadeComponent::NetMulticastGrenadeAimStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenadeComponent.NetMulticastGrenadeAimStop");

	UDarwinGrenadeComponent_NetMulticastGrenadeAimStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenadeComponent.NetMulticastGrenadeAimStart
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinItemTypeEnum            grenadeType                    (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinGrenadeComponent::NetMulticastGrenadeAimStart(EDarwinItemTypeEnum grenadeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenadeComponent.NetMulticastGrenadeAimStart");

	UDarwinGrenadeComponent_NetMulticastGrenadeAimStart_Params params;
	params.grenadeType = grenadeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenadeComponent.EventThrowGrenade
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinGrenadeComponent::EventThrowGrenade(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenadeComponent.EventThrowGrenade");

	UDarwinGrenadeComponent_EventThrowGrenade_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenadeComponent.EventThrowFail
// (Event, Public, BlueprintEvent)

void UDarwinGrenadeComponent::EventThrowFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenadeComponent.EventThrowFail");

	UDarwinGrenadeComponent_EventThrowFail_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinGrenadeComponent.EventShowGrenadeTargetLoc
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinGrenadeComponent::EventShowGrenadeTargetLoc(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinGrenadeComponent.EventShowGrenadeTargetLoc");

	UDarwinGrenadeComponent_EventShowGrenadeTargetLoc_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.ServerTryToHarvestRessource
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ADarwinRessource*        ressource                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinHarvestRessourceComponent::ServerTryToHarvestRessource(class ADarwinRessource* ressource)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.ServerTryToHarvestRessource");

	UDarwinHarvestRessourceComponent_ServerTryToHarvestRessource_Params params;
	params.ressource = ressource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.ServerHarvestingRessourceStart
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ADarwinRessource*        ressource                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinHarvestRessourceComponent::ServerHarvestingRessourceStart(class ADarwinRessource* ressource)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.ServerHarvestingRessourceStart");

	UDarwinHarvestRessourceComponent_ServerHarvestingRessourceStart_Params params;
	params.ressource = ressource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.ServerHarvestingRessourceFail
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinHarvestRessourceComponent::ServerHarvestingRessourceFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.ServerHarvestingRessourceFail");

	UDarwinHarvestRessourceComponent_ServerHarvestingRessourceFail_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.NetMulticastHarvestingRessourceSuccess
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            numberOfWoodHarvested          (Parm, ZeroConstructor, IsPlainOldData)
// int                            numberOfLeatherHarvested       (Parm, ZeroConstructor, IsPlainOldData)
// int                            numberOfEletronicHarvested     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinHarvestRessourceComponent::NetMulticastHarvestingRessourceSuccess(int numberOfWoodHarvested, int numberOfLeatherHarvested, int numberOfEletronicHarvested)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.NetMulticastHarvestingRessourceSuccess");

	UDarwinHarvestRessourceComponent_NetMulticastHarvestingRessourceSuccess_Params params;
	params.numberOfWoodHarvested = numberOfWoodHarvested;
	params.numberOfLeatherHarvested = numberOfLeatherHarvested;
	params.numberOfEletronicHarvested = numberOfEletronicHarvested;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.NetMulticastHarvestingRessourceStart
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinRessource*        ressource                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinHarvestRessourceComponent::NetMulticastHarvestingRessourceStart(class ADarwinRessource* ressource)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.NetMulticastHarvestingRessourceStart");

	UDarwinHarvestRessourceComponent_NetMulticastHarvestingRessourceStart_Params params;
	params.ressource = ressource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.NetMulticastHarvestingRessourceFail
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bAlreadyBeingHarvested         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinHarvestRessourceComponent::NetMulticastHarvestingRessourceFail(bool bAlreadyBeingHarvested)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.NetMulticastHarvestingRessourceFail");

	UDarwinHarvestRessourceComponent_NetMulticastHarvestingRessourceFail_Params params;
	params.bAlreadyBeingHarvested = bAlreadyBeingHarvested;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.GetHarvestedRessourceType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDarwinItemTypeEnum UDarwinHarvestRessourceComponent::GetHarvestedRessourceType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.GetHarvestedRessourceType");

	UDarwinHarvestRessourceComponent_GetHarvestedRessourceType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceSimulatedSuccess
// (Event, Public, BlueprintEvent)

void UDarwinHarvestRessourceComponent::EventHarvestingRessourceSimulatedSuccess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceSimulatedSuccess");

	UDarwinHarvestRessourceComponent_EventHarvestingRessourceSimulatedSuccess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceSimulatedStart
// (Event, Public, BlueprintEvent)

void UDarwinHarvestRessourceComponent::EventHarvestingRessourceSimulatedStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceSimulatedStart");

	UDarwinHarvestRessourceComponent_EventHarvestingRessourceSimulatedStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceSimulatedFail
// (Event, Public, BlueprintEvent)

void UDarwinHarvestRessourceComponent::EventHarvestingRessourceSimulatedFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceSimulatedFail");

	UDarwinHarvestRessourceComponent_EventHarvestingRessourceSimulatedFail_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceLocallyControlledSuccess
// (Event, Public, BlueprintEvent)

void UDarwinHarvestRessourceComponent::EventHarvestingRessourceLocallyControlledSuccess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceLocallyControlledSuccess");

	UDarwinHarvestRessourceComponent_EventHarvestingRessourceLocallyControlledSuccess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceLocallyControlledStart
// (Event, Public, BlueprintEvent)

void UDarwinHarvestRessourceComponent::EventHarvestingRessourceLocallyControlledStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceLocallyControlledStart");

	UDarwinHarvestRessourceComponent_EventHarvestingRessourceLocallyControlledStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceLocallyControlledFail
// (Event, Public, BlueprintEvent)

void UDarwinHarvestRessourceComponent::EventHarvestingRessourceLocallyControlledFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHarvestRessourceComponent.EventHarvestingRessourceLocallyControlledFail");

	UDarwinHarvestRessourceComponent_EventHarvestingRessourceLocallyControlledFail_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHealthComponent.NetMulticastTakeDamage
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinDamageTypeEnum          Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bKilled                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinHealthComponent::NetMulticastTakeDamage(float Damage, EDarwinDamageTypeEnum Type, class ADarwinCharacter* attacker, bool bKilled, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHealthComponent.NetMulticastTakeDamage");

	UDarwinHealthComponent_NetMulticastTakeDamage_Params params;
	params.Damage = Damage;
	params.Type = Type;
	params.attacker = attacker;
	params.bKilled = bKilled;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHealthComponent.NetMulticastHeal
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                          healAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinHealthComponent::NetMulticastHeal(float healAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHealthComponent.NetMulticastHeal");

	UDarwinHealthComponent_NetMulticastHeal_Params params;
	params.healAmount = healAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHealthComponent.GetHealthNormalized
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDarwinHealthComponent::GetHealthNormalized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHealthComponent.GetHealthNormalized");

	UDarwinHealthComponent_GetHealthNormalized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinHealthComponent.EventSimulatedTakeDamage
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinDamageTypeEnum          Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinHealthComponent::EventSimulatedTakeDamage(float Damage, EDarwinDamageTypeEnum Type, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHealthComponent.EventSimulatedTakeDamage");

	UDarwinHealthComponent_EventSimulatedTakeDamage_Params params;
	params.Damage = Damage;
	params.Type = Type;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHealthComponent.EventSimulatedHeal
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float                          healAmount                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinHealthComponent::EventSimulatedHeal(float healAmount, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHealthComponent.EventSimulatedHeal");

	UDarwinHealthComponent_EventSimulatedHeal_Params params;
	params.healAmount = healAmount;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHealthComponent.EventLocalTakeDamage
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinDamageTypeEnum          Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinHealthComponent::EventLocalTakeDamage(float Damage, EDarwinDamageTypeEnum Type, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHealthComponent.EventLocalTakeDamage");

	UDarwinHealthComponent_EventLocalTakeDamage_Params params;
	params.Damage = Damage;
	params.Type = Type;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHealthComponent.EventLocalHeal
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float                          healAmount                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinHealthComponent::EventLocalHeal(float healAmount, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHealthComponent.EventLocalHeal");

	UDarwinHealthComponent_EventLocalHeal_Params params;
	params.healAmount = healAmount;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHighlighter.SetDataValue
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinHighlighter::SetDataValue(int Index, const struct FVector& Location, float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHighlighter.SetDataValue");

	ADarwinHighlighter_SetDataValue_Params params;
	params.Index = Index;
	params.Location = Location;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinHighlighter.ResetAllValues
// (Final, Native, Public, BlueprintCallable)

void ADarwinHighlighter::ResetAllValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHighlighter.ResetAllValues");

	ADarwinHighlighter_ResetAllValues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHighlighter.RemoveDataValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinHighlighter::RemoveDataValue(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHighlighter.RemoveDataValue");

	ADarwinHighlighter_RemoveDataValue_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinHighlighter.RemoveData
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinHighlighter::RemoveData(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHighlighter.RemoveData");

	ADarwinHighlighter_RemoveData_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHighlighter.ReadAllPixels
// (Final, Native, Public, BlueprintCallable)

void ADarwinHighlighter::ReadAllPixels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHighlighter.ReadAllPixels");

	ADarwinHighlighter_ReadAllPixels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHighlighter.ReadAll
// (Event, Public, BlueprintEvent)

void ADarwinHighlighter::ReadAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHighlighter.ReadAll");

	ADarwinHighlighter_ReadAll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHighlighter.LocalTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinHighlighter::LocalTick(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHighlighter.LocalTick");

	ADarwinHighlighter_LocalTick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHighlighter.LocalBeginPlay
// (Event, Public, BlueprintEvent)

void ADarwinHighlighter::LocalBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHighlighter.LocalBeginPlay");

	ADarwinHighlighter_LocalBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHighlighter.AddDataValue
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADarwinHighlighter::AddDataValue(const struct FVector& Location, float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHighlighter.AddDataValue");

	ADarwinHighlighter_AddDataValue_Params params;
	params.Location = Location;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinHighlighter.AddData
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinHighlighter::AddData(const struct FVector& Location, float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHighlighter.AddData");

	ADarwinHighlighter_AddData_Params params;
	params.Location = Location;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHoloMap.UpdateProjectedTime
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinHoloMap::UpdateProjectedTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHoloMap.UpdateProjectedTime");

	ADarwinHoloMap_UpdateProjectedTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHoloMap.TransformLayers
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinHoloMap::TransformLayers(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHoloMap.TransformLayers");

	ADarwinHoloMap_TransformLayers_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinHoloMap.ChangeState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           projected                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinHoloMap::ChangeState(bool projected)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinHoloMap.ChangeState");

	ADarwinHoloMap_ChangeState_Params params;
	params.projected = projected;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.UpdateDamageFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::UpdateDamageFX(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.UpdateDamageFX");

	UDarwinInventoryComponent_UpdateDamageFX_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.ServerUsePack
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::ServerUsePack(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.ServerUsePack");

	UDarwinInventoryComponent_ServerUsePack_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.ServerUseGrenade
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::ServerUseGrenade(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.ServerUseGrenade");

	UDarwinInventoryComponent_ServerUseGrenade_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.ServerUseGliderTool
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::ServerUseGliderTool(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.ServerUseGliderTool");

	UDarwinInventoryComponent_ServerUseGliderTool_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.ServerUseCableHook
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::ServerUseCableHook(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.ServerUseCableHook");

	UDarwinInventoryComponent_ServerUseCableHook_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.ServerSpawnCraftableTool
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EDarwinItemTypeEnum            CraftableToolType              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::ServerSpawnCraftableTool(EDarwinItemTypeEnum CraftableToolType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.ServerSpawnCraftableTool");

	UDarwinInventoryComponent_ServerSpawnCraftableTool_Params params;
	params.CraftableToolType = CraftableToolType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.ServerRequestSpawnCraftableTool
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EDarwinItemTypeEnum            CraftableToolType              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::ServerRequestSpawnCraftableTool(EDarwinItemTypeEnum CraftableToolType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.ServerRequestSpawnCraftableTool");

	UDarwinInventoryComponent_ServerRequestSpawnCraftableTool_Params params;
	params.CraftableToolType = CraftableToolType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.ServerRemapInventoryItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            fromIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            toIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::ServerRemapInventoryItem(int fromIndex, int toIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.ServerRemapInventoryItem");

	UDarwinInventoryComponent_ServerRemapInventoryItem_Params params;
	params.fromIndex = fromIndex;
	params.toIndex = toIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.OnRepInventorySlots
// (Final, Native, Public)

void UDarwinInventoryComponent::OnRepInventorySlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.OnRepInventorySlots");

	UDarwinInventoryComponent_OnRepInventorySlots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.NetMulticastUsePack
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::NetMulticastUsePack(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.NetMulticastUsePack");

	UDarwinInventoryComponent_NetMulticastUsePack_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.NetMulticastUseGrenade
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::NetMulticastUseGrenade(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.NetMulticastUseGrenade");

	UDarwinInventoryComponent_NetMulticastUseGrenade_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.NetMulticastUseGliderTool
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::NetMulticastUseGliderTool(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.NetMulticastUseGliderTool");

	UDarwinInventoryComponent_NetMulticastUseGliderTool_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.NetMulticastUseCableHook
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::NetMulticastUseCableHook(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.NetMulticastUseCableHook");

	UDarwinInventoryComponent_NetMulticastUseCableHook_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.NetMulticastSpawnCraftableTool
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinItemTypeEnum            CraftableToolType              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::NetMulticastSpawnCraftableTool(EDarwinItemTypeEnum CraftableToolType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.NetMulticastSpawnCraftableTool");

	UDarwinInventoryComponent_NetMulticastSpawnCraftableTool_Params params;
	params.CraftableToolType = CraftableToolType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.NetMulticastRequestSpawnCraftableTool
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinItemTypeEnum            CraftableToolType              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::NetMulticastRequestSpawnCraftableTool(EDarwinItemTypeEnum CraftableToolType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.NetMulticastRequestSpawnCraftableTool");

	UDarwinInventoryComponent_NetMulticastRequestSpawnCraftableTool_Params params;
	params.CraftableToolType = CraftableToolType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.NetMulticastLooted
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinInventoryComponent::NetMulticastLooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.NetMulticastLooted");

	UDarwinInventoryComponent_NetMulticastLooted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventSimulatedSpawnCraftableToolFail
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// EDarwinItemTypeEnum            CraftableToolType              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::EventSimulatedSpawnCraftableToolFail(const struct FVector& Loc, EDarwinItemTypeEnum CraftableToolType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventSimulatedSpawnCraftableToolFail");

	UDarwinInventoryComponent_EventSimulatedSpawnCraftableToolFail_Params params;
	params.Loc = Loc;
	params.CraftableToolType = CraftableToolType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventSimulatedConsumedWarmthPacks
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinInventoryComponent::EventSimulatedConsumedWarmthPacks(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventSimulatedConsumedWarmthPacks");

	UDarwinInventoryComponent_EventSimulatedConsumedWarmthPacks_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventSimulatedConsumedStamPacks
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinInventoryComponent::EventSimulatedConsumedStamPacks(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventSimulatedConsumedStamPacks");

	UDarwinInventoryComponent_EventSimulatedConsumedStamPacks_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventSimulatedConsumedSpeedPacks
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinInventoryComponent::EventSimulatedConsumedSpeedPacks(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventSimulatedConsumedSpeedPacks");

	UDarwinInventoryComponent_EventSimulatedConsumedSpeedPacks_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventSimulatedConsumedHealthPacks
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinInventoryComponent::EventSimulatedConsumedHealthPacks(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventSimulatedConsumedHealthPacks");

	UDarwinInventoryComponent_EventSimulatedConsumedHealthPacks_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventLocalSpawnCraftableToolFail
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            CraftableToolType              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::EventLocalSpawnCraftableToolFail(class ADarwinCharacter* Character, EDarwinItemTypeEnum CraftableToolType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventLocalSpawnCraftableToolFail");

	UDarwinInventoryComponent_EventLocalSpawnCraftableToolFail_Params params;
	params.Character = Character;
	params.CraftableToolType = CraftableToolType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventLocalNoMoreWarmthPacks
// (Event, Public, BlueprintEvent)

void UDarwinInventoryComponent::EventLocalNoMoreWarmthPacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventLocalNoMoreWarmthPacks");

	UDarwinInventoryComponent_EventLocalNoMoreWarmthPacks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventLocalNoMoreStamPacks
// (Event, Public, BlueprintEvent)

void UDarwinInventoryComponent::EventLocalNoMoreStamPacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventLocalNoMoreStamPacks");

	UDarwinInventoryComponent_EventLocalNoMoreStamPacks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventLocalNoMoreSpeedPacks
// (Event, Public, BlueprintEvent)

void UDarwinInventoryComponent::EventLocalNoMoreSpeedPacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventLocalNoMoreSpeedPacks");

	UDarwinInventoryComponent_EventLocalNoMoreSpeedPacks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventLocalNoMoreHealthPacks
// (Event, Public, BlueprintEvent)

void UDarwinInventoryComponent::EventLocalNoMoreHealthPacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventLocalNoMoreHealthPacks");

	UDarwinInventoryComponent_EventLocalNoMoreHealthPacks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventLocalNoMoreCraftableTools
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            CraftableToolType              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::EventLocalNoMoreCraftableTools(EDarwinItemTypeEnum CraftableToolType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventLocalNoMoreCraftableTools");

	UDarwinInventoryComponent_EventLocalNoMoreCraftableTools_Params params;
	params.CraftableToolType = CraftableToolType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventLocalConsumedWarmthPacks
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::EventLocalConsumedWarmthPacks(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventLocalConsumedWarmthPacks");

	UDarwinInventoryComponent_EventLocalConsumedWarmthPacks_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventLocalConsumedStamPacks
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::EventLocalConsumedStamPacks(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventLocalConsumedStamPacks");

	UDarwinInventoryComponent_EventLocalConsumedStamPacks_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventLocalConsumedSpeedPacks
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::EventLocalConsumedSpeedPacks(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventLocalConsumedSpeedPacks");

	UDarwinInventoryComponent_EventLocalConsumedSpeedPacks_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventLocalConsumedHealthPacks
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::EventLocalConsumedHealthPacks(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventLocalConsumedHealthPacks");

	UDarwinInventoryComponent_EventLocalConsumedHealthPacks_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.EventLocalConsumedCraftableTool
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            CraftableToolType              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinInventoryComponent::EventLocalConsumedCraftableTool(EDarwinItemTypeEnum CraftableToolType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.EventLocalConsumedCraftableTool");

	UDarwinInventoryComponent_EventLocalConsumedCraftableTool_Params params;
	params.CraftableToolType = CraftableToolType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinInventoryComponent.CheckHiddenMaterials
// (Final, Native, Public, BlueprintCallable)

void UDarwinInventoryComponent::CheckHiddenMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinInventoryComponent.CheckHiddenMaterials");

	UDarwinInventoryComponent_CheckHiddenMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinItemType.IsWeaponPassiveBonus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsWeaponPassiveBonus(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsWeaponPassiveBonus");

	UDarwinItemType_IsWeaponPassiveBonus_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsSDPower
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsSDPower(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsSDPower");

	UDarwinItemType_IsSDPower_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsRessource
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsRessource(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsRessource");

	UDarwinItemType_IsRessource_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsPureClue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsPureClue(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsPureClue");

	UDarwinItemType_IsPureClue_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsPower
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsPower(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsPower");

	UDarwinItemType_IsPower_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsPassiveBonus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsPassiveBonus(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsPassiveBonus");

	UDarwinItemType_IsPassiveBonus_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsGrenade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsGrenade(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsGrenade");

	UDarwinItemType_IsGrenade_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsDeployableTool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsDeployableTool(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsDeployableTool");

	UDarwinItemType_IsDeployableTool_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsCraftableTool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsCraftableTool(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsCraftableTool");

	UDarwinItemType_IsCraftableTool_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsConsumable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsConsumable(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsConsumable");

	UDarwinItemType_IsConsumable_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsCoatPassiveBonus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsCoatPassiveBonus(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsCoatPassiveBonus");

	UDarwinItemType_IsCoatPassiveBonus_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsBootPassiveBonus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsBootPassiveBonus(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsBootPassiveBonus");

	UDarwinItemType_IsBootPassiveBonus_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.IsArrow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_IsArrow(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.IsArrow");

	UDarwinItemType_IsArrow_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetWeaponPassiveBonusArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetWeaponPassiveBonusArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetWeaponPassiveBonusArray");

	UDarwinItemType_GetWeaponPassiveBonusArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetSDPowerArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetSDPowerArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetSDPowerArray");

	UDarwinItemType_GetSDPowerArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetRessourceArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetRessourceArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetRessourceArray");

	UDarwinItemType_GetRessourceArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetPureClueArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetPureClueArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetPureClueArray");

	UDarwinItemType_GetPureClueArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetPowerArrayAndTeleport
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetPowerArrayAndTeleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetPowerArrayAndTeleport");

	UDarwinItemType_GetPowerArrayAndTeleport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetPowerArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetPowerArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetPowerArray");

	UDarwinItemType_GetPowerArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetPassiveBonusArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetPassiveBonusArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetPassiveBonusArray");

	UDarwinItemType_GetPassiveBonusArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetGrenadeArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetGrenadeArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetGrenadeArray");

	UDarwinItemType_GetGrenadeArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetDeployableToolArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetDeployableToolArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetDeployableToolArray");

	UDarwinItemType_GetDeployableToolArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetCraftableToolArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetCraftableToolArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetCraftableToolArray");

	UDarwinItemType_GetCraftableToolArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetConsumableArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetConsumableArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetConsumableArray");

	UDarwinItemType_GetConsumableArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetCoatPassiveBonusArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetCoatPassiveBonusArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetCoatPassiveBonusArray");

	UDarwinItemType_GetCoatPassiveBonusArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetBootPassiveBonusArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetBootPassiveBonusArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetBootPassiveBonusArray");

	UDarwinItemType_GetBootPassiveBonusArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.GetArrowArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EDarwinItemTypeEnum>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EDarwinItemTypeEnum> UDarwinItemType::STATIC_GetArrowArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.GetArrowArray");

	UDarwinItemType_GetArrowArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinItemType.CanBeInCraftwheel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinItemType::STATIC_CanBeInCraftwheel(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinItemType.CanBeInCraftwheel");

	UDarwinItemType_CanBeInCraftwheel_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinJumpingComponent.ServerJumpThroughWindow
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ADarwinWindow*           Window                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinJumpingComponent::ServerJumpThroughWindow(class ADarwinWindow* Window)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinJumpingComponent.ServerJumpThroughWindow");

	UDarwinJumpingComponent_ServerJumpThroughWindow_Params params;
	params.Window = Window;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinJumpingComponent.ServerJumpAction
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinJumpingComponent::ServerJumpAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinJumpingComponent.ServerJumpAction");

	UDarwinJumpingComponent_ServerJumpAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinJumpingComponent.ServerFinishJumpThroughWindow
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinJumpingComponent::ServerFinishJumpThroughWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinJumpingComponent.ServerFinishJumpThroughWindow");

	UDarwinJumpingComponent_ServerFinishJumpThroughWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinJumpingComponent.NetMulticastJumpThroughWindow
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinWindow*           Window                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinJumpingComponent::NetMulticastJumpThroughWindow(class ADarwinWindow* Window)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinJumpingComponent.NetMulticastJumpThroughWindow");

	UDarwinJumpingComponent_NetMulticastJumpThroughWindow_Params params;
	params.Window = Window;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinJumpingComponent.NetMulticastJumpAction
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinJumpingComponent::NetMulticastJumpAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinJumpingComponent.NetMulticastJumpAction");

	UDarwinJumpingComponent_NetMulticastJumpAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinJumpingComponent.NetMulticastFinishJumpThroughWindow
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinJumpingComponent::NetMulticastFinishJumpThroughWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinJumpingComponent.NetMulticastFinishJumpThroughWindow");

	UDarwinJumpingComponent_NetMulticastFinishJumpThroughWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinJumpingComponent.EventSimulatedJumpThroughWindow
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinJumpingComponent::EventSimulatedJumpThroughWindow(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinJumpingComponent.EventSimulatedJumpThroughWindow");

	UDarwinJumpingComponent_EventSimulatedJumpThroughWindow_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinJumpingComponent.EventSimulatedJump
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinJumpingComponent::EventSimulatedJump(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinJumpingComponent.EventSimulatedJump");

	UDarwinJumpingComponent_EventSimulatedJump_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinJumpingComponent.EventLocalJumpThroughWindow
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinJumpingComponent::EventLocalJumpThroughWindow(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinJumpingComponent.EventLocalJumpThroughWindow");

	UDarwinJumpingComponent_EventLocalJumpThroughWindow_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinJumpingComponent.EventLocalJump
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinJumpingComponent::EventLocalJump(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinJumpingComponent.EventLocalJump");

	UDarwinJumpingComponent_EventLocalJump_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinJumpingComponent.EventJumpLand
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinJumpingComponent::EventJumpLand(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinJumpingComponent.EventJumpLand");

	UDarwinJumpingComponent_EventJumpLand_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinKrank.IsKranki
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EKrankTypeEnum                 ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinKrank::STATIC_IsKranki(EKrankTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinKrank.IsKranki");

	UDarwinKrank_IsKranki_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinKrank.GetKrankiArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EKrankTypeEnum>         ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<EKrankTypeEnum> UDarwinKrank::STATIC_GetKrankiArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinKrank.GetKrankiArray");

	UDarwinKrank_GetKrankiArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinLobbyDrone.UpdateDroneRotator
// (Final, Native, Public, BlueprintCallable)

void ADarwinLobbyDrone::UpdateDroneRotator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.UpdateDroneRotator");

	ADarwinLobbyDrone_UpdateDroneRotator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLobbyDrone.UpdateDroneFromMaster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinLobbyDrone::UpdateDroneFromMaster(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.UpdateDroneFromMaster");

	ADarwinLobbyDrone_UpdateDroneFromMaster_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLobbyDrone.UpdateDroneFloating
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinLobbyDrone::UpdateDroneFloating(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.UpdateDroneFloating");

	ADarwinLobbyDrone_UpdateDroneFloating_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLobbyDrone.UpdateDrone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinLobbyDrone::UpdateDrone(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.UpdateDrone");

	ADarwinLobbyDrone_UpdateDrone_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLobbyDrone.RandomRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                           bRoll                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ADarwinLobbyDrone::RandomRotator(bool bRoll)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.RandomRotator");

	ADarwinLobbyDrone_RandomRotator_Params params;
	params.bRoll = bRoll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinLobbyDrone.FindNearestPlayerFromDrone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinLobbyDrone::FindNearestPlayerFromDrone(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.FindNearestPlayerFromDrone");

	ADarwinLobbyDrone_FindNearestPlayerFromDrone_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLobbyDrone.EventUpdateDroneRelativeRotation
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FRotator                Rotation                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinLobbyDrone::EventUpdateDroneRelativeRotation(const struct FRotator& Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.EventUpdateDroneRelativeRotation");

	ADarwinLobbyDrone_EventUpdateDroneRelativeRotation_Params params;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLobbyDrone.EventUpdateDroneRelativeLocation
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinLobbyDrone::EventUpdateDroneRelativeLocation(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.EventUpdateDroneRelativeLocation");

	ADarwinLobbyDrone_EventUpdateDroneRelativeLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLobbyDrone.EventUpdateDroneMaterial
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            MaterialIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinLobbyDrone::EventUpdateDroneMaterial(int MaterialIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.EventUpdateDroneMaterial");

	ADarwinLobbyDrone_EventUpdateDroneMaterial_Params params;
	params.MaterialIndex = MaterialIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLobbyDrone.EventSpawnTrail
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            drone_type                     (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinLobbyDrone::EventSpawnTrail(int drone_type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.EventSpawnTrail");

	ADarwinLobbyDrone_EventSpawnTrail_Params params;
	params.drone_type = drone_type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLobbyDrone.EventKillTrail
// (Event, Public, BlueprintEvent)

void ADarwinLobbyDrone::EventKillTrail()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.EventKillTrail");

	ADarwinLobbyDrone_EventKillTrail_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLobbyDrone.EventHitted
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 hit_direction                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinLobbyDrone::EventHitted(const struct FVector& hit_direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.EventHitted");

	ADarwinLobbyDrone_EventHitted_Params params;
	params.hit_direction = hit_direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLobbyDrone.DroneWaveMovement
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ADarwinLobbyDrone::DroneWaveMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLobbyDrone.DroneWaveMovement");

	ADarwinLobbyDrone_DroneWaveMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinLoot.OnRepYaw
// (Final, Native, Public)

void ADarwinLoot::OnRepYaw()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLoot.OnRepYaw");

	ADarwinLoot_OnRepYaw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLoot.OnRepLootAcquired
// (Final, Native, Public)

void ADarwinLoot::OnRepLootAcquired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLoot.OnRepLootAcquired");

	ADarwinLoot_OnRepLootAcquired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLoot.OnRepIsSpawned
// (Final, Native, Public)

void ADarwinLoot::OnRepIsSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLoot.OnRepIsSpawned");

	ADarwinLoot_OnRepIsSpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLoot.NetMulticastLootPickupBroadcast
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Number                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinLoot::NetMulticastLootPickupBroadcast(class ADarwinCharacter* Character, EDarwinItemTypeEnum ItemType, int Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLoot.NetMulticastLootPickupBroadcast");

	ADarwinLoot_NetMulticastLootPickupBroadcast_Params params;
	params.Character = Character;
	params.ItemType = ItemType;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLoot.NetMulticastLootPickedUp
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinLoot::NetMulticastLootPickedUp(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLoot.NetMulticastLootPickedUp");

	ADarwinLoot_NetMulticastLootPickedUp_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLoot.HighlightLoot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            stencil_value                  (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinLoot::HighlightLoot(bool enable, int stencil_value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLoot.HighlightLoot");

	ADarwinLoot_HighlightLoot_Params params;
	params.enable = enable;
	params.stencil_value = stencil_value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLoot.EventUpdateOpenRays
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinLoot::EventUpdateOpenRays(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLoot.EventUpdateOpenRays");

	ADarwinLoot_EventUpdateOpenRays_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLoot.EventLootReset
// (Event, Public, BlueprintEvent)

void ADarwinLoot::EventLootReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLoot.EventLootReset");

	ADarwinLoot_EventLootReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLoot.EventLootPickedUp
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinLoot::EventLootPickedUp(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLoot.EventLootPickedUp");

	ADarwinLoot_EventLootPickedUp_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinLoot.EventActivateOpenParticles
// (Event, Public, BlueprintEvent)

void ADarwinLoot::EventActivateOpenParticles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinLoot.EventActivateOpenParticles");

	ADarwinLoot_EventActivateOpenParticles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMagWall.NetMulticastSetDarwinCharacterOwner
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinMagWall::NetMulticastSetDarwinCharacterOwner(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMagWall.NetMulticastSetDarwinCharacterOwner");

	ADarwinMagWall_NetMulticastSetDarwinCharacterOwner_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.StopMatchmaking
// (Final, Native, Public, BlueprintCallable)

void UDarwinMainMenuWidget::StopMatchmaking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.StopMatchmaking");

	UDarwinMainMenuWidget_StopMatchmaking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.StartMatchmaking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinGameMode                GameMode                       (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinRoleEnum                PlayerRole                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinMainMenuWidget::StartMatchmaking(EDarwinGameMode GameMode, EDarwinRoleEnum PlayerRole)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.StartMatchmaking");

	UDarwinMainMenuWidget_StartMatchmaking_Params params;
	params.GameMode = GameMode;
	params.PlayerRole = PlayerRole;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.SetChosenRegion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 RegionName                     (Parm, ZeroConstructor)

void UDarwinMainMenuWidget::SetChosenRegion(const struct FString& RegionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.SetChosenRegion");

	UDarwinMainMenuWidget_SetChosenRegion_Params params;
	params.RegionName = RegionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.MixerConnectionCancelled
// (Final, Native, Public, BlueprintCallable)

void UDarwinMainMenuWidget::MixerConnectionCancelled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.MixerConnectionCancelled");

	UDarwinMainMenuWidget_MixerConnectionCancelled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.GetAutoRegion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UDarwinMainMenuWidget::GetAutoRegion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.GetAutoRegion");

	UDarwinMainMenuWidget_GetAutoRegion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMainMenuWidget.EventUpdateRegionPing
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 RegionName                     (Parm, ZeroConstructor)
// int                            ping                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinMainMenuWidget::EventUpdateRegionPing(const struct FString& RegionName, int ping)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventUpdateRegionPing");

	UDarwinMainMenuWidget_EventUpdateRegionPing_Params params;
	params.RegionName = RegionName;
	params.ping = ping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventUpdateChosenRegion
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 RegionName                     (Parm, ZeroConstructor)

void UDarwinMainMenuWidget::EventUpdateChosenRegion(const struct FString& RegionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventUpdateChosenRegion");

	UDarwinMainMenuWidget_EventUpdateChosenRegion_Params params;
	params.RegionName = RegionName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventSetServerVersion
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 ServerVersion                  (Parm, ZeroConstructor)

void UDarwinMainMenuWidget::EventSetServerVersion(const struct FString& ServerVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventSetServerVersion");

	UDarwinMainMenuWidget_EventSetServerVersion_Params params;
	params.ServerVersion = ServerVersion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventSessionNotFound
// (Event, Public, BlueprintEvent)

void UDarwinMainMenuWidget::EventSessionNotFound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventSessionNotFound");

	UDarwinMainMenuWidget_EventSessionNotFound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventSessionFound
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FBlueprintSessionResult BlueprintSessionResult         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FString                 host_name                      (Parm, ZeroConstructor)
// struct FString                 version                        (Parm, ZeroConstructor)
// struct FString                 map_name                       (Parm, ZeroConstructor)
// struct FString                 show_director_name             (Parm, ZeroConstructor)
// TArray<struct FDarwinPlayerInfo> PlayersInfo                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bGameStarted                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 num_spectators                 (Parm, ZeroConstructor)

void UDarwinMainMenuWidget::EventSessionFound(const struct FBlueprintSessionResult& BlueprintSessionResult, const struct FString& host_name, const struct FString& version, const struct FString& map_name, const struct FString& show_director_name, TArray<struct FDarwinPlayerInfo> PlayersInfo, bool bGameStarted, const struct FString& num_spectators)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventSessionFound");

	UDarwinMainMenuWidget_EventSessionFound_Params params;
	params.BlueprintSessionResult = BlueprintSessionResult;
	params.host_name = host_name;
	params.version = version;
	params.map_name = map_name;
	params.show_director_name = show_director_name;
	params.PlayersInfo = PlayersInfo;
	params.bGameStarted = bGameStarted;
	params.num_spectators = num_spectators;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventRemoveRegion
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 RegionName                     (Parm, ZeroConstructor)

void UDarwinMainMenuWidget::EventRemoveRegion(const struct FString& RegionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventRemoveRegion");

	UDarwinMainMenuWidget_EventRemoveRegion_Params params;
	params.RegionName = RegionName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventOpenMixerConnectionBrowser
// (Event, Public, BlueprintEvent)

void UDarwinMainMenuWidget::EventOpenMixerConnectionBrowser()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventOpenMixerConnectionBrowser");

	UDarwinMainMenuWidget_EventOpenMixerConnectionBrowser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventMixerConnectionStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinMixerConnectionState    State                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 username                       (Parm, ZeroConstructor)

void UDarwinMainMenuWidget::EventMixerConnectionStateChanged(EDarwinMixerConnectionState State, const struct FString& username)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventMixerConnectionStateChanged");

	UDarwinMainMenuWidget_EventMixerConnectionStateChanged_Params params;
	params.State = State;
	params.username = username;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventMatchmakingUpdated
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// EDarwinRoleEnum                Role                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FDarwinMatchmakingInfo  matchmakingInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UDarwinMainMenuWidget::EventMatchmakingUpdated(EDarwinRoleEnum Role, const struct FDarwinMatchmakingInfo& matchmakingInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventMatchmakingUpdated");

	UDarwinMainMenuWidget_EventMatchmakingUpdated_Params params;
	params.Role = Role;
	params.matchmakingInfo = matchmakingInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventMatchmakingStarted
// (Event, Public, BlueprintEvent)

void UDarwinMainMenuWidget::EventMatchmakingStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventMatchmakingStarted");

	UDarwinMainMenuWidget_EventMatchmakingStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventMatchmakingServersFull
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FDarwinMatchmakingInfo  matchmakingInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UDarwinMainMenuWidget::EventMatchmakingServersFull(const struct FDarwinMatchmakingInfo& matchmakingInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventMatchmakingServersFull");

	UDarwinMainMenuWidget_EventMatchmakingServersFull_Params params;
	params.matchmakingInfo = matchmakingInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventMatchmakingCompleted
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FDarwinMatchmakingInfo  matchmakingInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UDarwinMainMenuWidget::EventMatchmakingCompleted(const struct FDarwinMatchmakingInfo& matchmakingInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventMatchmakingCompleted");

	UDarwinMainMenuWidget_EventMatchmakingCompleted_Params params;
	params.matchmakingInfo = matchmakingInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventMatchmakingCanceled
// (Event, Public, BlueprintEvent)

void UDarwinMainMenuWidget::EventMatchmakingCanceled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventMatchmakingCanceled");

	UDarwinMainMenuWidget_EventMatchmakingCanceled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventMapLoaded
// (Event, Public, BlueprintEvent)

void UDarwinMainMenuWidget::EventMapLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventMapLoaded");

	UDarwinMainMenuWidget_EventMapLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventInputResetToDefault
// (Event, Public, BlueprintEvent)

void UDarwinMainMenuWidget::EventInputResetToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventInputResetToDefault");

	UDarwinMainMenuWidget_EventInputResetToDefault_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventInputRebindSucceeded
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FName                   ActionToRebind                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FText                   NewKeyName                     (ConstParm, Parm, OutParm, ReferenceParm)

void UDarwinMainMenuWidget::EventInputRebindSucceeded(const struct FName& ActionToRebind, const struct FText& NewKeyName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventInputRebindSucceeded");

	UDarwinMainMenuWidget_EventInputRebindSucceeded_Params params;
	params.ActionToRebind = ActionToRebind;
	params.NewKeyName = NewKeyName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventInputRebindCollision
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FName>           CollidingActionName            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FText                   WantedKeyName                  (ConstParm, Parm, OutParm, ReferenceParm)

void UDarwinMainMenuWidget::EventInputRebindCollision(TArray<struct FName> CollidingActionName, const struct FText& WantedKeyName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventInputRebindCollision");

	UDarwinMainMenuWidget_EventInputRebindCollision_Params params;
	params.CollidingActionName = CollidingActionName;
	params.WantedKeyName = WantedKeyName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventInputRebindCanceled
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FName                   ActionToRebind                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UDarwinMainMenuWidget::EventInputRebindCanceled(const struct FName& ActionToRebind)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventInputRebindCanceled");

	UDarwinMainMenuWidget_EventInputRebindCanceled_Params params;
	params.ActionToRebind = ActionToRebind;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventInputBindingCleared
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FName>           ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UDarwinMainMenuWidget::EventInputBindingCleared(TArray<struct FName> ActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventInputBindingCleared");

	UDarwinMainMenuWidget_EventInputBindingCleared_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.EventAddRegion
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 RegionName                     (Parm, ZeroConstructor)

void UDarwinMainMenuWidget::EventAddRegion(const struct FString& RegionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.EventAddRegion");

	UDarwinMainMenuWidget_EventAddRegion_Params params;
	params.RegionName = RegionName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.DebugReportBug
// (Event, Public, BlueprintEvent)

void UDarwinMainMenuWidget::DebugReportBug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.DebugReportBug");

	UDarwinMainMenuWidget_DebugReportBug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.DebugGiveFeedback
// (Event, Public, BlueprintEvent)

void UDarwinMainMenuWidget::DebugGiveFeedback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.DebugGiveFeedback");

	UDarwinMainMenuWidget_DebugGiveFeedback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMainMenuWidget.ConnectToMixer
// (Final, Native, Public, BlueprintCallable)

void UDarwinMainMenuWidget::ConnectToMixer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMainMenuWidget.ConnectToMixer");

	UDarwinMainMenuWidget_ConnectToMixer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMapGenerator.TileRotationByDirection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            from_tile_direction            (Parm, ZeroConstructor, IsPlainOldData)
// int                            Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADarwinMapGenerator::TileRotationByDirection(int from_tile_direction, int Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.TileRotationByDirection");

	ADarwinMapGenerator_TileRotationByDirection_Params params;
	params.from_tile_direction = from_tile_direction;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.TileRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ADarwinMapGenerator::TileRotation(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.TileRotation");

	ADarwinMapGenerator_TileRotation_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.TileRiversDirections
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            tile_id                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>                    directions                     (Parm, OutParm, ZeroConstructor)

void ADarwinMapGenerator::TileRiversDirections(int tile_id, TArray<int>* directions)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.TileRiversDirections");

	ADarwinMapGenerator_TileRiversDirections_Params params;
	params.tile_id = tile_id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (directions != nullptr)
		*directions = params.directions;
}


// Function Darwin.DarwinMapGenerator.TileContainRiver
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            tile_id                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinMapGenerator::TileContainRiver(int tile_id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.TileContainRiver");

	ADarwinMapGenerator_TileContainRiver_Params params;
	params.tile_id = tile_id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.TileContainPOI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            tile_id                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            rotation_index                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinMapGenerator::TileContainPOI(int tile_id, int rotation_index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.TileContainPOI");

	ADarwinMapGenerator_TileContainPOI_Params params;
	params.tile_id = tile_id;
	params.rotation_index = rotation_index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.TileBorderType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            tile_id                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            border_id                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ADarwinMapGenerator::TileBorderType(int tile_id, int border_id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.TileBorderType");

	ADarwinMapGenerator_TileBorderType_Params params;
	params.tile_id = tile_id;
	params.border_id = border_id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.TileBorderHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            tile_id                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            border_id                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ADarwinMapGenerator::TileBorderHeight(int tile_id, int border_id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.TileBorderHeight");

	ADarwinMapGenerator_TileBorderHeight_Params params;
	params.tile_id = tile_id;
	params.border_id = border_id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.RandomTile
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 Sequence                       (Parm, ZeroConstructor)
// int                            tile_id                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            rotation_index                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinMapGenerator::RandomTile(const struct FString& Sequence, int* tile_id, int* rotation_index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.RandomTile");

	ADarwinMapGenerator_RandomTile_Params params;
	params.Sequence = Sequence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (tile_id != nullptr)
		*tile_id = params.tile_id;
	if (rotation_index != nullptr)
		*rotation_index = params.rotation_index;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.RandomRotator
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                Rotator                        (Parm, OutParm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADarwinMapGenerator::RandomRotator(struct FRotator* Rotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.RandomRotator");

	ADarwinMapGenerator_RandomRotator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Rotator != nullptr)
		*Rotator = params.Rotator;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.PushFoliageOnSurface
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIgnoreDarwinRessources        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOnlyOnLandscape               (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinMapGenerator::PushFoliageOnSurface(bool bIgnoreDarwinRessources, bool bOnlyOnLandscape)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.PushFoliageOnSurface");

	ADarwinMapGenerator_PushFoliageOnSurface_Params params;
	params.bIgnoreDarwinRessources = bIgnoreDarwinRessources;
	params.bOnlyOnLandscape = bOnlyOnLandscape;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMapGenerator.IsPoiLocationFree
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            tile_id                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinMapGenerator::IsPoiLocationFree(int tile_id, int Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.IsPoiLocationFree");

	ADarwinMapGenerator_IsPoiLocationFree_Params params;
	params.tile_id = tile_id;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.InitCollections
// (Final, Native, Protected, BlueprintCallable)

void ADarwinMapGenerator::InitCollections()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.InitCollections");

	ADarwinMapGenerator_InitCollections_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMapGenerator.IndexInRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Min                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            Max                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADarwinMapGenerator::IndexInRange(int Index, int Min, int Max)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.IndexInRange");

	ADarwinMapGenerator_IndexInRange_Params params;
	params.Index = Index;
	params.Min = Min;
	params.Max = Max;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.GetSubstring
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 SourceString                   (Parm, ZeroConstructor)
// int                            StartIndex                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            Length                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ADarwinMapGenerator::GetSubstring(const struct FString& SourceString, int StartIndex, int Length)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.GetSubstring");

	ADarwinMapGenerator_GetSubstring_Params params;
	params.SourceString = SourceString;
	params.StartIndex = StartIndex;
	params.Length = Length;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.GetRandomRiverBorder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            river_tile_id                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADarwinMapGenerator::GetRandomRiverBorder(int river_tile_id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.GetRandomRiverBorder");

	ADarwinMapGenerator_GetRandomRiverBorder_Params params;
	params.river_tile_id = river_tile_id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.GetPOIRelativeRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            dir                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ADarwinMapGenerator::GetPOIRelativeRotation(int dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.GetPOIRelativeRotation");

	ADarwinMapGenerator_GetPOIRelativeRotation_Params params;
	params.dir = dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.GetPOIRelativeLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FString                 Height                         (Parm, ZeroConstructor)
// int                            dir                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ADarwinMapGenerator::GetPOIRelativeLocation(const struct FString& Height, int dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.GetPOIRelativeLocation");

	ADarwinMapGenerator_GetPOIRelativeLocation_Params params;
	params.Height = Height;
	params.dir = dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.GetActorLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ADarwinMapGenerator::GetActorLevel(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.GetActorLevel");

	ADarwinMapGenerator_GetActorLevel_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMapGenerator.Generate
// (Final, Native, Public, BlueprintCallable)

void ADarwinMapGenerator::Generate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.Generate");

	ADarwinMapGenerator_Generate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMapGenerator.CollectionTileContainRiver
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            tile_id                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinMapGenerator::CollectionTileContainRiver(int tile_id)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMapGenerator.CollectionTileContainRiver");

	ADarwinMapGenerator_CollectionTileContainRiver_Params params;
	params.tile_id = tile_id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMatchmakingManager.GetRole
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDarwinRoleEnum                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDarwinRoleEnum UDarwinMatchmakingManager::GetRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMatchmakingManager.GetRole");

	UDarwinMatchmakingManager_GetRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMatchmakingManager.GetGameMode
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDarwinGameMode                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDarwinGameMode UDarwinMatchmakingManager::GetGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMatchmakingManager.GetGameMode");

	UDarwinMatchmakingManager_GetGameMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMiniDrone.ServerSetWantedDroneTransform
// (Net, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 wantedDroneLoc                 (Parm, IsPlainOldData)
// struct FRotator                wantedDroneRot                 (Parm, IsPlainOldData)

void ADarwinMiniDrone::ServerSetWantedDroneTransform(const struct FVector& wantedDroneLoc, const struct FRotator& wantedDroneRot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMiniDrone.ServerSetWantedDroneTransform");

	ADarwinMiniDrone_ServerSetWantedDroneTransform_Params params;
	params.wantedDroneLoc = wantedDroneLoc;
	params.wantedDroneRot = wantedDroneRot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMiniDrone.EventUpdateMiniDroneCamouflage
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           ownerCamouflaged               (Parm, ZeroConstructor, IsPlainOldData)
// class UDarwinCamouflagePower*  camouflageComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADarwinMiniDrone::EventUpdateMiniDroneCamouflage(bool ownerCamouflaged, class UDarwinCamouflagePower* camouflageComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMiniDrone.EventUpdateMiniDroneCamouflage");

	ADarwinMiniDrone_EventUpdateMiniDroneCamouflage_Params params;
	params.ownerCamouflaged = ownerCamouflaged;
	params.camouflageComponent = camouflageComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMiniDrone.EventInitializeMiniDroneMaterials
// (Event, Public, BlueprintEvent)

void ADarwinMiniDrone::EventInitializeMiniDroneMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMiniDrone.EventInitializeMiniDroneMaterials");

	ADarwinMiniDrone_EventInitializeMiniDroneMaterials_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMysteryBox.SetDarwinCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinMysteryBox::SetDarwinCharacter(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMysteryBox.SetDarwinCharacter");

	ADarwinMysteryBox_SetDarwinCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMysteryBox.RotateBox
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinMysteryBox::RotateBox(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMysteryBox.RotateBox");

	ADarwinMysteryBox_RotateBox_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMysteryBox.GetDarwinCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADarwinCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADarwinCharacter* ADarwinMysteryBox::GetDarwinCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMysteryBox.GetDarwinCharacter");

	ADarwinMysteryBox_GetDarwinCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinMysteryBox.DeliveryTranslation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           returning                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinMysteryBox::DeliveryTranslation(float DeltaTime, bool returning)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMysteryBox.DeliveryTranslation");

	ADarwinMysteryBox_DeliveryTranslation_Params params;
	params.DeltaTime = DeltaTime;
	params.returning = returning;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinMysteryBox.Deliver
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinMysteryBox::Deliver(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinMysteryBox.Deliver");

	ADarwinMysteryBox_Deliver_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPassiveBonusComponent.OnRepPassiveBonus
// (Final, Native, Public)

void UDarwinPassiveBonusComponent::OnRepPassiveBonus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPassiveBonusComponent.OnRepPassiveBonus");

	UDarwinPassiveBonusComponent_OnRepPassiveBonus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPassiveBonusComponent.NetMulticastArmorHit
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinDamageTypeEnum          Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        attacker                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinPassiveBonusComponent::NetMulticastArmorHit(EDarwinDamageTypeEnum Type, class ADarwinCharacter* attacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPassiveBonusComponent.NetMulticastArmorHit");

	UDarwinPassiveBonusComponent_NetMulticastArmorHit_Params params;
	params.Type = Type;
	params.attacker = attacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPassiveBonusComponent.GetAxeNormalizedLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDarwinPassiveBonusComponent::GetAxeNormalizedLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPassiveBonusComponent.GetAxeNormalizedLevel");

	UDarwinPassiveBonusComponent_GetAxeNormalizedLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinPassiveBonusComponent.GetArmorLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinPassiveBonusComponent::GetArmorLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPassiveBonusComponent.GetArmorLevel");

	UDarwinPassiveBonusComponent_GetArmorLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinPassiveBonusComponent.EventArmorHit
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 hitLoc                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinPassiveBonusComponent::EventArmorHit(const struct FVector& hitLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPassiveBonusComponent.EventArmorHit");

	UDarwinPassiveBonusComponent_EventArmorHit_Params params;
	params.hitLoc = hitLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPillDispenserPower.NetMulticastPillNotification
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinItemTypeEnum            pillType                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinPillDispenserPower::NetMulticastPillNotification(EDarwinItemTypeEnum pillType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPillDispenserPower.NetMulticastPillNotification");

	UDarwinPillDispenserPower_NetMulticastPillNotification_Params params;
	params.pillType = pillType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPlayerCameraManager.SetViewTargetForDressRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  NewViewTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinPlayerCameraManager::SetViewTargetForDressRoom(class AActor* NewViewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPlayerCameraManager.SetViewTargetForDressRoom");

	ADarwinPlayerCameraManager_SetViewTargetForDressRoom_Params params;
	params.NewViewTarget = NewViewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPlayerCameraManager.SetShowDirectorIntroMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)
// class UCameraComponent*        Camera                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADarwinPlayerCameraManager::SetShowDirectorIntroMode(bool Enabled, class UCameraComponent* Camera)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPlayerCameraManager.SetShowDirectorIntroMode");

	ADarwinPlayerCameraManager_SetShowDirectorIntroMode_Params params;
	params.Enabled = Enabled;
	params.Camera = Camera;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPlayerCameraManager.SetDressRoomMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)
// class ACameraActor*            Camera_2                       (Parm, ZeroConstructor, IsPlainOldData)
// class ACameraActor*            Camera_3                       (Parm, ZeroConstructor, IsPlainOldData)
// class ACameraActor*            Camera_4                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinPlayerCameraManager::SetDressRoomMode(bool Enabled, class ACameraActor* Camera_2, class ACameraActor* Camera_3, class ACameraActor* Camera_4)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPlayerCameraManager.SetDressRoomMode");

	ADarwinPlayerCameraManager_SetDressRoomMode_Params params;
	params.Enabled = Enabled;
	params.Camera_2 = Camera_2;
	params.Camera_3 = Camera_3;
	params.Camera_4 = Camera_4;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPlayerCameraManager.SetDressRoomCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinPlayerCameraManager::SetDressRoomCamera(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPlayerCameraManager.SetDressRoomCamera");

	ADarwinPlayerCameraManager_SetDressRoomCamera_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPlayerCameraManager.ChangeState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerCameraState             new_state                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinPlayerCameraManager::ChangeState(EPlayerCameraState new_state)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPlayerCameraManager.ChangeState");

	ADarwinPlayerCameraManager_ChangeState_Params params;
	params.new_state = new_state;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPortalPower.ServerDropExit
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 exitLoc                        (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinPortalPower::ServerDropExit(const struct FVector& exitLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPortalPower.ServerDropExit");

	UDarwinPortalPower_ServerDropExit_Params params;
	params.exitLoc = exitLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPortalPower.NetMulticastTeleport
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 StartLoc                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 EndLoc                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinPortalPower::NetMulticastTeleport(const struct FVector& StartLoc, const struct FVector& EndLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPortalPower.NetMulticastTeleport");

	UDarwinPortalPower_NetMulticastTeleport_Params params;
	params.StartLoc = StartLoc;
	params.EndLoc = EndLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPortalPower.NetMulticastDropMouth
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 mouthLoc                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinPortalPower::NetMulticastDropMouth(const struct FVector& mouthLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPortalPower.NetMulticastDropMouth");

	UDarwinPortalPower_NetMulticastDropMouth_Params params;
	params.mouthLoc = mouthLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPortalPower.NetMulticastDropExit
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 exitLoc                        (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinPortalPower::NetMulticastDropExit(const struct FVector& exitLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPortalPower.NetMulticastDropExit");

	UDarwinPortalPower_NetMulticastDropExit_Params params;
	params.exitLoc = exitLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPortalPower.EventTeleport
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 StartLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 EndLoc                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinPortalPower::EventTeleport(const struct FVector& StartLoc, const struct FVector& EndLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPortalPower.EventTeleport");

	UDarwinPortalPower_EventTeleport_Params params;
	params.StartLoc = StartLoc;
	params.EndLoc = EndLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPortalPower.EventStartTeleport
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 StartLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 EndLoc                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinPortalPower::EventStartTeleport(const struct FVector& StartLoc, const struct FVector& EndLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPortalPower.EventStartTeleport");

	UDarwinPortalPower_EventStartTeleport_Params params;
	params.StartLoc = StartLoc;
	params.EndLoc = EndLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPortalPower.EventEndTeleport
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 StartLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 EndLoc                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinPortalPower::EventEndTeleport(const struct FVector& StartLoc, const struct FVector& EndLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPortalPower.EventEndTeleport");

	UDarwinPortalPower_EventEndTeleport_Params params;
	params.StartLoc = StartLoc;
	params.EndLoc = EndLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPortalPower.EventDropMouth
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 mouthLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinPortalPower::EventDropMouth(const struct FVector& mouthLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPortalPower.EventDropMouth");

	UDarwinPortalPower_EventDropMouth_Params params;
	params.mouthLoc = mouthLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPortalPower.EventDropExit
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 exitLoc                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinPortalPower::EventDropExit(const struct FVector& exitLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPortalPower.EventDropExit");

	UDarwinPortalPower_EventDropExit_Params params;
	params.exitLoc = exitLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPostProcessComponent.ToggleBlackAndWhitePostProcess
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           active                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinPostProcessComponent::ToggleBlackAndWhitePostProcess(bool active)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPostProcessComponent.ToggleBlackAndWhitePostProcess");

	UDarwinPostProcessComponent_ToggleBlackAndWhitePostProcess_Params params;
	params.active = active;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPowerPog.IsMouseInside
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGeometry               Geometry                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinPowerPog::IsMouseInside(const struct FGeometry& Geometry)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.IsMouseInside");

	UDarwinPowerPog_IsMouseInside_Params params;
	params.Geometry = Geometry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinPowerPog.InitializePog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            inPowerType                    (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinPowerPog::InitializePog(EDarwinItemTypeEnum inPowerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.InitializePog");

	UDarwinPowerPog_InitializePog_Params params;
	params.inPowerType = inPowerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPowerPog.ExecutePower
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  targetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (Parm, IsPlainOldData)
// EPogCantExeType                outCantExeType                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinPowerPog::ExecutePower(class AActor* targetActor, const struct FVector& Loc, EPogCantExeType* outCantExeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.ExecutePower");

	UDarwinPowerPog_ExecutePower_Params params;
	params.targetActor = targetActor;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outCantExeType != nullptr)
		*outCantExeType = params.outCantExeType;

	return params.ReturnValue;
}


// Function Darwin.DarwinPowerPog.EventUnselectPog
// (Final, Native, Public, BlueprintCallable)

void UDarwinPowerPog::EventUnselectPog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.EventUnselectPog");

	UDarwinPowerPog_EventUnselectPog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPowerPog.EventShiftKeyReleasedPog
// (Event, Public, BlueprintEvent)

void UDarwinPowerPog::EventShiftKeyReleasedPog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.EventShiftKeyReleasedPog");

	UDarwinPowerPog_EventShiftKeyReleasedPog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPowerPog.EventShiftKeyPressedPog
// (Event, Public, BlueprintEvent)

void UDarwinPowerPog::EventShiftKeyPressedPog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.EventShiftKeyPressedPog");

	UDarwinPowerPog_EventShiftKeyPressedPog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPowerPog.EventSetNotEnoughMana
// (Event, Public, BlueprintEvent)

void UDarwinPowerPog::EventSetNotEnoughMana()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.EventSetNotEnoughMana");

	UDarwinPowerPog_EventSetNotEnoughMana_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPowerPog.EventSetEnoughMana
// (Event, Public, BlueprintEvent)

void UDarwinPowerPog::EventSetEnoughMana()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.EventSetEnoughMana");

	UDarwinPowerPog_EventSetEnoughMana_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPowerPog.EventSelectPog
// (Final, Native, Public, BlueprintCallable)

void UDarwinPowerPog::EventSelectPog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.EventSelectPog");

	UDarwinPowerPog_EventSelectPog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPowerPog.EventPowerUsedUp
// (Event, Public, BlueprintEvent)

void UDarwinPowerPog::EventPowerUsedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.EventPowerUsedUp");

	UDarwinPowerPog_EventPowerUsedUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPowerPog.EventCancelPog
// (Final, Native, Public, BlueprintCallable)

void UDarwinPowerPog::EventCancelPog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.EventCancelPog");

	UDarwinPowerPog_EventCancelPog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPowerPog.EventActivatePog
// (Final, Native, Public, BlueprintCallable)

void UDarwinPowerPog::EventActivatePog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPowerPog.EventActivatePog");

	UDarwinPowerPog_EventActivatePog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPredatorPower.EventPredatorPulse
// (Event, Public, BlueprintEvent)

void UDarwinPredatorPower::EventPredatorPulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPredatorPower.EventPredatorPulse");

	UDarwinPredatorPower_EventPredatorPulse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastThrow
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 realVel                        (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::NetMulticastThrow(const struct FVector& realVel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastThrow");

	ADarwinProjectile_NetMulticastThrow_Params params;
	params.realVel = realVel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastSpawnImpactDecal
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)
// struct FVector                 Normal                         (Parm, IsPlainOldData)

void ADarwinProjectile::NetMulticastSpawnImpactDecal(const struct FVector& Location, const struct FVector& Normal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastSpawnImpactDecal");

	ADarwinProjectile_NetMulticastSpawnImpactDecal_Params params;
	params.Location = Location;
	params.Normal = Normal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastResetSpeedStam
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinProjectile::NetMulticastResetSpeedStam(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastResetSpeedStam");

	ADarwinProjectile_NetMulticastResetSpeedStam_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastResetInvincibility
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinProjectile::NetMulticastResetInvincibility(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastResetInvincibility");

	ADarwinProjectile_NetMulticastResetInvincibility_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastReflectedByForcefield
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        hit_character                  (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinProjectile::NetMulticastReflectedByForcefield(class ADarwinCharacter* hit_character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastReflectedByForcefield");

	ADarwinProjectile_NetMulticastReflectedByForcefield_Params params;
	params.hit_character = hit_character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastPosition
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 vel                            (Parm, IsPlainOldData)
// struct FVector                 Loc                            (Parm, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinProjectile::NetMulticastPosition(const struct FVector& vel, const struct FVector& Loc, float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastPosition");

	ADarwinProjectile_NetMulticastPosition_Params params;
	params.vel = vel;
	params.Loc = Loc;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastImpactExplosion
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::NetMulticastImpactExplosion(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastImpactExplosion");

	ADarwinProjectile_NetMulticastImpactExplosion_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastImpactBlood
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class AActor*                  hit_actor                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::NetMulticastImpactBlood(class AActor* hit_actor, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastImpactBlood");

	ADarwinProjectile_NetMulticastImpactBlood_Params params;
	params.hit_actor = hit_actor;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMultiCastHitZombieActor
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinZombie*           zombie_actor                   (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinProjectile::NetMultiCastHitZombieActor(class ADarwinZombie* zombie_actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMultiCastHitZombieActor");

	ADarwinProjectile_NetMultiCastHitZombieActor_Params params;
	params.zombie_actor = zombie_actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastHitStaticMesh
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class ADarwinCharacter*        charOwner                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  hit_actor                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 hit_loc                        (Parm, IsPlainOldData)

void ADarwinProjectile::NetMulticastHitStaticMesh(class ADarwinCharacter* charOwner, class AActor* hit_actor, const struct FVector& hit_loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastHitStaticMesh");

	ADarwinProjectile_NetMulticastHitStaticMesh_Params params;
	params.charOwner = charOwner;
	params.hit_actor = hit_actor;
	params.hit_loc = hit_loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastHitLocation
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class AActor*                  hit_actor                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)
// struct FVector                 Velocity                       (Parm, IsPlainOldData)

void ADarwinProjectile::NetMulticastHitLocation(class AActor* hit_actor, const struct FVector& Location, const struct FVector& Velocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastHitLocation");

	ADarwinProjectile_NetMulticastHitLocation_Params params;
	params.hit_actor = hit_actor;
	params.Location = Location;
	params.Velocity = Velocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastEmitXplosionFX
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::NetMulticastEmitXplosionFX(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastEmitXplosionFX");

	ADarwinProjectile_NetMulticastEmitXplosionFX_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastEmitToonFX
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::NetMulticastEmitToonFX(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastEmitToonFX");

	ADarwinProjectile_NetMulticastEmitToonFX_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastEmitHitFX
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::NetMulticastEmitHitFX(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastEmitHitFX");

	ADarwinProjectile_NetMulticastEmitHitFX_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastDrawTrace
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 trace_start                    (Parm, IsPlainOldData)
// struct FVector                 trace_end                      (Parm, IsPlainOldData)

void ADarwinProjectile::NetMulticastDrawTrace(const struct FVector& trace_start, const struct FVector& trace_end)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastDrawTrace");

	ADarwinProjectile_NetMulticastDrawTrace_Params params;
	params.trace_start = trace_start;
	params.trace_end = trace_end;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastDrawClosestPoint
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 closest_point                  (Parm, IsPlainOldData)
// struct FVector                 char_loc                       (Parm, IsPlainOldData)

void ADarwinProjectile::NetMulticastDrawClosestPoint(const struct FVector& closest_point, const struct FVector& char_loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastDrawClosestPoint");

	ADarwinProjectile_NetMulticastDrawClosestPoint_Params params;
	params.closest_point = closest_point;
	params.char_loc = char_loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastComeFromTurret
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinTurret*           Turret                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinProjectile::NetMulticastComeFromTurret(class ADarwinTurret* Turret)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastComeFromTurret");

	ADarwinProjectile_NetMulticastComeFromTurret_Params params;
	params.Turret = Turret;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.NetMulticastAddToActivePickupableProjectiles
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinProjectile::NetMulticastAddToActivePickupableProjectiles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.NetMulticastAddToActivePickupableProjectiles");

	ADarwinProjectile_NetMulticastAddToActivePickupableProjectiles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.GetProjectileType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDarwinItemTypeEnum ADarwinProjectile::GetProjectileType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.GetProjectileType");

	ADarwinProjectile_GetProjectileType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinProjectile.EventUpdateLightIntensity
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinProjectile::EventUpdateLightIntensity(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.EventUpdateLightIntensity");

	ADarwinProjectile_EventUpdateLightIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.EventSpawnImpactDecal
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTransform              Transform                      (Parm, IsPlainOldData)

void ADarwinProjectile::EventSpawnImpactDecal(const struct FTransform& Transform)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.EventSpawnImpactDecal");

	ADarwinProjectile_EventSpawnImpactDecal_Params params;
	params.Transform = Transform;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.EventReflectedByForcefield
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::EventReflectedByForcefield(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.EventReflectedByForcefield");

	ADarwinProjectile_EventReflectedByForcefield_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.EventImpactExplosion
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::EventImpactExplosion(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.EventImpactExplosion");

	ADarwinProjectile_EventImpactExplosion_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.EventImpactBlood
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                  hit_actor                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::EventImpactBlood(class AActor* hit_actor, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.EventImpactBlood");

	ADarwinProjectile_EventImpactBlood_Params params;
	params.hit_actor = hit_actor;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.EventHitStaticMesh
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::EventHitStaticMesh(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.EventHitStaticMesh");

	ADarwinProjectile_EventHitStaticMesh_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.EventEmitXplosionFX
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::EventEmitXplosionFX(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.EventEmitXplosionFX");

	ADarwinProjectile_EventEmitXplosionFX_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.EventEmitVisualSoundFX
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::EventEmitVisualSoundFX(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.EventEmitVisualSoundFX");

	ADarwinProjectile_EventEmitVisualSoundFX_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.EventEmitToonFX
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::EventEmitToonFX(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.EventEmitToonFX");

	ADarwinProjectile_EventEmitToonFX_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinProjectile.EventEmitHitFX
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinProjectile::EventEmitHitFX(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinProjectile.EventEmitHitFX");

	ADarwinProjectile_EventEmitHitFX_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPurgatoryPawn.SetDressRoomMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinPurgatoryPawn::SetDressRoomMode(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPurgatoryPawn.SetDressRoomMode");

	ADarwinPurgatoryPawn_SetDressRoomMode_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.UpdateBeingHarvested
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            particlesId                    (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::UpdateBeingHarvested(class ADarwinCharacter* Character, float Time, int particlesId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.UpdateBeingHarvested");

	ADarwinRessource_UpdateBeingHarvested_Params params;
	params.Character = Character;
	params.Time = Time;
	params.particlesId = particlesId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.OnRepIsSpawned
// (Final, Native, Public)

void ADarwinRessource::OnRepIsSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.OnRepIsSpawned");

	ADarwinRessource_OnRepIsSpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.OnRepHarvested
// (Final, Native, Public)

void ADarwinRessource::OnRepHarvested()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.OnRepHarvested");

	ADarwinRessource_OnRepHarvested_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.NetMulticastHarvestSuccess
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinRessource::NetMulticastHarvestSuccess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.NetMulticastHarvestSuccess");

	ADarwinRessource_NetMulticastHarvestSuccess_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.NetMulticastHarvestStart
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        harversterCharcter             (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::NetMulticastHarvestStart(class ADarwinCharacter* harversterCharcter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.NetMulticastHarvestStart");

	ADarwinRessource_NetMulticastHarvestStart_Params params;
	params.harversterCharcter = harversterCharcter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.NetMulticastHarvestFail
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinRessource::NetMulticastHarvestFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.NetMulticastHarvestFail");

	ADarwinRessource_NetMulticastHarvestFail_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventUpdateCustomDepthValue
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::EventUpdateCustomDepthValue(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventUpdateCustomDepthValue");

	ADarwinRessource_EventUpdateCustomDepthValue_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventSimulatedHarvestSuccess
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinRessource*        ressource                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::EventSimulatedHarvestSuccess(class ADarwinRessource* ressource)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventSimulatedHarvestSuccess");

	ADarwinRessource_EventSimulatedHarvestSuccess_Params params;
	params.ressource = ressource;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventSimulatedHarvestStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinRessource*        ressource                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::EventSimulatedHarvestStart(class ADarwinRessource* ressource)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventSimulatedHarvestStart");

	ADarwinRessource_EventSimulatedHarvestStart_Params params;
	params.ressource = ressource;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventSimulatedHarvestFail
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinRessource*        ressource                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::EventSimulatedHarvestFail(class ADarwinRessource* ressource)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventSimulatedHarvestFail");

	ADarwinRessource_EventSimulatedHarvestFail_Params params;
	params.ressource = ressource;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventRenderCustomDepth
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           render                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::EventRenderCustomDepth(bool render)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventRenderCustomDepth");

	ADarwinRessource_EventRenderCustomDepth_Params params;
	params.render = render;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventOnRemoveStaticMesh
// (Event, Public, BlueprintEvent)

void ADarwinRessource::EventOnRemoveStaticMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventOnRemoveStaticMesh");

	ADarwinRessource_EventOnRemoveStaticMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventLocalHarvestSuccess
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::EventLocalHarvestSuccess(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventLocalHarvestSuccess");

	ADarwinRessource_EventLocalHarvestSuccess_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventLocalHarvestStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::EventLocalHarvestStart(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventLocalHarvestStart");

	ADarwinRessource_EventLocalHarvestStart_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventLocalHarvestFail
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::EventLocalHarvestFail(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventLocalHarvestFail");

	ADarwinRessource_EventLocalHarvestFail_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventDedicatedServerHarvestSuccess
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::EventDedicatedServerHarvestSuccess(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventDedicatedServerHarvestSuccess");

	ADarwinRessource_EventDedicatedServerHarvestSuccess_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventDedicatedServerHarvestStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::EventDedicatedServerHarvestStart(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventDedicatedServerHarvestStart");

	ADarwinRessource_EventDedicatedServerHarvestStart_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRessource.EventDedicatedServerHarvestFail
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinRessource::EventDedicatedServerHarvestFail(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRessource.EventDedicatedServerHarvestFail");

	ADarwinRessource_EventDedicatedServerHarvestFail_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.NetMulticastWillReactivate
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinPylon::NetMulticastWillReactivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.NetMulticastWillReactivate");

	ADarwinPylon_NetMulticastWillReactivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.NetMulticastReactivate
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinPylon::NetMulticastReactivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.NetMulticastReactivate");

	ADarwinPylon_NetMulticastReactivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.NetMulticastPylonHitByArrow
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        attacker                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinPylon::NetMulticastPylonHitByArrow(class ADarwinCharacter* attacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.NetMulticastPylonHitByArrow");

	ADarwinPylon_NetMulticastPylonHitByArrow_Params params;
	params.attacker = attacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.HighlightAllSubmesh
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            depth_stencil_value            (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinPylon::HighlightAllSubmesh(bool enable, int depth_stencil_value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.HighlightAllSubmesh");

	ADarwinPylon_HighlightAllSubmesh_Params params;
	params.enable = enable;
	params.depth_stencil_value = depth_stencil_value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.EventWillReactivate
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinPylon::EventWillReactivate(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.EventWillReactivate");

	ADarwinPylon_EventWillReactivate_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.EventUpdateLightIntensity
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          Intensity                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ADarwinPylon::EventUpdateLightIntensity(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.EventUpdateLightIntensity");

	ADarwinPylon_EventUpdateLightIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.EventUpdateEffects
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinPylon::EventUpdateEffects(float Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.EventUpdateEffects");

	ADarwinPylon_EventUpdateEffects_Params params;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.EventPylonHitByArrow
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        attacker                       (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinPylon::EventPylonHitByArrow(class ADarwinCharacter* attacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.EventPylonHitByArrow");

	ADarwinPylon_EventPylonHitByArrow_Params params;
	params.attacker = attacker;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.EventDedicatedServerWillReactivate
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinPylon::EventDedicatedServerWillReactivate(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.EventDedicatedServerWillReactivate");

	ADarwinPylon_EventDedicatedServerWillReactivate_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.EventAuthorithyHarvested
// (Event, Public, BlueprintEvent)

void ADarwinPylon::EventAuthorithyHarvested()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.EventAuthorithyHarvested");

	ADarwinPylon_EventAuthorithyHarvested_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.EventActivatePylonDedicated
// (Event, Public, BlueprintEvent)

void ADarwinPylon::EventActivatePylonDedicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.EventActivatePylonDedicated");

	ADarwinPylon_EventActivatePylonDedicated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinPylon.EventActivatePylon
// (Event, Public, BlueprintEvent)

void ADarwinPylon::EventActivatePylon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinPylon.EventActivatePylon");

	ADarwinPylon_EventActivatePylon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRambo.EventSmokeUp
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinRambo::EventSmokeUp(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRambo.EventSmokeUp");

	ADarwinRambo_EventSmokeUp_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRambo.EventSmokeDown
// (Event, Public, BlueprintEvent)

void ADarwinRambo::EventSmokeDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRambo.EventSmokeDown");

	ADarwinRambo_EventSmokeDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRejuvePower.NetMulticastRejuveStart
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinRejuvePower::NetMulticastRejuveStart(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRejuvePower.NetMulticastRejuveStart");

	UDarwinRejuvePower_NetMulticastRejuveStart_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRejuvePower.EventRejuveStart
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinRejuvePower::EventRejuveStart(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRejuvePower.EventRejuveStart");

	UDarwinRejuvePower_EventRejuveStart_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRejuvePower.EventRejuveEnd
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinRejuvePower::EventRejuveEnd(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRejuvePower.EventRejuveEnd");

	UDarwinRejuvePower_EventRejuveEnd_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRocketDashPower.NetMulticastDashedCharacter
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinRocketDashPower::NetMulticastDashedCharacter(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRocketDashPower.NetMulticastDashedCharacter");

	UDarwinRocketDashPower_NetMulticastDashedCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRocketDashPower.EventRocketDashStart
// (Event, Public, BlueprintEvent)

void UDarwinRocketDashPower::EventRocketDashStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRocketDashPower.EventRocketDashStart");

	UDarwinRocketDashPower_EventRocketDashStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRocketDashPower.EventRocketDashEnd
// (Event, Public, BlueprintEvent)

void UDarwinRocketDashPower::EventRocketDashEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRocketDashPower.EventRocketDashEnd");

	UDarwinRocketDashPower_EventRocketDashEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRocketDashPower.EventDashedCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinRocketDashPower::EventDashedCharacter(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRocketDashPower.EventDashedCharacter");

	UDarwinRocketDashPower_EventDashedCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRocketLeapPower.EventRocketLeap
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinRocketLeapPower::EventRocketLeap(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRocketLeapPower.EventRocketLeap");

	UDarwinRocketLeapPower_EventRocketLeap_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinRocketLeapPower.EventRocketLand
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinRocketLeapPower::EventRocketLand(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinRocketLeapPower.EventRocketLand");

	UDarwinRocketLeapPower_EventRocketLand_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSaveGame.UpdateHTCustomization
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerBodyType                body_type                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            shirt_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            shirt_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            pants_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            pants_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            skin_skel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            skin_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            armor_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            Armor_Mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            boots_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            boots_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            coat_skel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            coat_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            axe_skel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            axe_mat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            bow_skel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            bow_mat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            helmet_skel                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            helmet_mat                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            eyes_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            hairs_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            hairs_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            face_paint                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinSaveGame::UpdateHTCustomization(EPlayerBodyType body_type, int shirt_skel, int shirt_mat, int pants_skel, int pants_mat, int skin_skel, int skin_mat, int armor_skel, int Armor_Mat, int boots_skel, int boots_mat, int coat_skel, int coat_mat, int axe_skel, int axe_mat, int bow_skel, int bow_mat, int helmet_skel, int helmet_mat, int eyes_mat, int hairs_skel, int hairs_mat, int face_paint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSaveGame.UpdateHTCustomization");

	UDarwinSaveGame_UpdateHTCustomization_Params params;
	params.body_type = body_type;
	params.shirt_skel = shirt_skel;
	params.shirt_mat = shirt_mat;
	params.pants_skel = pants_skel;
	params.pants_mat = pants_mat;
	params.skin_skel = skin_skel;
	params.skin_mat = skin_mat;
	params.armor_skel = armor_skel;
	params.Armor_Mat = Armor_Mat;
	params.boots_skel = boots_skel;
	params.boots_mat = boots_mat;
	params.coat_skel = coat_skel;
	params.coat_mat = coat_mat;
	params.axe_skel = axe_skel;
	params.axe_mat = axe_mat;
	params.bow_skel = bow_skel;
	params.bow_mat = bow_mat;
	params.helmet_skel = helmet_skel;
	params.helmet_mat = helmet_mat;
	params.eyes_mat = eyes_mat;
	params.hairs_skel = hairs_skel;
	params.hairs_mat = hairs_mat;
	params.face_paint = face_paint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSaveGame.UpdateCustomization
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerBodyType                body_type                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            shirt_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            shirt_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            pants_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            pants_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            skin_skel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            skin_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            armor_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            Armor_Mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            boots_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            boots_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            coat_skel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            coat_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            axe_skel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            axe_mat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            bow_skel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            bow_mat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            helmet_skel                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            helmet_mat                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            eyes_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            hairs_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            hairs_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            beard_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            beard_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            face_paint                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinSaveGame::UpdateCustomization(EPlayerBodyType body_type, int shirt_skel, int shirt_mat, int pants_skel, int pants_mat, int skin_skel, int skin_mat, int armor_skel, int Armor_Mat, int boots_skel, int boots_mat, int coat_skel, int coat_mat, int axe_skel, int axe_mat, int bow_skel, int bow_mat, int helmet_skel, int helmet_mat, int eyes_mat, int hairs_skel, int hairs_mat, int beard_skel, int beard_mat, int face_paint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSaveGame.UpdateCustomization");

	UDarwinSaveGame_UpdateCustomization_Params params;
	params.body_type = body_type;
	params.shirt_skel = shirt_skel;
	params.shirt_mat = shirt_mat;
	params.pants_skel = pants_skel;
	params.pants_mat = pants_mat;
	params.skin_skel = skin_skel;
	params.skin_mat = skin_mat;
	params.armor_skel = armor_skel;
	params.Armor_Mat = Armor_Mat;
	params.boots_skel = boots_skel;
	params.boots_mat = boots_mat;
	params.coat_skel = coat_skel;
	params.coat_mat = coat_mat;
	params.axe_skel = axe_skel;
	params.axe_mat = axe_mat;
	params.bow_skel = bow_skel;
	params.bow_mat = bow_mat;
	params.helmet_skel = helmet_skel;
	params.helmet_mat = helmet_mat;
	params.eyes_mat = eyes_mat;
	params.hairs_skel = hairs_skel;
	params.hairs_mat = hairs_mat;
	params.beard_skel = beard_skel;
	params.beard_mat = beard_mat;
	params.face_paint = face_paint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSaveGame.UpdateBGCustomization
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerBodyType                body_type                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            shirt_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            shirt_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            pants_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            pants_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            skin_skel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            skin_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            armor_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            Armor_Mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            boots_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            boots_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            coat_skel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            coat_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            axe_skel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            axe_mat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            bow_skel                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            bow_mat                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            helmet_skel                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            helmet_mat                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            eyes_mat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            hairs_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            hairs_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            beard_skel                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            beard_mat                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            face_paint                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinSaveGame::UpdateBGCustomization(EPlayerBodyType body_type, int shirt_skel, int shirt_mat, int pants_skel, int pants_mat, int skin_skel, int skin_mat, int armor_skel, int Armor_Mat, int boots_skel, int boots_mat, int coat_skel, int coat_mat, int axe_skel, int axe_mat, int bow_skel, int bow_mat, int helmet_skel, int helmet_mat, int eyes_mat, int hairs_skel, int hairs_mat, int beard_skel, int beard_mat, int face_paint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSaveGame.UpdateBGCustomization");

	UDarwinSaveGame_UpdateBGCustomization_Params params;
	params.body_type = body_type;
	params.shirt_skel = shirt_skel;
	params.shirt_mat = shirt_mat;
	params.pants_skel = pants_skel;
	params.pants_mat = pants_mat;
	params.skin_skel = skin_skel;
	params.skin_mat = skin_mat;
	params.armor_skel = armor_skel;
	params.Armor_Mat = Armor_Mat;
	params.boots_skel = boots_skel;
	params.boots_mat = boots_mat;
	params.coat_skel = coat_skel;
	params.coat_mat = coat_mat;
	params.axe_skel = axe_skel;
	params.axe_mat = axe_mat;
	params.bow_skel = bow_skel;
	params.bow_mat = bow_mat;
	params.helmet_skel = helmet_skel;
	params.helmet_mat = helmet_mat;
	params.eyes_mat = eyes_mat;
	params.hairs_skel = hairs_skel;
	params.hairs_mat = hairs_mat;
	params.beard_skel = beard_skel;
	params.beard_mat = beard_mat;
	params.face_paint = face_paint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSaveGame.ResetGraphicSettingsToDefault
// (Final, Native, Public, BlueprintCallable)

void UDarwinSaveGame::ResetGraphicSettingsToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSaveGame.ResetGraphicSettingsToDefault");

	UDarwinSaveGame_ResetGraphicSettingsToDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSaveGame.ResetGamepadSettingsToDefault
// (Final, Native, Public, BlueprintCallable)

void UDarwinSaveGame::ResetGamepadSettingsToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSaveGame.ResetGamepadSettingsToDefault");

	UDarwinSaveGame_ResetGamepadSettingsToDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSaveGame.ResetGamepadInputBinding
// (Final, Native, Public, BlueprintCallable)

void UDarwinSaveGame::ResetGamepadInputBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSaveGame.ResetGamepadInputBinding");

	UDarwinSaveGame_ResetGamepadInputBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSaveGame.ResetControllerSettingsToDefault
// (Final, Native, Public, BlueprintCallable)

void UDarwinSaveGame::ResetControllerSettingsToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSaveGame.ResetControllerSettingsToDefault");

	UDarwinSaveGame_ResetControllerSettingsToDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSaveGame.ResetAudioSettingsToDefault
// (Final, Native, Public, BlueprintCallable)

void UDarwinSaveGame::ResetAudioSettingsToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSaveGame.ResetAudioSettingsToDefault");

	UDarwinSaveGame_ResetAudioSettingsToDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSaveGame.Copy
// (Final, Native, Public)
// Parameters:
// class UDarwinSaveGame*         Other                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UDarwinSaveGame::Copy(class UDarwinSaveGame* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSaveGame.Copy");

	UDarwinSaveGame_Copy_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.IsOwnerBloodPactedTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinScreendicatorWidget::IsOwnerBloodPactedTo(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.IsOwnerBloodPactedTo");

	UDarwinScreendicatorWidget_IsOwnerBloodPactedTo_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.IsOwnerADrone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinScreendicatorWidget::IsOwnerADrone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.IsOwnerADrone");

	UDarwinScreendicatorWidget_IsOwnerADrone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.IsGameStarted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinScreendicatorWidget::IsGameStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.IsGameStarted");

	UDarwinScreendicatorWidget_IsGameStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.IsDarwinCharacterOwnerAiming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinScreendicatorWidget::IsDarwinCharacterOwnerAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.IsDarwinCharacterOwnerAiming");

	UDarwinScreendicatorWidget_IsDarwinCharacterOwnerAiming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.IsCraftableToolFriendly
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           bOutIsLocal                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinScreendicatorWidget::IsCraftableToolFriendly(bool* bOutIsLocal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.IsCraftableToolFriendly");

	UDarwinScreendicatorWidget_IsCraftableToolFriendly_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bOutIsLocal != nullptr)
		*bOutIsLocal = params.bOutIsLocal;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.IsCraftableToolActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinScreendicatorWidget::IsCraftableToolActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.IsCraftableToolActive");

	UDarwinScreendicatorWidget_IsCraftableToolActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.HarvestedFirstTree
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinScreendicatorWidget::HarvestedFirstTree()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.HarvestedFirstTree");

	UDarwinScreendicatorWidget_HarvestedFirstTree_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.GetPlayerColorGradientFromID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FDarwinColorGradient    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDarwinColorGradient UDarwinScreendicatorWidget::GetPlayerColorGradientFromID(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.GetPlayerColorGradientFromID");

	UDarwinScreendicatorWidget_GetPlayerColorGradientFromID_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.GetNumberOfGamesPlayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinScreendicatorWidget::GetNumberOfGamesPlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.GetNumberOfGamesPlayed");

	UDarwinScreendicatorWidget_GetNumberOfGamesPlayed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.GetNetAvatarFromID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UDarwinScreendicatorWidget::GetNetAvatarFromID(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.GetNetAvatarFromID");

	UDarwinScreendicatorWidget_GetNetAvatarFromID_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.GetManHuntTimeLeft
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinScreendicatorWidget::GetManHuntTimeLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.GetManHuntTimeLeft");

	UDarwinScreendicatorWidget_GetManHuntTimeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.GetBloodPactDeadTimerNormalized
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDarwinScreendicatorWidget::GetBloodPactDeadTimerNormalized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.GetBloodPactDeadTimerNormalized");

	UDarwinScreendicatorWidget_GetBloodPactDeadTimerNormalized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.GetBloodPactDeadTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDarwinScreendicatorWidget::GetBloodPactDeadTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.GetBloodPactDeadTimer");

	UDarwinScreendicatorWidget_GetBloodPactDeadTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.GetBloodPactDead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinScreendicatorWidget::GetBloodPactDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.GetBloodPactDead");

	UDarwinScreendicatorWidget_GetBloodPactDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.FollowCamPlayerIsAlliedToFocusPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinScreendicatorWidget::FollowCamPlayerIsAlliedToFocusPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.FollowCamPlayerIsAlliedToFocusPlayer");

	UDarwinScreendicatorWidget_FollowCamPlayerIsAlliedToFocusPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinScreendicatorWidget.EventUpdateScreendication
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Angle                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          arrowScale                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Opacity                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           onScreen                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           behindCam                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinScreendicatorWidget::EventUpdateScreendication(float Angle, float arrowScale, float Distance, float Opacity, bool onScreen, bool behindCam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventUpdateScreendication");

	UDarwinScreendicatorWidget_EventUpdateScreendication_Params params;
	params.Angle = Angle;
	params.arrowScale = arrowScale;
	params.Distance = Distance;
	params.Opacity = Opacity;
	params.onScreen = onScreen;
	params.behindCam = behindCam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventUpdatePylonHarvestProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          harvestProgress                (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinScreendicatorWidget::EventUpdatePylonHarvestProgress(float harvestProgress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventUpdatePylonHarvestProgress");

	UDarwinScreendicatorWidget_EventUpdatePylonHarvestProgress_Params params;
	params.harvestProgress = harvestProgress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventUpdatePoopTime
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            timeLeft                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinScreendicatorWidget::EventUpdatePoopTime(int timeLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventUpdatePoopTime");

	UDarwinScreendicatorWidget_EventUpdatePoopTime_Params params;
	params.timeLeft = timeLeft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventUpdatePlayerStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Stamina                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          health                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Cold                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinScreendicatorWidget::EventUpdatePlayerStatus(float Stamina, float health, float Cold)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventUpdatePlayerStatus");

	UDarwinScreendicatorWidget_EventUpdatePlayerStatus_Params params;
	params.Stamina = Stamina;
	params.health = health;
	params.Cold = Cold;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventUpdateClueTime
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            timeLeft                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinScreendicatorWidget::EventUpdateClueTime(int timeLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventUpdateClueTime");

	UDarwinScreendicatorWidget_EventUpdateClueTime_Params params;
	params.timeLeft = timeLeft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventSetDarwinPlayerName
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 playerName                     (Parm, ZeroConstructor)

void UDarwinScreendicatorWidget::EventSetDarwinPlayerName(const struct FString& playerName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventSetDarwinPlayerName");

	UDarwinScreendicatorWidget_EventSetDarwinPlayerName_Params params;
	params.playerName = playerName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventSetDarwinItemType
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinScreendicatorWidget::EventSetDarwinItemType(EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventSetDarwinItemType");

	UDarwinScreendicatorWidget_EventSetDarwinItemType_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventSetCharacterUniqueID
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinScreendicatorWidget::EventSetCharacterUniqueID(int UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventSetCharacterUniqueID");

	UDarwinScreendicatorWidget_EventSetCharacterUniqueID_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventPylonHarvestStart
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 harvesterName                  (Parm, ZeroConstructor)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinScreendicatorWidget::EventPylonHarvestStart(const struct FString& harvesterName, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventPylonHarvestStart");

	UDarwinScreendicatorWidget_EventPylonHarvestStart_Params params;
	params.harvesterName = harvesterName;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventPylonHarvestEnd
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventPylonHarvestEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventPylonHarvestEnd");

	UDarwinScreendicatorWidget_EventPylonHarvestEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventLeaveScreen
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventLeaveScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventLeaveScreen");

	UDarwinScreendicatorWidget_EventLeaveScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventLeaveOpacityRangeMin
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventLeaveOpacityRangeMin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventLeaveOpacityRangeMin");

	UDarwinScreendicatorWidget_EventLeaveOpacityRangeMin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventLeaveOpacityRangeMax
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventLeaveOpacityRangeMax()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventLeaveOpacityRangeMax");

	UDarwinScreendicatorWidget_EventLeaveOpacityRangeMax_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventLeaveInteractionRadius
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventLeaveInteractionRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventLeaveInteractionRadius");

	UDarwinScreendicatorWidget_EventLeaveInteractionRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventLeaveCenter
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventLeaveCenter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventLeaveCenter");

	UDarwinScreendicatorWidget_EventLeaveCenter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventLeaveCamStateCharacter
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventLeaveCamStateCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventLeaveCamStateCharacter");

	UDarwinScreendicatorWidget_EventLeaveCamStateCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventIsDeadDeer
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventIsDeadDeer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventIsDeadDeer");

	UDarwinScreendicatorWidget_EventIsDeadDeer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventEnterScreen
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventEnterScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventEnterScreen");

	UDarwinScreendicatorWidget_EventEnterScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventEnterOpacityRangeMin
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventEnterOpacityRangeMin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventEnterOpacityRangeMin");

	UDarwinScreendicatorWidget_EventEnterOpacityRangeMin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventEnterOpacityRangeMax
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventEnterOpacityRangeMax()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventEnterOpacityRangeMax");

	UDarwinScreendicatorWidget_EventEnterOpacityRangeMax_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventEnterInteractionRadius
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventEnterInteractionRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventEnterInteractionRadius");

	UDarwinScreendicatorWidget_EventEnterInteractionRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventEnterCenter
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventEnterCenter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventEnterCenter");

	UDarwinScreendicatorWidget_EventEnterCenter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventEnterCamStateCharacter
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventEnterCamStateCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventEnterCamStateCharacter");

	UDarwinScreendicatorWidget_EventEnterCamStateCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventClueNinjaVanish
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventClueNinjaVanish()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventClueNinjaVanish");

	UDarwinScreendicatorWidget_EventClueNinjaVanish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinScreendicatorWidget.EventBloodPactDeadHeartbeat
// (Event, Public, BlueprintEvent)

void UDarwinScreendicatorWidget::EventBloodPactDeadHeartbeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinScreendicatorWidget.EventBloodPactDeadHeartbeat");

	UDarwinScreendicatorWidget_EventBloodPactDeadHeartbeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.ServerThrowProjectile
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 dir                            (Parm, IsPlainOldData)
// struct FVector                 base_velocity                  (Parm, IsPlainOldData)
// float                          AimTotalTime                   (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        heathSeekTarget                (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::ServerThrowProjectile(const struct FVector& dir, const struct FVector& base_velocity, float AimTotalTime, class ADarwinCharacter* heathSeekTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.ServerThrowProjectile");

	UDarwinShootingComponent_ServerThrowProjectile_Params params;
	params.dir = dir;
	params.base_velocity = base_velocity;
	params.AimTotalTime = AimTotalTime;
	params.heathSeekTarget = heathSeekTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.ServerIncrementSniperZoom
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinShootingComponent::ServerIncrementSniperZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.ServerIncrementSniperZoom");

	UDarwinShootingComponent_ServerIncrementSniperZoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.ServerDecrementSniperZoom
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinShootingComponent::ServerDecrementSniperZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.ServerDecrementSniperZoom");

	UDarwinShootingComponent_ServerDecrementSniperZoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.ServerAimStart
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bResetZoom                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::ServerAimStart(bool bResetZoom)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.ServerAimStart");

	UDarwinShootingComponent_ServerAimStart_Params params;
	params.bResetZoom = bResetZoom;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.ServerAimEnd
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinShootingComponent::ServerAimEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.ServerAimEnd");

	UDarwinShootingComponent_ServerAimEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.ServerAddProjectile
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            N                              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::ServerAddProjectile(int N)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.ServerAddProjectile");

	UDarwinShootingComponent_ServerAddProjectile_Params params;
	params.N = N;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.NetMulticastShootSuccess
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADarwinProjectile*       projectile                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::NetMulticastShootSuccess(class ADarwinProjectile* projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.NetMulticastShootSuccess");

	UDarwinShootingComponent_NetMulticastShootSuccess_Params params;
	params.projectile = projectile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.NetMulticastShootFail
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UDarwinShootingComponent::NetMulticastShootFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.NetMulticastShootFail");

	UDarwinShootingComponent_NetMulticastShootFail_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.NetMulticastIncrementSniperZoom
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinShootingComponent::NetMulticastIncrementSniperZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.NetMulticastIncrementSniperZoom");

	UDarwinShootingComponent_NetMulticastIncrementSniperZoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.NetMulticastDecrementSniperZoom
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinShootingComponent::NetMulticastDecrementSniperZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.NetMulticastDecrementSniperZoom");

	UDarwinShootingComponent_NetMulticastDecrementSniperZoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.NetMulticastAimStart
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bResetZoom                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::NetMulticastAimStart(bool bResetZoom)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.NetMulticastAimStart");

	UDarwinShootingComponent_NetMulticastAimStart_Params params;
	params.bResetZoom = bResetZoom;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.NetMulticastAimEnd
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinShootingComponent::NetMulticastAimEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.NetMulticastAimEnd");

	UDarwinShootingComponent_NetMulticastAimEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.EventSimulatedShootSuccess
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::EventSimulatedShootSuccess(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.EventSimulatedShootSuccess");

	UDarwinShootingComponent_EventSimulatedShootSuccess_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.EventSimulatedShootFail
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::EventSimulatedShootFail(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.EventSimulatedShootFail");

	UDarwinShootingComponent_EventSimulatedShootFail_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.EventSimulatedAimStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::EventSimulatedAimStart(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.EventSimulatedAimStart");

	UDarwinShootingComponent_EventSimulatedAimStart_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.EventSimulatedAimEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::EventSimulatedAimEnd(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.EventSimulatedAimEnd");

	UDarwinShootingComponent_EventSimulatedAimEnd_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.EventLocalShootSuccess
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::EventLocalShootSuccess(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.EventLocalShootSuccess");

	UDarwinShootingComponent_EventLocalShootSuccess_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.EventLocalShootFail
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::EventLocalShootFail(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.EventLocalShootFail");

	UDarwinShootingComponent_EventLocalShootFail_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.EventLocalAimStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::EventLocalAimStart(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.EventLocalAimStart");

	UDarwinShootingComponent_EventLocalAimStart_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.EventLocalAimEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::EventLocalAimEnd(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.EventLocalAimEnd");

	UDarwinShootingComponent_EventLocalAimEnd_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShootingComponent.AddProjectile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            N                              (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShootingComponent::AddProjectile(int N)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShootingComponent.AddProjectile");

	UDarwinShootingComponent_AddProjectile_Params params;
	params.N = N;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirector.TriggerVote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bOn                            (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinShowDirector::TriggerVote(bool bOn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirector.TriggerVote");

	ADarwinShowDirector_TriggerVote_Params params;
	params.bOn = bOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirector.ServerTriggerVote
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bOn                            (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinShowDirector::ServerTriggerVote(bool bOn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirector.ServerTriggerVote");

	ADarwinShowDirector_ServerTriggerVote_Params params;
	params.bOn = bOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirector.OnRepShowDirectorName
// (Final, Native, Public)

void ADarwinShowDirector::OnRepShowDirectorName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirector.OnRepShowDirectorName");

	ADarwinShowDirector_OnRepShowDirectorName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirector.EventUpdateGroundBlow
// (Event, Public, BlueprintEvent)

void ADarwinShowDirector::EventUpdateGroundBlow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirector.EventUpdateGroundBlow");

	ADarwinShowDirector_EventUpdateGroundBlow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirector.EventNewShowDirectorJoined
// (Event, Public, BlueprintEvent)

void ADarwinShowDirector::EventNewShowDirectorJoined()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirector.EventNewShowDirectorJoined");

	ADarwinShowDirector_EventNewShowDirectorJoined_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirector.EventLaunchIntroCam
// (Event, Public, BlueprintEvent)

void ADarwinShowDirector::EventLaunchIntroCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirector.EventLaunchIntroCam");

	ADarwinShowDirector_EventLaunchIntroCam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorPowerComponent.ServerSetPowerArray
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<EDarwinItemTypeEnum>    inPowerArray                   (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UDarwinShowDirectorPowerComponent::ServerSetPowerArray(TArray<EDarwinItemTypeEnum> inPowerArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorPowerComponent.ServerSetPowerArray");

	UDarwinShowDirectorPowerComponent_ServerSetPowerArray_Params params;
	params.inPowerArray = inPowerArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorPowerComponent.ServerSendToCrowdDecision
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShowDirectorPowerComponent::ServerSendToCrowdDecision(EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorPowerComponent.ServerSendToCrowdDecision");

	UDarwinShowDirectorPowerComponent_ServerSendToCrowdDecision_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorPowerComponent.ServerExecutePower
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class AActor*                  targetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShowDirectorPowerComponent::ServerExecutePower(class AActor* targetActor, const struct FVector& Loc, EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorPowerComponent.ServerExecutePower");

	UDarwinShowDirectorPowerComponent_ServerExecutePower_Params params;
	params.targetActor = targetActor;
	params.Loc = Loc;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorPowerComponent.NetMulticastIncrementMana
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinShowDirectorPowerComponent::NetMulticastIncrementMana()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorPowerComponent.NetMulticastIncrementMana");

	UDarwinShowDirectorPowerComponent_NetMulticastIncrementMana_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorPowerComponent.NetMulticastGameStartInit
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinShowDirectorPowerComponent::NetMulticastGameStartInit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorPowerComponent.NetMulticastGameStartInit");

	UDarwinShowDirectorPowerComponent_NetMulticastGameStartInit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorPowerComponent.NetMulticastExecutePower
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class AActor*                  targetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShowDirectorPowerComponent::NetMulticastExecutePower(class AActor* targetActor, const struct FVector& Loc, EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorPowerComponent.NetMulticastExecutePower");

	UDarwinShowDirectorPowerComponent_NetMulticastExecutePower_Params params;
	params.targetActor = targetActor;
	params.Loc = Loc;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorPowerComponent.EventExecutePower
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                  targetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShowDirectorPowerComponent::EventExecutePower(class AActor* targetActor, const struct FVector& Loc, EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorPowerComponent.EventExecutePower");

	UDarwinShowDirectorPowerComponent_EventExecutePower_Params params;
	params.targetActor = targetActor;
	params.Loc = Loc;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.SendToCrowdDecision
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// EPogCantExeType                outCantExeType                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinShowDirectorWidget::SendToCrowdDecision(EDarwinItemTypeEnum powerType, EPogCantExeType* outCantExeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.SendToCrowdDecision");

	UDarwinShowDirectorWidget_SendToCrowdDecision_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outCantExeType != nullptr)
		*outCantExeType = params.outCantExeType;

	return params.ReturnValue;
}


// Function Darwin.DarwinShowDirectorWidget.IsSpectatorExperienceActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDarwinShowDirectorWidget::IsSpectatorExperienceActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.IsSpectatorExperienceActive");

	UDarwinShowDirectorWidget_IsSpectatorExperienceActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinShowDirectorWidget.GetPylonClosestToLoc
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class ADarwinPylon*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADarwinPylon* UDarwinShowDirectorWidget::GetPylonClosestToLoc(const struct FVector2D& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.GetPylonClosestToLoc");

	UDarwinShowDirectorWidget_GetPylonClosestToLoc_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinShowDirectorWidget.GetCharacterClosestToLoc
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class ADarwinCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADarwinCharacter* UDarwinShowDirectorWidget::GetCharacterClosestToLoc(const struct FVector2D& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.GetCharacterClosestToLoc");

	UDarwinShowDirectorWidget_GetCharacterClosestToLoc_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinShowDirectorWidget.ExitPowerScreen
// (Final, Native, Public, BlueprintCallable)

void UDarwinShowDirectorWidget::ExitPowerScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.ExitPowerScreen");

	UDarwinShowDirectorWidget_ExitPowerScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventVoteStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            VoteDuration                   (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShowDirectorWidget::EventVoteStarted(int VoteDuration, EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventVoteStarted");

	UDarwinShowDirectorWidget_EventVoteStarted_Params params;
	params.VoteDuration = VoteDuration;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventVoteResultsReceived
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// bool                           bVoteForPlayers                (Parm, ZeroConstructor, IsPlainOldData)
// int                            TotalVoteCount                 (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UDarwinVoteResultForUMG*> VoteResults                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UDarwinShowDirectorWidget::EventVoteResultsReceived(bool bVoteForPlayers, int TotalVoteCount, TArray<class UDarwinVoteResultForUMG*> VoteResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventVoteResultsReceived");

	UDarwinShowDirectorWidget_EventVoteResultsReceived_Params params;
	params.bVoteForPlayers = bVoteForPlayers;
	params.TotalVoteCount = TotalVoteCount;
	params.VoteResults = VoteResults;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventUpdateSDPowerManaProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShowDirectorWidget::EventUpdateSDPowerManaProgress(float progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventUpdateSDPowerManaProgress");

	UDarwinShowDirectorWidget_EventUpdateSDPowerManaProgress_Params params;
	params.progress = progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventUpdateSDPowerCooldown
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShowDirectorWidget::EventUpdateSDPowerCooldown(float progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventUpdateSDPowerCooldown");

	UDarwinShowDirectorWidget_EventUpdateSDPowerCooldown_Params params;
	params.progress = progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventUpdateSDMana
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Mana                           (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShowDirectorWidget::EventUpdateSDMana(int Mana)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventUpdateSDMana");

	UDarwinShowDirectorWidget_EventUpdateSDMana_Params params;
	params.Mana = Mana;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventStartSDPowerCooldown
// (Event, Public, BlueprintEvent)

void UDarwinShowDirectorWidget::EventStartSDPowerCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventStartSDPowerCooldown");

	UDarwinShowDirectorWidget_EventStartSDPowerCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventSetShowDirectorName
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 showDirectorName               (Parm, ZeroConstructor)

void UDarwinShowDirectorWidget::EventSetShowDirectorName(const struct FString& showDirectorName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventSetShowDirectorName");

	UDarwinShowDirectorWidget_EventSetShowDirectorName_Params params;
	params.showDirectorName = showDirectorName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventPogUnHovered
// (Event, Public, BlueprintEvent)
// Parameters:
// class UDarwinPowerPog*         senderPog                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDarwinShowDirectorWidget::EventPogUnHovered(class UDarwinPowerPog* senderPog)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventPogUnHovered");

	UDarwinShowDirectorWidget_EventPogUnHovered_Params params;
	params.senderPog = senderPog;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventPogHovered
// (Event, Public, BlueprintEvent)
// Parameters:
// class UDarwinPowerPog*         senderPog                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDarwinShowDirectorWidget::EventPogHovered(class UDarwinPowerPog* senderPog)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventPogHovered");

	UDarwinShowDirectorWidget_EventPogHovered_Params params;
	params.senderPog = senderPog;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventPogClicked
// (Event, Public, BlueprintEvent)
// Parameters:
// class UDarwinPowerPog*         senderPog                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDarwinShowDirectorWidget::EventPogClicked(class UDarwinPowerPog* senderPog)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventPogClicked");

	UDarwinShowDirectorWidget_EventPogClicked_Params params;
	params.senderPog = senderPog;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventInitializeManaStuff
// (Event, Public, BlueprintEvent)

void UDarwinShowDirectorWidget::EventInitializeManaStuff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventInitializeManaStuff");

	UDarwinShowDirectorWidget_EventInitializeManaStuff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventGetPowerChosen
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                  targetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShowDirectorWidget::EventGetPowerChosen(class AActor* targetActor, const struct FVector& Loc, EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventGetPowerChosen");

	UDarwinShowDirectorWidget_EventGetPowerChosen_Params params;
	params.targetActor = targetActor;
	params.Loc = Loc;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventEndSDPowerCooldown
// (Event, Public, BlueprintEvent)

void UDarwinShowDirectorWidget::EventEndSDPowerCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventEndSDPowerCooldown");

	UDarwinShowDirectorWidget_EventEndSDPowerCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinShowDirectorWidget.EventAddPowerPog
// (Event, Public, BlueprintEvent)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinShowDirectorWidget::EventAddPowerPog(EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinShowDirectorWidget.EventAddPowerPog");

	UDarwinShowDirectorWidget_EventAddPowerPog_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSonarPower.EventSonarPulse
// (Event, Public, BlueprintEvent)

void UDarwinSonarPower::EventSonarPulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSonarPower.EventSonarPulse");

	UDarwinSonarPower_EventSonarPulse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSpectatorExperienceManager.ServerSendAccessToken
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 AccessToken                    (Parm, ZeroConstructor)

void UDarwinSpectatorExperienceManager::ServerSendAccessToken(const struct FString& AccessToken)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSpectatorExperienceManager.ServerSendAccessToken");

	UDarwinSpectatorExperienceManager_ServerSendAccessToken_Params params;
	params.AccessToken = AccessToken;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSpectatorPowerVoteManager.NetMulticastVoteResultsReceived
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bVoteForPlayers                (Parm, ZeroConstructor, IsPlainOldData)
// int                            TotalVoteCount                 (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FDarwinVoteResult> VoteResults                    (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UDarwinSpectatorPowerVoteManager::NetMulticastVoteResultsReceived(bool bVoteForPlayers, int TotalVoteCount, TArray<struct FDarwinVoteResult> VoteResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSpectatorPowerVoteManager.NetMulticastVoteResultsReceived");

	UDarwinSpectatorPowerVoteManager_NetMulticastVoteResultsReceived_Params params;
	params.bVoteForPlayers = bVoteForPlayers;
	params.TotalVoteCount = TotalVoteCount;
	params.VoteResults = VoteResults;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinSpectatorPowerVoteManager.NetMulticastStartVote
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinSpectatorPowerVoteManager::NetMulticastStartVote(EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinSpectatorPowerVoteManager.NetMulticastStartVote");

	UDarwinSpectatorPowerVoteManager_NetMulticastStartVote_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStaminaComponent.ServerSetReplicatedStamina
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          repStamina                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStaminaComponent::ServerSetReplicatedStamina(float repStamina)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStaminaComponent.ServerSetReplicatedStamina");

	UDarwinStaminaComponent_ServerSetReplicatedStamina_Params params;
	params.repStamina = repStamina;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStaminaComponent.ServerSetOutOfBreath
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStaminaComponent::ServerSetOutOfBreath(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStaminaComponent.ServerSetOutOfBreath");

	UDarwinStaminaComponent_ServerSetOutOfBreath_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStaminaComponent.NetMulticastSetOutOfBreath
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStaminaComponent::NetMulticastSetOutOfBreath(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStaminaComponent.NetMulticastSetOutOfBreath");

	UDarwinStaminaComponent_NetMulticastSetOutOfBreath_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.ServerSetGameStartStats
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            EloAtStart                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            EstimatedPing                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            AccuratePing                   (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::ServerSetGameStartStats(int EloAtStart, int EstimatedPing, int AccuratePing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.ServerSetGameStartStats");

	UDarwinStatComponent_ServerSetGameStartStats_Params params;
	params.EloAtStart = EloAtStart;
	params.EstimatedPing = EstimatedPing;
	params.AccuratePing = AccuratePing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncSuicide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinDamageTypeEnum          DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::IncSuicide(EDarwinDamageTypeEnum DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncSuicide");

	UDarwinStatComponent_IncSuicide_Params params;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncPowerUsedCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::IncPowerUsedCount(EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncPowerUsedCount");

	UDarwinStatComponent_IncPowerUsedCount_Params params;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncNumTripWireSucceeded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADarwinCharacter*        Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::IncNumTripWireSucceeded(class ADarwinCharacter* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncNumTripWireSucceeded");

	UDarwinStatComponent_IncNumTripWireSucceeded_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncNumManhuntSurvived
// (Final, Native, Public, BlueprintCallable)

void UDarwinStatComponent::IncNumManhuntSurvived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncNumManhuntSurvived");

	UDarwinStatComponent_IncNumManhuntSurvived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncNumManhuntKilled
// (Final, Native, Public, BlueprintCallable)

void UDarwinStatComponent::IncNumManhuntKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncNumManhuntKilled");

	UDarwinStatComponent_IncNumManhuntKilled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncNumGateUsed
// (Final, Native, Public, BlueprintCallable)

void UDarwinStatComponent::IncNumGateUsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncNumGateUsed");

	UDarwinStatComponent_IncNumGateUsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncNumDeerLooted
// (Final, Native, Public, BlueprintCallable)

void UDarwinStatComponent::IncNumDeerLooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncNumDeerLooted");

	UDarwinStatComponent_IncNumDeerLooted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncNumDecoyChestTrapSucceeded
// (Final, Native, Public, BlueprintCallable)

void UDarwinStatComponent::IncNumDecoyChestTrapSucceeded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncNumDecoyChestTrapSucceeded");

	UDarwinStatComponent_IncNumDecoyChestTrapSucceeded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncNumDecoyChestLooted
// (Final, Native, Public, BlueprintCallable)

void UDarwinStatComponent::IncNumDecoyChestLooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncNumDecoyChestLooted");

	UDarwinStatComponent_IncNumDecoyChestLooted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncNumChestLooted
// (Final, Native, Public, BlueprintCallable)

void UDarwinStatComponent::IncNumChestLooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncNumChestLooted");

	UDarwinStatComponent_IncNumChestLooted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncNumCageTrapSucceeded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADarwinCharacter*        Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::IncNumCageTrapSucceeded(class ADarwinCharacter* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncNumCageTrapSucceeded");

	UDarwinStatComponent_IncNumCageTrapSucceeded_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncNumBearTrapSucceeded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADarwinCharacter*        Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::IncNumBearTrapSucceeded(class ADarwinCharacter* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncNumBearTrapSucceeded");

	UDarwinStatComponent_IncNumBearTrapSucceeded_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncNumArrowsPickedUp
// (Final, Native, Public, BlueprintCallable)

void UDarwinStatComponent::IncNumArrowsPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncNumArrowsPickedUp");

	UDarwinStatComponent_IncNumArrowsPickedUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncMushroomHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinDamageTypeEnum          SourceType                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::IncMushroomHit(EDarwinDamageTypeEnum SourceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncMushroomHit");

	UDarwinStatComponent_IncMushroomHit_Params params;
	params.SourceType = SourceType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncArrowsHitObject
// (Final, Native, Public, BlueprintCallable)

void UDarwinStatComponent::IncArrowsHitObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncArrowsHitObject");

	UDarwinStatComponent_IncArrowsHitObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncArrowsHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::IncArrowsHit(float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncArrowsHit");

	UDarwinStatComponent_IncArrowsHit_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.IncArrowsHeadshot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::IncArrowsHeadshot(float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.IncArrowsHeadshot");

	UDarwinStatComponent_IncArrowsHeadshot_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumWoodHarvested
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumWoodHarvested(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumWoodHarvested");

	UDarwinStatComponent_AddNumWoodHarvested_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumTrapsLanded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumTrapsLanded(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumTrapsLanded");

	UDarwinStatComponent_AddNumTrapsLanded_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumRessourcesHarvested
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumRessourcesHarvested(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumRessourcesHarvested");

	UDarwinStatComponent_AddNumRessourcesHarvested_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumPowersCrafted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumPowersCrafted(int Value, EDarwinItemTypeEnum powerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumPowersCrafted");

	UDarwinStatComponent_AddNumPowersCrafted_Params params;
	params.Value = Value;
	params.powerType = powerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumLooted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumLooted(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumLooted");

	UDarwinStatComponent_AddNumLooted_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumLeatherHarvested
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumLeatherHarvested(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumLeatherHarvested");

	UDarwinStatComponent_AddNumLeatherHarvested_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumLavaKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumLavaKills(int Value, class ADarwinCharacter* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumLavaKills");

	UDarwinStatComponent_AddNumLavaKills_Params params;
	params.Value = Value;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Target                         (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinDamageTypeEnum          DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumKills(int Value, class ADarwinCharacter* Target, EDarwinDamageTypeEnum DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumKills");

	UDarwinStatComponent_AddNumKills_Params params;
	params.Value = Value;
	params.Target = Target;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumItemsCrafted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinItemTypeEnum            ItemType                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumItemsCrafted(int Value, EDarwinItemTypeEnum ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumItemsCrafted");

	UDarwinStatComponent_AddNumItemsCrafted_Params params;
	params.Value = Value;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumCPUHarvested
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumCPUHarvested(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumCPUHarvested");

	UDarwinStatComponent_AddNumCPUHarvested_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumCluesAcquired
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumCluesAcquired(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumCluesAcquired");

	UDarwinStatComponent_AddNumCluesAcquired_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddNumArrowsShot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddNumArrowsShot(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddNumArrowsShot");

	UDarwinStatComponent_AddNumArrowsShot_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddHavingPowerDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarwinItemTypeEnum            powerType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddHavingPowerDuration(EDarwinItemTypeEnum powerType, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddHavingPowerDuration");

	UDarwinStatComponent_AddHavingPowerDuration_Params params;
	params.powerType = powerType;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddDamageTaken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Origin                         (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinDamageTypeEnum          DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddDamageTaken(float Value, class ADarwinCharacter* Origin, EDarwinDamageTypeEnum DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddDamageTaken");

	UDarwinStatComponent_AddDamageTaken_Params params;
	params.Value = Value;
	params.Origin = Origin;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinStatComponent.AddDamageDone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// class ADarwinCharacter*        Target                         (Parm, ZeroConstructor, IsPlainOldData)
// EDarwinDamageTypeEnum          DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinStatComponent::AddDamageDone(float Value, class ADarwinCharacter* Target, EDarwinDamageTypeEnum DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinStatComponent.AddDamageDone");

	UDarwinStatComponent_AddDamageDone_Params params;
	params.Value = Value;
	params.Target = Target;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTechMushroom.NetMulticastExplode
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        instigatorCharacter            (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinTechMushroom::NetMulticastExplode(class ADarwinCharacter* instigatorCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTechMushroom.NetMulticastExplode");

	ADarwinTechMushroom_NetMulticastExplode_Params params;
	params.instigatorCharacter = instigatorCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTechMushroom.EventExplodeSimulated
// (Event, Public, BlueprintEvent)

void ADarwinTechMushroom::EventExplodeSimulated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTechMushroom.EventExplodeSimulated");

	ADarwinTechMushroom_EventExplodeSimulated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTechMushroom.EventExplodeAuthority
// (Event, Public, BlueprintEvent)

void ADarwinTechMushroom::EventExplodeAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTechMushroom.EventExplodeAuthority");

	ADarwinTechMushroom_EventExplodeAuthority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportAimingClone.CheckHiddenMaterials
// (Final, Native, Public, BlueprintCallable)

void ADarwinTeleportAimingClone::CheckHiddenMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportAimingClone.CheckHiddenMaterials");

	ADarwinTeleportAimingClone_CheckHiddenMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportFX.InitializeTeleportFX
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 StartLocation                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 endLocation                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinTeleportFX::InitializeTeleportFX(const struct FVector& StartLocation, const struct FVector& endLocation, class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportFX.InitializeTeleportFX");

	ADarwinTeleportFX_InitializeTeleportFX_Params params;
	params.StartLocation = StartLocation;
	params.endLocation = endLocation;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportFX.CheckHiddenMaterials
// (Final, Native, Public, BlueprintCallable)

void ADarwinTeleportFX::CheckHiddenMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportFX.CheckHiddenMaterials");

	ADarwinTeleportFX_CheckHiddenMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportPower.ServerTeleportActuate
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 teleportLoc                    (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UDarwinTeleportPower::ServerTeleportActuate(const struct FVector& teleportLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportPower.ServerTeleportActuate");

	UDarwinTeleportPower_ServerTeleportActuate_Params params;
	params.teleportLoc = teleportLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportPower.ServerSetAimingTeleportOn
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinTeleportPower::ServerSetAimingTeleportOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportPower.ServerSetAimingTeleportOn");

	UDarwinTeleportPower_ServerSetAimingTeleportOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportPower.ServerSetAimingTeleportOff
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDarwinTeleportPower::ServerSetAimingTeleportOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportPower.ServerSetAimingTeleportOff");

	UDarwinTeleportPower_ServerSetAimingTeleportOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportPower.NetMulticastTeleportActuate
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 StartLoc                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 EndLoc                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// bool                           bWithCoolDown                  (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinTeleportPower::NetMulticastTeleportActuate(const struct FVector& StartLoc, const struct FVector& EndLoc, bool bWithCoolDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportPower.NetMulticastTeleportActuate");

	UDarwinTeleportPower_NetMulticastTeleportActuate_Params params;
	params.StartLoc = StartLoc;
	params.EndLoc = EndLoc;
	params.bWithCoolDown = bWithCoolDown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportPower.NetMulticastSetAimingTeleportOn
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinTeleportPower::NetMulticastSetAimingTeleportOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportPower.NetMulticastSetAimingTeleportOn");

	UDarwinTeleportPower_NetMulticastSetAimingTeleportOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportPower.NetMulticastSetAimingTeleportOff
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinTeleportPower::NetMulticastSetAimingTeleportOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportPower.NetMulticastSetAimingTeleportOff");

	UDarwinTeleportPower_NetMulticastSetAimingTeleportOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportPower.EventTeleported
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 StartLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 EndLoc                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinTeleportPower::EventTeleported(const struct FVector& StartLoc, const struct FVector& EndLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportPower.EventTeleported");

	UDarwinTeleportPower_EventTeleported_Params params;
	params.StartLoc = StartLoc;
	params.EndLoc = EndLoc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportPower.EventSimulatedAimingTeleportStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinTeleportPower::EventSimulatedAimingTeleportStart(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportPower.EventSimulatedAimingTeleportStart");

	UDarwinTeleportPower_EventSimulatedAimingTeleportStart_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportPower.EventSimulatedAimingTeleportEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinTeleportPower::EventSimulatedAimingTeleportEnd(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportPower.EventSimulatedAimingTeleportEnd");

	UDarwinTeleportPower_EventSimulatedAimingTeleportEnd_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportPower.EventLocalAimingTeleportStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinTeleportPower::EventLocalAimingTeleportStart(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportPower.EventLocalAimingTeleportStart");

	UDarwinTeleportPower_EventLocalAimingTeleportStart_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTeleportPower.EventLocalAimingTeleportEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinTeleportPower::EventLocalAimingTeleportEnd(class ADarwinCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTeleportPower.EventLocalAimingTeleportEnd");

	UDarwinTeleportPower_EventLocalAimingTeleportEnd_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTripwire.NetMulticastTripwireHitByAxe
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinCharacter*        characterTarget                (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinTripwire::NetMulticastTripwireHitByAxe(class ADarwinCharacter* characterTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTripwire.NetMulticastTripwireHitByAxe");

	ADarwinTripwire_NetMulticastTripwireHitByAxe_Params params;
	params.characterTarget = characterTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTurret.NetMulticastShootZombie
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADarwinZombie*           zombie                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinTurret::NetMulticastShootZombie(class ADarwinZombie* zombie)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTurret.NetMulticastShootZombie");

	ADarwinTurret_NetMulticastShootZombie_Params params;
	params.zombie = zombie;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTurret.NetMulticastShoot
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class ADarwinCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 toLoc                          (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// ETurretHitType                 hitType                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinTurret::NetMulticastShoot(class ADarwinCharacter* Character, const struct FVector& toLoc, ETurretHitType hitType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTurret.NetMulticastShoot");

	ADarwinTurret_NetMulticastShoot_Params params;
	params.Character = Character;
	params.toLoc = toLoc;
	params.hitType = hitType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTurret.EventUpdateTurretRotation
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FRotator                rot                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinTurret::EventUpdateTurretRotation(const struct FRotator& rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTurret.EventUpdateTurretRotation");

	ADarwinTurret_EventUpdateTurretRotation_Params params;
	params.rot = rot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTurret.EventUpdateConeSize
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Size                           (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinTurret::EventUpdateConeSize(float Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTurret.EventUpdateConeSize");

	ADarwinTurret_EventUpdateConeSize_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTurret.EventUpdateConeOpacity
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Opacity                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinTurret::EventUpdateConeOpacity(float Opacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTurret.EventUpdateConeOpacity");

	ADarwinTurret_EventUpdateConeOpacity_Params params;
	params.Opacity = Opacity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTurret.EventTurretShoot
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 fromLoc                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 toLoc                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// ETurretHitType                 hitType                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinTurret::EventTurretShoot(const struct FVector& fromLoc, const struct FVector& toLoc, ETurretHitType hitType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTurret.EventTurretShoot");

	ADarwinTurret_EventTurretShoot_Params params;
	params.fromLoc = fromLoc;
	params.toLoc = toLoc;
	params.hitType = hitType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTurret.EventTurretMakeSound
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinTurret::EventTurretMakeSound(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTurret.EventTurretMakeSound");

	ADarwinTurret_EventTurretMakeSound_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTurret.EventTurretIsNowDeployed
// (Event, Public, BlueprintEvent)

void ADarwinTurret::EventTurretIsNowDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTurret.EventTurretIsNowDeployed");

	ADarwinTurret_EventTurretIsNowDeployed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinTurret.EventDeployTurret
// (Event, Public, BlueprintEvent)

void ADarwinTurret::EventDeployTurret()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinTurret.EventDeployTurret");

	ADarwinTurret_EventDeployTurret_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinWalkSpeedComponent.ServerSetWalkSpeed
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          Multiplier                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinWalkSpeedComponent::ServerSetWalkSpeed(float Multiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinWalkSpeedComponent.ServerSetWalkSpeed");

	UDarwinWalkSpeedComponent_ServerSetWalkSpeed_Params params;
	params.Multiplier = Multiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinWalkSpeedComponent.NetMulticastExecuteRollLanding
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDarwinWalkSpeedComponent::NetMulticastExecuteRollLanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinWalkSpeedComponent.NetMulticastExecuteRollLanding");

	UDarwinWalkSpeedComponent_NetMulticastExecuteRollLanding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinWalkSpeedComponent.NetMulticastExecuteHardLanding
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                          Multiplier                     (Parm, ZeroConstructor, IsPlainOldData)

void UDarwinWalkSpeedComponent::NetMulticastExecuteHardLanding(float Multiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinWalkSpeedComponent.NetMulticastExecuteHardLanding");

	UDarwinWalkSpeedComponent_NetMulticastExecuteHardLanding_Params params;
	params.Multiplier = Multiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinWalkSpeedComponent.EventStopSprint
// (Event, Public, BlueprintEvent)

void UDarwinWalkSpeedComponent::EventStopSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinWalkSpeedComponent.EventStopSprint");

	UDarwinWalkSpeedComponent_EventStopSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinWalkSpeedComponent.EventStartSprint
// (Event, Public, BlueprintEvent)

void UDarwinWalkSpeedComponent::EventStartSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinWalkSpeedComponent.EventStartSprint");

	UDarwinWalkSpeedComponent_EventStartSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinWalkSpeedComponent.EventFootPrintSpeedBoost
// (Event, Public, BlueprintEvent)

void UDarwinWalkSpeedComponent::EventFootPrintSpeedBoost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinWalkSpeedComponent.EventFootPrintSpeedBoost");

	UDarwinWalkSpeedComponent_EventFootPrintSpeedBoost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinWard.EventWardPing
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinWard::EventWardPing(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinWard.EventWardPing");

	ADarwinWard_EventWardPing_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinWindow.EventBreakWindow
// (Event, Public, BlueprintEvent)

void ADarwinWindow::EventBreakWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinWindow.EventBreakWindow");

	ADarwinWindow_EventBreakWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinWonderLeapPower.EventWonderLeap
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinWonderLeapPower::EventWonderLeap(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinWonderLeapPower.EventWonderLeap");

	UDarwinWonderLeapPower_EventWonderLeap_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinWonderLeapPower.EventWonderLand
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDarwinWonderLeapPower::EventWonderLand(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinWonderLeapPower.EventWonderLand");

	UDarwinWonderLeapPower_EventWonderLand_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZombie.NetMulticastHitByWeapon
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinZombie::NetMulticastHitByWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZombie.NetMulticastHitByWeapon");

	ADarwinZombie_NetMulticastHitByWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZombie.EventSetAllRenderCustomDepth
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           render                         (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinZombie::EventSetAllRenderCustomDepth(bool render)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZombie.EventSetAllRenderCustomDepth");

	ADarwinZombie_EventSetAllRenderCustomDepth_Params params;
	params.render = render;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZombie.EventSetAllCustomDepthStencilValue
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinZombie::EventSetAllCustomDepthStencilValue(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZombie.EventSetAllCustomDepthStencilValue");

	ADarwinZombie_EventSetAllCustomDepthStencilValue_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZombie.EventHitByWeapon
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class ADarwinZombie*           zombie                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinZombie::EventHitByWeapon(class ADarwinZombie* zombie, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZombie.EventHitByWeapon");

	ADarwinZombie_EventHitByWeapon_Params params;
	params.zombie = zombie;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.WillBeOrIsForbidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinZone::WillBeOrIsForbidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.WillBeOrIsForbidden");

	ADarwinZone_WillBeOrIsForbidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinZone.WillBeForbidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinZone::WillBeForbidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.WillBeForbidden");

	ADarwinZone_WillBeForbidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinZone.NetMulticastSuddenDeath
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinZone::NetMulticastSuddenDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.NetMulticastSuddenDeath");

	ADarwinZone_NetMulticastSuddenDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.NetMulticastInitiateZoneClosing
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bFromSD                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinZone::NetMulticastInitiateZoneClosing(bool bFromSD)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.NetMulticastInitiateZoneClosing");

	ADarwinZone_NetMulticastInitiateZoneClosing_Params params;
	params.bFromSD = bFromSD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.NetMulticastInitiateNuclearBlast
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinZone::NetMulticastInitiateNuclearBlast()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.NetMulticastInitiateNuclearBlast");

	ADarwinZone_NetMulticastInitiateNuclearBlast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.NetMulticastCloseZone
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADarwinZone::NetMulticastCloseZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.NetMulticastCloseZone");

	ADarwinZone_NetMulticastCloseZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.ManageSuddenDeath
// (Final, Native, Public)
// Parameters:
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinZone::ManageSuddenDeath(float Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.ManageSuddenDeath");

	ADarwinZone_ManageSuddenDeath_Params params;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.IsForbidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADarwinZone::IsForbidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.IsForbidden");

	ADarwinZone_IsForbidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.DarwinZone.InitiateNuclearBlast
// (Final, Native, Public, BlueprintCallable)

void ADarwinZone::InitiateNuclearBlast()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.InitiateNuclearBlast");

	ADarwinZone_InitiateNuclearBlast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.EventWillBeForbidden
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bFromSD                        (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinZone::EventWillBeForbidden(bool bFromSD)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.EventWillBeForbidden");

	ADarwinZone_EventWillBeForbidden_Params params;
	params.bFromSD = bFromSD;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.EventUpdateSuddenDeath
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinZone::EventUpdateSuddenDeath(float Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.EventUpdateSuddenDeath");

	ADarwinZone_EventUpdateSuddenDeath_Params params;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.EventSuddenDeath
// (Event, Public, BlueprintEvent)

void ADarwinZone::EventSuddenDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.EventSuddenDeath");

	ADarwinZone_EventSuddenDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.EventNuclearBlastStart
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinZone::EventNuclearBlastStart(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.EventNuclearBlastStart");

	ADarwinZone_EventNuclearBlastStart_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.EventNuclearBlastEnd
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADarwinZone::EventNuclearBlastEnd(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.EventNuclearBlastEnd");

	ADarwinZone_EventNuclearBlastEnd_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.EventNuclearBlastCountdownInitiated
// (Event, Public, BlueprintEvent)

void ADarwinZone::EventNuclearBlastCountdownInitiated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.EventNuclearBlastCountdownInitiated");

	ADarwinZone_EventNuclearBlastCountdownInitiated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.DarwinZone.EventForbiddenZone
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            numberOfZonesLeft              (Parm, ZeroConstructor, IsPlainOldData)

void ADarwinZone::EventForbiddenZone(int numberOfZonesLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.DarwinZone.EventForbiddenZone");

	ADarwinZone_EventForbiddenZone_Params params;
	params.numberOfZonesLeft = numberOfZonesLeft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.InputKeyRebindingManager.ResetBindingsToDefault
// (Final, Native, Public, BlueprintCallable)

void UInputKeyRebindingManager::ResetBindingsToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.InputKeyRebindingManager.ResetBindingsToDefault");

	UInputKeyRebindingManager_ResetBindingsToDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.InputKeyRebindingManager.RequestActionRebindKey
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UInputKeyRebindingManager::RequestActionRebindKey(const struct FName& ActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.InputKeyRebindingManager.RequestActionRebindKey");

	UInputKeyRebindingManager_RequestActionRebindKey_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.InputKeyRebindingManager.RefuseKeyBinding
// (Final, Native, Public, BlueprintCallable)

void UInputKeyRebindingManager::RefuseKeyBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.InputKeyRebindingManager.RefuseKeyBinding");

	UInputKeyRebindingManager_RefuseKeyBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.InputKeyRebindingManager.GetKeyName
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKey                    Key                            (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UInputKeyRebindingManager::GetKeyName(const struct FKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.InputKeyRebindingManager.GetKeyName");

	UInputKeyRebindingManager_GetKeyName_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.InputKeyRebindingManager.GetCollidingActionName
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UInputKeyRebindingManager::GetCollidingActionName(const struct FName& ActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.InputKeyRebindingManager.GetCollidingActionName");

	UInputKeyRebindingManager_GetCollidingActionName_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.InputKeyRebindingManager.GetActionName
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UInputKeyRebindingManager::GetActionName(const struct FName& ActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.InputKeyRebindingManager.GetActionName");

	UInputKeyRebindingManager_GetActionName_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.InputKeyRebindingManager.GetActionKeyName
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UInputKeyRebindingManager::GetActionKeyName(const struct FName& ActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.InputKeyRebindingManager.GetActionKeyName");

	UInputKeyRebindingManager_GetActionKeyName_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Darwin.InputKeyRebindingManager.AcceptKeyBinding
// (Final, Native, Public, BlueprintCallable)

void UInputKeyRebindingManager::AcceptKeyBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.InputKeyRebindingManager.AcceptKeyBinding");

	UInputKeyRebindingManager_AcceptKeyBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Darwin.LootBoxSettings.GetLootItemData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 UniqueId                       (Parm, ZeroConstructor)
// struct FItemLoot               ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FItemLoot ULootBoxSettings::GetLootItemData(const struct FString& UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Darwin.LootBoxSettings.GetLootItemData");

	ULootBoxSettings_GetLootItemData_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
